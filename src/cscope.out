cscope 15 $HOME/projects/tetris               0000442547
	@block.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

5 
	~"bﬂrd.h
"

6 
	~"block.h
"

7 
	~"utû.h
"

9 
Move
 
	gblock_off£t
[4] = {

13 
boﬁ
 
	gblock_i_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

20 
boﬁ
 
	gblock_j_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

27 
boﬁ
 
	gblock_l_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

34 
boﬁ
 
	gblock_o_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

41 
boﬁ
 
	gblock_s_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

48 
boﬁ
 
	gblock_t_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

55 
boﬁ
 
	gblock_z_¨r
[
BLOCK_ARR_DIM
][BLOCK_ARR_DIM] = {

62 
Move
 
	$block_gë_rŸ©i⁄_off£t
(
BlockTy≥
 
ty≥
, 
RŸ©i⁄
 
rŸ
) {

63 
ty≥
) {

64 
BLOCK_I
:

65 
BLOCK_O
:

66  (
Move
){ 0, 0 };

68  
block_off£t
[
rŸ
];

70 
	}
}

72 
Move
 
	$block_gë_wÆlkick
(
BlockTy≥
 
ty≥
, 
RŸ©i⁄
 
rŸ
, 
ã°
) {

75 
ty≥
) {

76 
BLOCK_I
:

77 
rŸ
) {

79 
RIGHT
:

80 
ã°
) {

82  (
Move
){ -2, 0 };

84  (
Move
){ 1, 0 };

86  (
Move
){ -2, 1 };

88  (
Move
){ 1, -2 };

90 
îr
;

93 
DOWN
:

94 
ã°
) {

96  (
Move
){ -1, 0 };

98  (
Move
){ 2, 0 };

100  (
Move
){ -1, -2 };

102  (
Move
){ 2, 1 };

104 
îr
;

107 
LEFT
:

108 
ã°
) {

110  (
Move
){ 2, 0 };

112  (
Move
){ -1, 0 };

114  (
Move
){ 2, -1 };

116  (
Move
){ -1, 2 };

118 
îr
;

121 
UP
:

122 
ã°
) {

124  (
Move
){ 1, 0 };

126  (
Move
){ -2, 0 };

128  (
Move
){ 1, 2 };

130  (
Move
){ -2, -1 };

132 
îr
;

135 
îr
;

138 
rŸ
) {

140 
RIGHT
:

141 
ã°
) {

143  (
Move
){ -1, 0 };

145  (
Move
){ -1, -1 };

147  (
Move
){ 0, 2 };

149  (
Move
){ -1, 2 };

151 
îr
;

154 
DOWN
:

155 
ã°
) {

157  (
Move
){ 1, 0 };

159  (
Move
){ 1, 1 };

161  (
Move
){ 0, -2 };

163  (
Move
){ 1, -2 };

165 
îr
;

168 
LEFT
:

169 
ã°
) {

171  (
Move
){ 1, 0 };

173  (
Move
){ 1, -1 };

175  (
Move
){ 0, 2 };

177  (
Move
){ 1, 2 };

179 
îr
;

182 
UP
:

183 
ã°
) {

185  (
Move
){ -1, 0 };

187  (
Move
){ -1, 1 };

189  (
Move
){ 0, -2 };

191  (
Move
){ -1, -2 };

193 
îr
;

196 
îr
;

199 
îr
:

200 
	`Ârötf
(
°dîr
, "AAAAAAAAAAAAAAAAAAAAAA");

201 
	`exô
(-1);

202 
	}
}

204 
boﬁ
 (*
block_gë_¨r
(
BlockTy≥
 
ty≥
))[
BLOCK_ARR_DIM
] {

205 
	gty≥
) {

206 
	gBLOCK_I
:

207  
block_i_¨r
;

208 
	gBLOCK_J
:

209  
block_j_¨r
;

210 
	gBLOCK_L
:

211  
block_l_¨r
;

212 
	gBLOCK_O
:

213  
block_o_¨r
;

214 
	gBLOCK_S
:

215  
block_s_¨r
;

216 
	gBLOCK_T
:

217  
block_t_¨r
;

218 
	gBLOCK_Z
:

219  
block_z_¨r
;

221 
Ârötf
(
°dîr
, "wr⁄g blockÅy≥ i¿gë_¨r: %d\n", 
ty≥
);

222 
exô
(-1);

226 
BlockCﬁ‹
 
	$block_gë_cﬁ‹
(
BlockTy≥
 
ty≥
) {

227 
ty≥
) {

228 
BLOCK_I
:

229  
BLOCK_COLOR_CYAN
;

230 
BLOCK_J
:

231  
BLOCK_COLOR_BLUE
;

232 
BLOCK_L
:

233  
BLOCK_COLOR_YELLOW
;

234 
BLOCK_O
:

235  
BLOCK_COLOR_YELLOW
;

236 
BLOCK_S
:

237  
BLOCK_COLOR_GREEN
;

238 
BLOCK_T
:

239  
BLOCK_COLOR_MAGENTA
;

240 
BLOCK_Z
:

241  
BLOCK_COLOR_RED
;

243 
	`Ârötf
(
°dîr
, "wr⁄g blockÅy≥ i¿gë_cﬁ‹: %d\n", 
ty≥
);

244 
	`exô
(-1);

246 
	}
}

248 
boﬁ
 
	$block_gë_tûe
(c⁄° 
Block
 *c⁄° 
block
, c⁄° 
x
, c⁄° 
y
) {

249 
	`as£π
(
x
 < 
BLOCK_ARR_DIM
);

250 
	`as£π
(
x
 >= 0);

251 
	`as£π
(
y
 < 
BLOCK_ARR_DIM
);

252 
	`as£π
(
y
 >= 0);

254 
	`boﬁ
 (*
¨r
)[
BLOCK_ARR_DIM
] = 
	`block_gë_¨r
(
block
->
ty≥
);

255 
block
->
rŸ
) {

256 
UP
:

257  
¨r
[
y
][
x
];

258 
RIGHT
:

259  
¨r
[
BLOCK_ARR_DIM
-
x
-1][
y
];

260 
DOWN
:

261  
¨r
[
BLOCK_ARR_DIM
-
y
-1][BLOCK_ARR_DIM-
x
-1];

262 
LEFT
:

263  
¨r
[
x
][
BLOCK_ARR_DIM
-
y
-1];

265 
	`Ârötf
(
°dîr
, "wrong blockÑotation?");

266 
	`exô
(-1);

268 
	}
}

	@block.h

1 #i‚de‡
BLOCK_H


2 
	#BLOCK_H


	)

4 
	~<°dboﬁ.h
>

6 
	#BLOCK_ARR_DIM
 4

	)

8 
	eBlockTy≥
 {

9 
	mBLOCK_EMPTY
,

10 
	mBLOCK_I
,

11 
	mBLOCK_J
,

12 
	mBLOCK_L
,

13 
	mBLOCK_O
,

14 
	mBLOCK_S
,

15 
	mBLOCK_T
,

16 
	mBLOCK_Z
,

17 
	mBLOCK_MAX


18 } 
	tBlockTy≥
;

20 
	eBlockCﬁ‹
 {

21 
	mBLOCK_COLOR_BLACK
,

22 
	mBLOCK_COLOR_RED
,

23 
	mBLOCK_COLOR_GREEN
,

24 
	mBLOCK_COLOR_YELLOW
,

25 
	mBLOCK_COLOR_BLUE
,

26 
	mBLOCK_COLOR_MAGENTA
,

27 
	mBLOCK_COLOR_CYAN
,

28 
	mBLOCK_COLOR_WHITE
,

29 
	mBLOCK_COLOR_SHADOW


30 } 
	tBlockCﬁ‹
;

32 
	eRŸ©i⁄
 {

33 
	mUP
,

34 
	mRIGHT
,

35 
	mDOWN
,

36 
	mLEFT
,

37 
	mROTATION_MAX


38 } 
	tRŸ©i⁄
;

40 
	sBlock
 {

42 
	mx
;

43 
	my
;

44 
RŸ©i⁄
 
	mrŸ
;

45 
BlockTy≥
 
	mty≥
;

46 } 
	tBlock
;

48 
	sMove
 {

49 
	mx
;

50 
	my
;

51 } 
	tMove
;

53 
BlockCﬁ‹
 
block_gë_cﬁ‹
(
BlockTy≥
 
ty≥
);

54 
boﬁ
 (*
block_gë_¨r
(
BlockTy≥
 
ty≥
))[
BLOCK_ARR_DIM
];

55 
boﬁ
 
block_gë_tûe
(c⁄° 
Block
 *c⁄° 
block
, c⁄° 
x
, c⁄° 
y
);

56 
Move
 
block_gë_rŸ©i⁄_off£t
(
BlockTy≥
 
ty≥
, 
RŸ©i⁄
 
rŸ
);

57 
Move
 
block_gë_wÆlkick
(
BlockTy≥
 
ty≥
, 
RŸ©i⁄
 
rŸ
, 
ã°
);

	@board.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<as£π.h
>

4 
	~<°dboﬁ.h
>

5 
	~<°rög.h
>

7 
	~"bﬂrd.h
"

8 
	~"block.h
"

10 
Bﬂrd
 *
	$bﬂrd_¸óã
(c⁄° 
width
, c⁄° 
height
) {

11 
	`as£π
(
width
 >= 1);

12 
	`as£π
(
height
 >= 1);

13 
	`as£π
(
width
*
height
 == ()width * ()height);

15 
Bﬂrd
 *
ªt
 = (Bﬂrd *)
	`mÆloc
((Board));

16 i‡(
ªt
 =
NULL
) {

17 
	`Ârötf
(
°dîr
, "Couldn'àÆlo¯bﬂrd i¿fun˘i⁄ %s.\n", 
__func__
);

18 
	`exô
(-1);

21 
ªt
->
width
 = width;

22 
ªt
->
height
 = height;

24 
size_t
 
blocks_size
 = 
width
*
height
 * (
BlockTy≥
);

25 
ªt
->
blocks
 = (
BlockTy≥
 *)
	`mÆloc
(
blocks_size
);

26 i‡(
ªt
->
blocks
 =
NULL
) {

27 
	`Ârötf
(
°dîr
,

29 
__func__
);

30 
	`exô
(-1);

32 
	`mem£t
(
ªt
->
blocks
, 
BLOCK_EMPTY
, 
blocks_size
);

34  
ªt
;

35 
	}
}

37 
	$bﬂrd_de°roy
(
Bﬂrd
 *c⁄° 
bﬂrd
) {

38 
	`‰ì
(
bﬂrd
->
blocks
);

39 
	`‰ì
(
bﬂrd
);

40 
	}
}

42 
BlockTy≥
 *
	$bﬂrd_gë_block
(

43 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

44 c⁄° 
x
,

45 c⁄° 
y
) {

46 
	`as£π
(
x
 < 
bﬂrd
->
width
);

47 
	`as£π
(
x
 >= 0);

48 
	`as£π
(
y
 < 
bﬂrd
->
height
);

49 
	`as£π
(
y
 >= 0);

51  
bﬂrd
->
blocks
+
x
 + 
y
*bﬂrd->
width
;

52 
	}
}

54 
boﬁ
 
	$bﬂrd_is_row_fuŒ
(c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
, c⁄° 
y
) {

55 
x
 = 0; x < 
bﬂrd
->
width
; x++) {

56 i‡(*
	`bﬂrd_gë_block
(
bﬂrd
, 
x
, 
y
Ë=
BLOCK_EMPTY
)

57  
Ál£
;

59  
åue
;

60 
	}
}

67 
	$bﬂrd_îa£_rows
(
Bﬂrd
 *c⁄° 
bﬂrd
, c⁄° 
‰om
, c⁄° 
to
) {

68 
	`as£π
(
‰om
 < 
bﬂrd
->
height
);

69 
	`as£π
(
to
 < 
bﬂrd
->
height
);

71 c⁄° 
highî
 = 
to
 - 
‰om
 + 1;

72 
y
 = 
to
; y >
highî
; y--) {

73 
x
 = 0; x < 
bﬂrd
->
width
; x++) {

74 i‡(
y
-
highî
 < 0) {

75 *
	`bﬂrd_gë_block
(
bﬂrd
, 
x
, 
y
Ë
BLOCK_EMPTY
;

77 *
	`bﬂrd_gë_block
(
bﬂrd
, 
x
, 
y
) =

78 *
	`bﬂrd_gë_block
(
bﬂrd
, 
x
, 
y
-
highî
);

82 
	}
}

84 
	$bﬂrd_˛ór_fuŒ_rows
(
Bﬂrd
 *c⁄° 
bﬂrd
) {

85 
ªmoved_rows
 = 0;

86 
‰om
 = -1;

87 
to
 = -1;

88 
y
 = 0; y < 
bﬂrd
->
height
; y++) {

89 i‡(
	`bﬂrd_is_row_fuŒ
(
bﬂrd
, 
y
)) {

90 i‡(
‰om
 == -1)

91 
‰om
 = 
to
 = 
y
;

93 
to
++;

95 i‡(
‰om
 != -1) {

96 
	`bﬂrd_îa£_rows
(
bﬂrd
, 
‰om
, 
to
);

97 
ªmoved_rows
 +
to
 - 
‰om
 + 1;

99 
‰om
 = 
to
 = -1;

102 i‡(
‰om
 != -1){

103 
	`bﬂrd_îa£_rows
(
bﬂrd
, 
‰om
, 
to
);

104 
ªmoved_rows
 +
to
 - 
‰om
 + 1;

106  
ªmoved_rows
;

107 
	}
}

	@board.h

1 #i‚de‡
BOARD_H


2 
	#BOARD_H


	)

4 
	~<°dboﬁ.h
>

6 
	~"block.h
"

8 
	sBﬂrd
 {

9 
	mwidth
;

10 
	mheight
;

14 
BlockTy≥
 *
	mblocks
;

15 } 
	tBﬂrd
;

17 
Bﬂrd
 *
bﬂrd_¸óã
(c⁄° 
width
, c⁄° 
height
);

18 
bﬂrd_de°roy
(
Bﬂrd
 *c⁄° 
bﬂrd
);

19 
BlockTy≥
 *
bﬂrd_gë_block
(

20 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

21 c⁄° 
x
,

22 c⁄° 
y
);

23 
boﬁ
 
bﬂrd_is_row_fuŒ
(c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
, c⁄° 
y
);

24 
bﬂrd_îa£_rows
(
Bﬂrd
 *c⁄° 
bﬂrd
, c⁄° 
‰om
, c⁄° 
to
);

25 
bﬂrd_˛ór_fuŒ_rows
(
Bﬂrd
 *c⁄° 
bﬂrd
);

	@circular_buffer.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°dboﬁ.h
>

4 
	~<as£π.h
>

5 
	~<°ddef.h
>

7 
	~"cúcuœr_buf„r.h
"

16 
CúcuœrBuf„r
 *
	$buf_¸óã
(c⁄° 
size_t
 
size
) {

17 
CúcuœrBuf„r
 *
ªt
 = 
	`mÆloc
((CircularBuffer));

18 i‡(
ªt
 =
NULL
) {

19 
	`Ârötf
(

20 
°dîr
,

22 
__func__
);

23 
	`exô
(-1);

25 
ªt
->
size
 = size;

26 
ªt
->
u£d
 = 0;

27 
ªt
->
buf„r
 = 
	`mÆloc
((*ªt->buf„rË* 
size
);

28 i‡(
ªt
 =
NULL
) {

29 
	`Ârötf
(

30 
°dîr
,

32 
__func__
);

33 
	`exô
(-1);

35 
ªt
->
hód
 =Ñë->
buf„r
;

36 
ªt
->
èû
 =Ñë->
buf„r
;

37  
ªt
;

38 
	}
}

40 
	$buf_de°roy
(
CúcuœrBuf„r
 *c⁄° 
buf
) {

41 
	`‰ì
(
buf
->
buf„r
);

42 
	`‰ì
(
buf
);

43 
	}
}

45 *
	$buf_gë_íd
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
) {

46  
buf
->
buf„r
 + buf->
size
;

47 
	}
}

49 
boﬁ
 
	$buf_is_fuŒ
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
) {

50  
buf
->
size
 =buf->
u£d
;

51 
	}
}

53 
	$buf_add_hód
(
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
vÆ
) {

54 i‡(
	`buf_is_fuŒ
(
buf
)) {

55 
	`Ârötf
(
°dîr
, "Circular buffer is full.\n");

58 
buf
->
u£d
++;

59 *
buf
->
hód
++ = 
vÆ
;

60 i‡(
buf
->
hód
 =
	`buf_gë_íd
(buf))

61 
buf
->
hód
 = buf->
buf„r
;

63 
	}
}

65 
	$buf_add_èû
(
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
vÆ
) {

66 i‡(
	`buf_is_fuŒ
(
buf
)) {

67 
	`Ârötf
(
°dîr
, "Circular buffer is full.\n");

70 
buf
->
u£d
++;

71 i‡(
buf
->
èû
 =buf->
buf„r
)

72 
buf
->
èû
 = 
	`buf_gë_íd
(buf)-1;

74 
buf
->
èû
--;

75 *
buf
->
èû
 = 
vÆ
;

77 
	}
}

80 
	$buf_gë_hód
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
off£t
) {

81 
	`as£π
(
off£t
 >= 0);

82 
	`as£π
((
size_t
)
off£t
 < 
buf
->
u£d
);

84 c⁄° 
±rdiff_t
 
diff
 = 
buf
->
hód
 - buf->
buf„r
;

85 i‡(
diff
 > 
off£t
) {

86  *(
buf
->
hód
-1 - 
off£t
);

88 c⁄° 
À·
 = 
off£t
 - 
diff
;

89  *(
	`buf_gë_íd
(
buf
)-1 - 
À·
);

91 
	}
}

93 
	$buf_gë_èû
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
off£t
) {

94  
	`buf_gë_hód
(
buf
, buf->
u£d
-1-
off£t
);

95 
	}
}

97 
	$buf_ªmove_hód
(
CúcuœrBuf„r
 *c⁄° 
buf
) {

98 i‡(
buf
->
u£d
-- == 0) {

99 
	`Ârötf
(
°dîr
, "buf isÉmpty canÑemove head!\n");

100 
	`exô
(-1);

102 i‡(
buf
->
hód
 =buf->
buf„r
) {

103 
buf
->
hód
 = 
	`buf_gë_íd
(buf)-1;

105 
buf
->
hód
--;

107 
	}
}

109 
	$buf_ªmove_èû
(
CúcuœrBuf„r
 *c⁄° 
buf
) {

110 i‡(
buf
->
u£d
-- == 0) {

111 
	`Ârötf
(
°dîr
, "buf isÉmpty canÑemove head!\n");

112 
	`exô
(-1);

114 i‡(
buf
->
èû
++ =
	`buf_gë_íd
(buf)) {

115 
buf
->
èû
 = buf->
buf„r
;

117 
	}
}

	@circular_buffer.h

1 #i‚de‡
CIRCULAR_BUFFER_H


2 
	#CIRCULAR_BUFFER_H


	)

4 
	sCúcuœrBuf„r
 {

5 
size_t
 
	msize
;

6 
size_t
 
	mu£d
;

7 *
	mbuf„r
;

8 *
	mhód
;

9 *
	mèû
;

10 } 
	tCúcuœrBuf„r
;

12 
CúcuœrBuf„r
 *
buf_¸óã
(c⁄° 
size_t
 
size
);

13 
buf_de°roy
(
CúcuœrBuf„r
 *c⁄° 
buf
);

14 *
buf_gë_íd
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
);

15 
boﬁ
 
buf_is_fuŒ
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
);

16 
buf_add_hód
(
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
vÆ
);

17 
buf_add_èû
(
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
vÆ
);

18 
buf_gë_hód
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
off£t
);

19 
buf_gë_èû
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
, c⁄° 
off£t
);

20 
buf_ªmove_hód
(
CúcuœrBuf„r
 *c⁄° 
buf
);

21 
buf_ªmove_èû
(
CúcuœrBuf„r
 *c⁄° 
buf
);

	@render.c

1 
	~<cur£s.h
>

3 
	~"ªndî.h
"

4 
	~"block.h
"

5 
	~"wödow.h
"

6 
	~"utû.h
"

7 
	~"cúcuœr_buf„r.h
"

9 
	$ªndî_tûe
(

10 
Wödow
 *c⁄° 
wödow
,

11 c⁄° 
BlockCﬁ‹
 
cﬁ‹
,

12 c⁄° 
x
,

13 c⁄° 
y
) {

14 
	`w©å⁄
(
wödow
->
wö
, 
	`COLOR_PAIR
(
cﬁ‹
));

15 
wx
 = 0; wx < 
BLOCK_WIDTH
; wx++) {

16 
wy
 = 0; wy < 
BLOCK_HEIGHT
; wy++) {

17 
	`mvwaddch
(
wödow
->
wö
,

18 
y
*
BLOCK_HEIGHT
 + 
wy
 + 1,

19 
x
*
BLOCK_WIDTH
 + 
wx
 + 1,

23 
	`w©åoff
(
wödow
->
wö
, 
	`COLOR_PAIR
(
cﬁ‹
));

24 
	}
}

26 
	$ªndî_block
(

27 
Wödow
 *c⁄° 
wödow
,

28 c⁄° 
Block
 *c⁄° 
block
,

29 c⁄° 
BlockCﬁ‹
 
cﬁ‹
) {

30 
x
 = 0; x < 
BLOCK_ARR_DIM
; x++) {

31 
y
 = 0; y < 
BLOCK_ARR_DIM
; y++) {

32 i‡(
	`block_gë_tûe
(
block
, 
x
, 
y
)) {

33 
	`ªndî_tûe
(
wödow
, 
cﬁ‹
, 
block
->
x
+x, block->
y
+y);

37 
	}
}

39 
	$ªndî_bﬂrd
(
Wödow
 *c⁄° 
wödow
, c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
) {

40 
	`box
(
wödow
->
wö
, 0, 0);

41 
x
 = 0; x < 
bﬂrd
->
width
; x++) {

42 
y
 = 0; y < 
bﬂrd
->
height
; y++) {

43 
BlockTy≥
 
ty≥
 = *
	`bﬂrd_gë_block
(
bﬂrd
, 
x
, 
y
);

44 i‡(
ty≥
 !
BLOCK_EMPTY
) {

45 
	`ªndî_tûe
(
wödow
, 
	`block_gë_cﬁ‹
(
ty≥
), 
x
, 
y
);

49 
	}
}

51 
	$ªndî_buf
(
Wödow
 *c⁄° 
wödow
, c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
) {

52 
	`box
(
wödow
->
wö
, 0, 0);

53 
size_t
 
i
 = 0; i < 
buf
->
size
; i++) {

54 
Block
 
block
 = {

55 .
ty≥
 = 
	`buf_gë_hód
(
buf
, 
i
),

56 .
x
 = 0,

57 .
y
 = 
BLOCK_ARR_DIM
*
i
,

58 .
rŸ
 = 
UP


60 
	`ªndî_block
(
wödow
, &
block
, 
	`block_gë_cﬁ‹
(block.
ty≥
));

62 
	}
}

64 
	$ªndî_°©s
(
Wödow
 *c⁄° 
wödow
, c⁄° 
Sèts
 *c⁄° 
°©s
) {

65 
	`mvw¥ötw
(
wödow
->
wö
, 1, 1, "rows: %d", 
°©s
->
rows
);

66 
	`mvw¥ötw
(
wödow
->
wö
, 2, 1, "blocks: %d", 
°©s
->
blocks
);

67 
	}
}

	@render.h

1 #i‚de‡
RENDER_H


2 
	#RENDER_H


	)

4 
	~"block.h
"

5 
	~"wödow.h
"

6 
	~"bﬂrd.h
"

7 
	~"utû.h
"

8 
	~"cúcuœr_buf„r.h
"

10 
ªndî_block
(

11 
Wödow
 *c⁄° 
wödow
,

12 c⁄° 
Block
 *c⁄° 
block
,

13 c⁄° 
BlockCﬁ‹
 
cﬁ‹
);

14 
ªndî_tûe
(

15 
Wödow
 *c⁄° 
wödow
,

16 c⁄° 
BlockCﬁ‹
 
cﬁ‹
,

17 c⁄° 
x
,

18 c⁄° 
y
);

19 
ªndî_bﬂrd
(
Wödow
 *c⁄° 
wödow
, c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
);

20 
ªndî_buf
(
Wödow
 *c⁄° 
wödow
, c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
);

21 
ªndî_°©s
(
Wödow
 *c⁄° 
wödow
, c⁄° 
Sèts
 *c⁄° 
°©s
);

	@tetris.c

1 
	~<ncur£s.h
>

2 
	~<loˇÀ.h
>

3 
	~<uni°d.h
>

4 
	~<°dlib.h
>

5 
	~<time.h
>

7 
	~"wödow.h
"

8 
	~"bﬂrd.h
"

9 
	~"cúcuœr_buf„r.h
"

10 
	~"block.h
"

11 
	~"utû.h
"

12 
	~"ªndî.h
"

14 
	$öô
() {

15 
	`£éoˇÀ
(
LC_ALL
, "");

17 
	`öôs¸
();

18 
	`cbªak
();

19 
	`n€cho
();

21 
	`key∑d
(
°ds¸
, 
TRUE
);

22 
	`nodñay
(
°ds¸
, 
TRUE
);

25 
	`°¨t_cﬁ‹
();

26 
	`öô_∑ú
(
BLOCK_COLOR_BLACK
, 
COLOR_BLACK
, COLOR_BLACK);

27 
	`öô_∑ú
(
BLOCK_COLOR_RED
, 
COLOR_RED
, COLOR_RED);

28 
	`öô_∑ú
(
BLOCK_COLOR_GREEN
, 
COLOR_GREEN
, COLOR_GREEN);

29 
	`öô_∑ú
(
BLOCK_COLOR_YELLOW
, 
COLOR_YELLOW
, COLOR_YELLOW);

30 
	`öô_∑ú
(
BLOCK_COLOR_BLUE
, 
COLOR_BLUE
, COLOR_BLUE);

31 
	`öô_∑ú
(
BLOCK_COLOR_MAGENTA
, 
COLOR_MAGENTA
, COLOR_MAGENTA);

32 
	`öô_∑ú
(
BLOCK_COLOR_CYAN
, 
COLOR_CYAN
, COLOR_CYAN);

33 
	`öô_∑ú
(
BLOCK_COLOR_WHITE
, 
COLOR_WHITE
, COLOR_WHITE);

34 
	`öô_∑ú
(
BLOCK_COLOR_SHADOW
, 
COLOR_WHITE
, 
COLOR_BLACK
);

35 
	`öô_∑ú
(69, 
COLOR_RED
, COLOR_RED);

37 
	`§™d
(
	`time
(
NULL
));

38 
	}
}

40 
	$unöô
() {

41 
	`ídwö
();

42 
	}
}

44 
	$maölo›
() {

45 
Bﬂrd
 *
bﬂrd
 = 
	`bﬂrd_¸óã
(
BOARD_WIDTH
, 
BOARD_HEIGHT
);

46 
CúcuœrBuf„r
 *
buf
 = 
	`buf_¸óã
(6);

47 
size_t
 
i
 = 0; i < 
buf
->
size
; i++)

48 
	`buf_add_hód
(
buf
, 
	`gë_øndom_block_ty≥
());

49 
Wödow
 *
bﬂrd_wödow
 = 
	`¸óã_wödow_f‹_bﬂrd
(
bﬂrd
);

50 
Wödow
 *
buf_wödow
 = 
	`¸óã_wödow_f‹_buf
(
buf
);

51 
Wödow
 *
°©s_wödow
 = 
	`¸óã_wödow_f‹_°©s
();

52 
Block
 
block
 = {

53 .
x
 = 3,

54 .
y
 = 0,

55 .
rŸ
 = 
UP
,

56 .
ty≥
 = 
	`gë_øndom_block_ty≥
()

58 
boﬁ
 
quô
 = 
Ál£
;

59 
Sèts
 
°©s
 = { 0, 0 };

60 
Âs_cou¡î
 = 0;

61 
œ°_ÁŒ
 = 0;

62 !
quô
) {

64 
key
 = 
	`gëch
();

65 
key
) {

66 
KEY_LEFT
:

67 
	`block_move
(&
block
, 
bﬂrd
, -1, 0);

69 
KEY_RIGHT
:

70 
	`block_move
(&
block
, 
bﬂrd
, 1, 0);

72 
KEY_DOWN
:

73 
°©s
.
rows
 +
	`ÁŒ
(&
block
, 
bﬂrd
);

74 
œ°_ÁŒ
 = 
Âs_cou¡î
;

76 
KEY_UP
:

77 
	`block_rŸ©e
(&
block
, 
bﬂrd
);

80 
block
 = 
	`ˇ°_block_shadow
(&block, 
bﬂrd
);

81 
°©s
.
rows
 +
	`ÁŒ
(&
block
, 
bﬂrd
);

82 
œ°_ÁŒ
 = 
Âs_cou¡î
;

86 
quô
 = 
åue
;

91 i‡(
Âs_cou¡î
 >
œ°_ÁŒ
+
FALL_AFTER
) {

92 
°©s
.
rows
 +
	`ÁŒ
(&
block
, 
bﬂrd
);

93 
œ°_ÁŒ
 = 
Âs_cou¡î
;

95 i‡(
block
.
ty≥
 =
BLOCK_EMPTY
) {

96 
°©s
.
blocks
 += 1;

97 
block
 = (
Block
) {

98 .
x
 = 3,

99 .
y
 = 0,

100 .
rŸ
 = 
UP
,

101 .
ty≥
 = 
	`buf_gë_hód
(
buf
, 0)

103 
	`buf_ªmove_hód
(
buf
);

104 
	`buf_add_èû
(
buf
, 
	`gë_øndom_block_ty≥
());

108 
	`wîa£
(
bﬂrd_wödow
->
wö
);

109 
	`wîa£
(
buf_wödow
->
wö
);

110 
	`wîa£
(
°©s_wödow
->
wö
);

112 
	`ªndî_bﬂrd
(
bﬂrd_wödow
, 
bﬂrd
);

113 
	`ªndî_buf
(
buf_wödow
, 
buf
);

114 
	`ªndî_°©s
(
°©s_wödow
, &
°©s
);

116 
Block
 
shadow
 = 
	`ˇ°_block_shadow
(&
block
, 
bﬂrd
);

117 
	`ªndî_block
(
bﬂrd_wödow
, &
shadow
, 
BLOCK_COLOR_SHADOW
);

118 
	`ªndî_block
(
bﬂrd_wödow
, &
block
, 
	`block_gë_cﬁ‹
(block.
ty≥
));

120 
	`wª‰esh
(
bﬂrd_wödow
->
wö
);

121 
	`wª‰esh
(
buf_wödow
->
wö
);

122 
	`wª‰esh
(
°©s_wödow
->
wö
);

127 
	`u¶ìp
(1000000/
FPS
);

128 
Âs_cou¡î
++;

131 
	`bﬂrd_de°roy
(
bﬂrd
);

132 
	`buf_de°roy
(
buf
);

133 
	`wödow_de°roy
(
bﬂrd_wödow
);

134 
	`wödow_de°roy
(
buf_wödow
);

135 
	`wödow_de°roy
(
°©s_wödow
);

136 
	}
}

138 
	$maö
() {

139 
	`öô
();

140 
	`maölo›
();

141 
	`unöô
();

144 
	}
}

	@util.c

1 
	~<°dlib.h
>

3 
	~"bﬂrd.h
"

4 
	~"wödow.h
"

5 
	~"utû.h
"

6 
	~"block.h
"

7 
	~"cúcuœr_buf„r.h
"

9 
Wödow
 *
	$¸óã_wödow_f‹_bﬂrd
(c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
) {

10  
	`wödow_¸óã
(

11 
BLOCK_WIDTH
*
bﬂrd
->
width
 + 2,

12 
BLOCK_HEIGHT
*
bﬂrd
->
height
 + 2,

15 
	}
}

17 
Wödow
 *
	$¸óã_wödow_f‹_buf
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
) {

18  
	`wödow_¸óã
(

19 
BLOCK_WIDTH
*
BLOCK_ARR_DIM
 + 2,

20 
BLOCK_HEIGHT
*
buf
->
size
*
BLOCK_ARR_DIM
 + 2,

23 
	}
}

25 
Wödow
 *
	$¸óã_wödow_f‹_°©s
() {

26  
	`wödow_¸óã
(10+2, 2+2, 38, 4);

27 
	}
}

29 
	$ÁŒ
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
) {

30 
rows
 = 0;

31 
ªt
 = 
	`block_move
(
block
, 
bﬂrd
, 0, 1);

32 i‡(
ªt
 != 0) {

33 
rows
 = 
	`bake
(
block
, 
bﬂrd
);

34 
block
->
ty≥
 = 
BLOCK_EMPTY
;

36  
rows
;

37 
	}
}

39 
	$bake
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
) {

40 
x
 = 0; x < 
BLOCK_ARR_DIM
; x++) {

41 
y
 = 0; y < 
BLOCK_ARR_DIM
; y++) {

42 i‡(
	`block_gë_tûe
(
block
, 
x
, 
y
)) {

43 *
	`bﬂrd_gë_block
(
bﬂrd
, 
block
->
x
+x, block->
y
+yËblock->
ty≥
;

47  
	`bﬂrd_˛ór_fuŒ_rows
(
bﬂrd
);

48 
	}
}

50 
boﬁ
 
	$block_ˇn_move
(

51 
Block
 *c⁄° 
block
,

52 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

53 c⁄° 
mov_x
,

54 c⁄° 
mov_y
) {

55 
tûe_x
 = 0;Åûe_x < 
BLOCK_ARR_DIM
;Åile_x++) {

56 
tûe_y
 = 0;Åûe_y < 
BLOCK_ARR_DIM
;Åile_y++) {

57 
boﬁ
 
is_tûe
 = 
	`block_gë_tûe
(
block
, 
tûe_x
, 
tûe_y
);

58 i‡(
is_tûe
) {

59 
x_pos
 = 
block
->
x
 + 
tûe_x
 + 
mov_x
;

60 i‡(
x_pos
 < 0)

61  
Ál£
;

62 i‡(
x_pos
 >
bﬂrd
->
width
)

63  
Ál£
;

64 
y_pos
 = 
block
->
y
 + 
tûe_y
 + 
mov_y
;

65 i‡(
y_pos
 < 0)

66  
Ál£
;

67 i‡(
y_pos
 >
bﬂrd
->
height
)

68  
Ál£
;

69 i‡(*
	`bﬂrd_gë_block
(
bﬂrd
, 
x_pos
, 
y_pos
Ë!
BLOCK_EMPTY
)

70  
Ál£
;

74  
åue
;

75 
	}
}

77 
	$block_move
(

78 
Block
 *c⁄° 
block
,

79 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

80 c⁄° 
x
,

81 c⁄° 
y
) {

82 i‡(
	`block_ˇn_move
(
block
, 
bﬂrd
, 
x
, 
y
)) {

83 
block
->
x
 += x;

84 
block
->
y
 += y;

88 
	}
}

90 
	$block_rŸ©e
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
) {

91 
RŸ©i⁄
 
‹ig
 = 
block
->
rŸ
;

92 
block
->
rŸ
 = (block->rŸ+1Ë% 
ROTATION_MAX
;

93 
Move
 
move
 = 
	`block_gë_rŸ©i⁄_off£t
(
block
->
ty≥
, block->
rŸ
);

94 
block
->
x
 +
move
.x;

95 
block
->
y
 +
move
.y;

96 i‡(
	`block_move
(
block
, 
bﬂrd
, 0, 0) == 0) {

98 } i‡(
	`block_wÆlkick
(
block
, 
bﬂrd
) == 0) {

101 
block
->
rŸ
 = 
‹ig
;

102 
block
->
x
 -
move
.x;

103 
block
->
y
 -
move
.y;

106 
	}
}

108 
	$block_wÆlkick
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
) {

109 
i
 = 0; i < 4; i++) {

110 
Move
 
move
 = 
	`block_gë_wÆlkick
(
block
->
ty≥
, block->
rŸ
, 
i
);

111 i‡(
	`block_move
(
block
, 
bﬂrd
, 
move
.
x
, move.
y
) == 0)

115 
	}
}

117 
Block
 
	$ˇ°_block_shadow
(c⁄° 
Block
 *c⁄° 
block
, c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
) {

118 
Block
 
shadow
 = *
block
;

119 
	`block_move
(&
shadow
, 
bﬂrd
, 0, 1) == 0)

121  
shadow
;

122 
	}
}

124 
BlockTy≥
 
	$gë_øndom_block_ty≥
() {

125  
	`ønd
(Ë% (
BLOCK_MAX
-1) + 1;

126 
	}
}

	@util.h

1 #i‚de‡
UTIL_H


2 
	#UTIL_H


	)

4 
	~"wödow.h
"

5 
	~"bﬂrd.h
"

6 
	~"block.h
"

7 
	~"cúcuœr_buf„r.h
"

9 
	#FPS
 60

	)

10 
	#FALL_AFTER
 30

	)

12 
	#BLOCK_HEIGHT
 1

	)

13 
	#BLOCK_WIDTH
 2

	)

15 
	#BOARD_HEIGHT
 28

	)

16 
	#BOARD_WIDTH
 10

	)

18 
	sSèts
 {

19 
	mrows
;

20 
	mblocks
;

21 } 
	tSèts
;

23 
Wödow
 *
¸óã_wödow_f‹_bﬂrd
(c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
);

24 
Wödow
 *
¸óã_wödow_f‹_buf
(c⁄° 
CúcuœrBuf„r
 *c⁄° 
buf
);

25 
Wödow
 *
¸óã_wödow_f‹_°©s
();

26 
ÁŒ
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
);

27 
bake
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
);

32 
boﬁ
 
block_ˇn_move
(

33 
Block
 *c⁄° 
block
,

34 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

35 c⁄° 
mov_x
,

36 c⁄° 
mov_y
);

37 
block_move
(

38 
Block
 *c⁄° 
block
,

39 c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
,

40 c⁄° 
x
,

41 c⁄° 
y
);

42 
block_rŸ©e
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
);

43 
block_wÆlkick
(
Block
 *c⁄° 
block
, 
Bﬂrd
 *c⁄° 
bﬂrd
);

44 
Block
 
ˇ°_block_shadow
(c⁄° Block *c⁄° 
block
, c⁄° 
Bﬂrd
 *c⁄° 
bﬂrd
);

45 
BlockTy≥
 
gë_øndom_block_ty≥
();

	@window.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<as£π.h
>

5 
	~"wödow.h
"

7 
Wödow
 *
	$wödow_¸óã
(

8 c⁄° 
width
,

9 c⁄° 
height
,

10 c⁄° 
x
,

11 c⁄° 
y
) {

12 
	`as£π
(
width
 >= 1);

13 
	`as£π
(
height
 >= 1);

14 
	`as£π
(
width
*
height
 == ()width * ()height);

16 
Wödow
 *
ªt
 = 
	`mÆloc
((Window));

17 i‡(
ªt
 =
NULL
) {

18 
	`Ârötf
(
°dîr
, "Couldn'àÆlo¯wödow i¿fun˘i⁄ %s.\n", 
__func__
);

19 
	`exô
(-1);

22 
ªt
->
wö
 = 
	`√wwö
(
height
, 
width
, 
y
, 
x
);

23 i‡(
ªt
->
wö
 =
NULL
) {

24 
	`Ârötf
(
°dîr
,

26 
__func__
);

27 
	`exô
(-1);

30 
ªt
->
width
 = width;

31 
ªt
->
height
 = height;

33  
ªt
;

34 
	}
}

36 
	$wödow_de°roy
(
Wödow
 *
wödow
) {

37 
	`dñwö
(
wödow
->
wö
);

38 
	`‰ì
(
wödow
);

39 
	}
}

	@window.h

1 #i‚de‡
WINDOW_H


2 
	#WINDOW_H


	)

4 
	~<cur£s.h
>

6 
	sWödow
 {

7 
WINDOW
 *
	mwö
;

8 
	mwidth
;

9 
	mheight
;

10 } 
	tWödow
;

12 
Wödow
 *
wödow_¸óã
(

13 c⁄° 
width
,

14 c⁄° 
height
,

15 c⁄° 
x
,

16 c⁄° 
y
);

17 
wödow_de°roy
(
Wödow
 *
wödow
);

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 
__BEGIN_DECLS


67 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

68 
__löe
, c⁄° *
__fun˘i⁄
)

69 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

72 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

73 
__löe
, c⁄° *
__fun˘i⁄
)

74 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

79 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

80 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

83 
__END_DECLS


88 #i‡
deföed
 
__˝lu•lus


89 
	#as£π
(
ex¥
) \

90 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

92 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


94 
	#as£π
(
ex¥
) \

95 ((
ex¥
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

104 
	#as£π
(
ex¥
) \

105 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

106 i‡(
ex¥
) \

109 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

110 
	}
}))

	)

113 #ifdef 
__USE_GNU


114 
	#as£π_≥º‹
(
î∫um
) \

115 (!(
î∫um
) \

116 ? 
	`__ASSERT_VOID_CAST
 (0) \

117 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

125 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

126 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

128 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

129 
	#__ASSERT_FUNCTION
 
__func__


	)

131 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

138 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


139 #unde‡
°©ic_as£π


140 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/curses.h

38 #i‚de‡
__NCURSES_H


39 
	#__NCURSES_H


	)

41 
	#CURSES
 1

	)

42 
	#CURSES_H
 1

	)

45 
	#NCURSES_VERSION_MAJOR
 6

	)

46 
	#NCURSES_VERSION_MINOR
 2

	)

47 
	#NCURSES_VERSION_PATCH
 20200212

	)

50 #unde‡
NCURSES_VERSION


51 
	#NCURSES_VERSION
 "6.2"

	)

56 
	#NCURSES_MOUSE_VERSION
 2

	)

61 
	~<ncur£s_dŒ.h
>

64 
	~<°döt.h
>

70 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


71 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

78 #i‚de‡
NCURSES_ATTR_T


79 
	#NCURSES_ATTR_T
 

	)

86 #unde‡
NCURSES_CONST


87 
	#NCURSES_CONST
 c⁄°

	)

89 #unde‡
NCURSES_INLINE


90 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

104 #unde‡
NCURSES_PAIRS_T


105 
	#NCURSES_PAIRS_T
 

	)

110 #i‚de‡
NCURSES_INTERNALS


111 
	#NCURSES_OPAQUE
 0

	)

112 
	#NCURSES_OPAQUE_FORM
 0

	)

113 
	#NCURSES_OPAQUE_MENU
 0

	)

114 
	#NCURSES_OPAQUE_PANEL
 0

	)

122 #i‚de‡
NCURSES_WATTR_MACROS


123 
	#NCURSES_WATTR_MACROS
 1

	)

129 #i‚de‡
NCURSES_REENTRANT


130 
	#NCURSES_REENTRANT
 0

	)

136 #unde‡
NCURSES_BROKEN_LINKER


138 
	#NCURSES_BROKEN_LINKER
 1

	)

144 #unde‡
NCURSES_INTEROP_FUNCS


145 
	#NCURSES_INTEROP_FUNCS
 1

	)

150 #unde‡
NCURSES_SIZE_T


151 
	#NCURSES_SIZE_T
 

	)

156 #unde‡
NCURSES_TPARM_VARARGS


157 
	#NCURSES_TPARM_VARARGS
 1

	)

163 #unde‡
NCURSES_TPARM_ARG


164 
	#NCURSES_TPARM_ARG
 
öçå_t


	)

170 #unde‡
NCURSES_WCWIDTH_GRAPHICS


171 
	#NCURSES_WCWIDTH_GRAPHICS
 1

	)

178 #unde‡
NCURSES_CH_T


179 
	#NCURSES_CH_T
 
cch¨_t


	)

181 #i‡1 && 
deföed
(
_LP64
)

182 
	tchty≥
;

183 
	tmmask_t
;

185 
uöt32_t
 
	tchty≥
;

186 
uöt32_t
 
	tmmask_t
;

192 
	~<°dio.h
>

201 #i‚de‡
NCURSES_WIDECHAR


202 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| (deföed(
_XOPEN_SOURCE
) && (_XOPEN_SOURCE - 0 >= 500))

203 
	#NCURSES_WIDECHAR
 1

	)

205 
	#NCURSES_WIDECHAR
 0

	)

209 
	~<°d¨g.h
>

210 #i‡
NCURSES_WIDECHAR


211 
	~<°ddef.h
>

226 #unde‡
TRUE


227 
	#TRUE
 1

	)

229 #unde‡
FALSE


230 
	#FALSE
 0

	)

232 
	tNCURSES_BOOL
;

234 #i‡
deföed
(
__˝lu•lus
)

237 
	#NCURSES_BOOL
 
boﬁ


	)

241 #i‡
NCURSES_ENABLE_STDBOOL_H


242 
	~<°dboﬁ.h
>

244 
	#NCURSES_BOOL
 
boﬁ


	)

247 #unde‡
boﬁ


248 
	#boﬁ
 
NCURSES_BOOL


	)

253 #ifde‡
__˝lu•lus


255 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

257 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

260 
	#NCURSES_OK_ADDR
(
p
Ë(0 !
	`NCURSES_CAST
(c⁄° *, (p)))

	)

266 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

267 
	#WA_NORMAL
 
A_NORMAL


	)

268 
	#WA_STANDOUT
 
A_STANDOUT


	)

269 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

270 
	#WA_REVERSE
 
A_REVERSE


	)

271 
	#WA_BLINK
 
A_BLINK


	)

272 
	#WA_DIM
 
A_DIM


	)

273 
	#WA_BOLD
 
A_BOLD


	)

274 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

275 
	#WA_INVIS
 
A_INVIS


	)

276 
	#WA_PROTECT
 
A_PROTECT


	)

277 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

278 
	#WA_LEFT
 
A_LEFT


	)

279 
	#WA_LOW
 
A_LOW


	)

280 
	#WA_RIGHT
 
A_RIGHT


	)

281 
	#WA_TOP
 
A_TOP


	)

282 
	#WA_VERTICAL
 
A_VERTICAL


	)

285 
	#WA_ITALIC
 
A_ITALIC


	)

289 
	#COLOR_BLACK
 0

	)

290 
	#COLOR_RED
 1

	)

291 
	#COLOR_GREEN
 2

	)

292 
	#COLOR_YELLOW
 3

	)

293 
	#COLOR_BLUE
 4

	)

294 
	#COLOR_MAGENTA
 5

	)

295 
	#COLOR_CYAN
 6

	)

296 
	#COLOR_WHITE
 7

	)

300 #i‡0 || 
NCURSES_REENTRANT


301 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

302 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

304 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

307 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,(c))])

	)

310 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

311 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

312 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

313 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

314 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

315 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

316 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

317 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

318 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

319 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

320 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

321 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

322 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

323 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

324 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

325 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

326 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

327 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

329 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

330 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

331 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

332 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

333 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

334 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

335 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

341 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

342 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

343 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

344 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

345 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

346 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

347 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

355 
	#ACS_BSSB
 
ACS_ULCORNER


	)

356 
	#ACS_SSBB
 
ACS_LLCORNER


	)

357 
	#ACS_BBSS
 
ACS_URCORNER


	)

358 
	#ACS_SBBS
 
ACS_LRCORNER


	)

359 
	#ACS_SBSS
 
ACS_RTEE


	)

360 
	#ACS_SSSB
 
ACS_LTEE


	)

361 
	#ACS_SSBS
 
ACS_BTEE


	)

362 
	#ACS_BSSS
 
ACS_TTEE


	)

363 
	#ACS_BSBS
 
ACS_HLINE


	)

364 
	#ACS_SBSB
 
ACS_VLINE


	)

365 
	#ACS_SSSS
 
ACS_PLUS


	)

367 #unde‡
ERR


368 
	#ERR
 (-1)

	)

370 #unde‡
OK


371 
	#OK
 (0)

	)

374 
	#_SUBWIN
 0x01

	)

375 
	#_ENDLINE
 0x02

	)

376 
	#_FULLWIN
 0x04

	)

377 
	#_SCROLLWIN
 0x08

	)

378 
	#_ISPAD
 0x10

	)

379 
	#_HASMOVED
 0x20

	)

380 
	#_WRAPPED
 0x40

	)

386 
	#_NOCHANGE
 -1

	)

392 
	#_NEWINDEX
 -1

	)

394 
s¸ìn
 
	tSCREEN
;

395 
_wö_°
 
	tWINDOW
;

397 
chty≥
 
	t©å_t
;

399 #i‡
NCURSES_WIDECHAR


402 #ifde‡
mbÀn


403 #unde‡
mbÀn


405 
	~<libutf8.h
>

409 
	~<wch¨.h
>

413 
	twch¨_t1
;

417 
	twöt_t1
;

426 
	#CCHARW_MAX
 5

	)

429 
©å_t
 
	g©å
;

430 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

432 #unde‡
NCURSES_EXT_COLORS


433 
	#NCURSES_EXT_COLORS
 20200212

	)

434 
	gext_cﬁ‹
;

437 
	tcch¨_t
;

441 #i‡!
NCURSES_OPAQUE


442 
	gld©
;

444 
	s_wö_°


446 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

449 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

450 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

452 
	g_Êags
;

455 
©å_t
 
	g_©ås
;

456 
chty≥
 
	g_bkgd
;

459 
boﬁ
 
	g_nŸimeout
;

460 
boﬁ
 
	g_˛ór
;

461 
boﬁ
 
	g_Àaveok
;

462 
boﬁ
 
	g_s¸ﬁl
;

463 
boﬁ
 
	g_idlok
;

464 
boﬁ
 
	g_idcok
;

465 
boﬁ
 
	g_immed
;

466 
boﬁ
 
	g_sync
;

467 
boﬁ
 
	g_u£_key∑d
;

468 
	g_dñay
;

470 
ld©
 *
	g_löe
;

473 
NCURSES_SIZE_T
 
	g_ªgt›
;

474 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

477 
	g_∑rx
;

478 
	g_∑ry
;

479 
WINDOW
 *
	g_∑ª¡
;

482 
	spd©


484 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

485 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

486 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

487 } 
	g_∑d
;

489 
NCURSES_SIZE_T
 
	g_yoff£t
;

491 #i‡
NCURSES_WIDECHAR


492 
cch¨_t
 
	g_bkg∫d
;

494 
	g_cﬁ‹
;

504 #ifde‡
NCURSES_WGETCH_EVENTS


505 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

507 
	#NCURSES_EVENT_VERSION
 1

	)

513 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

514 
	#_NC_EVENT_FILE
 2

	)

515 
	#_NC_EVENT_FILE_READABLE
 2

	)

517 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

518 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

523 
	gty≥
;

526 
	gtimeout_m£c
;

529 
	gÊags
;

530 
	gfd
;

531 
	gªsu…
;

532 } 
	g„v
;

533 } 
	gd©a
;

534 } 
	t_nc_evít
;

538 
	gcou¡
;

539 
	gªsu…_Êags
;

540 
_nc_evít
 *
	gevíts
[1];

541 } 
	t_nc_evíéi°
;

543 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

544 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

556 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

557 
	#__©åibuã__
(
p
Ë

	)

568 #i‚de‡
GCC_PRINTFLIKE


569 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

570 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

572 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

576 #i‚de‡
GCC_SCANFLIKE


577 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

578 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

580 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

584 #i‚def 
GCC_NORETURN


585 
	#GCC_NORETURN


	)

588 #i‚def 
GCC_UNUSED


589 
	#GCC_UNUSED


	)

592 #unde‡
GCC_DEPRECATED


593 #i‡(
__GNUC__
 - 0 > 3 || (__GNUC__ - 0 =3 && 
__GNUC_MINOR__
 - 0 >= 2))

594 
	#GCC_DEPRECATED
(
msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

596 
	#GCC_DEPRECATED
(
msg
Ë

	)

603 (*
	gNCURSES_OUTC
)();

612 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

613 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

615 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

616 
NCURSES_EXPORT
(Ë
add°r
 (const *);

617 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

618 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

619 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

620 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

621 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

622 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

623 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, 
NCURSES_PAIRS_T
, *);

624 
NCURSES_EXPORT
(Ë
baudøã
 ();

625 
NCURSES_EXPORT
(Ë
bìp
 ();

626 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

627 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

628 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

629 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

630 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

631 
NCURSES_EXPORT
(Ë
cbªak
 ();

632 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, 
NCURSES_PAIRS_T
, const *);

633 
NCURSES_EXPORT
(Ë
˛ór
 ();

634 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

636 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

637 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T*,NCURSES_COLOR_T*,NCURSES_COLOR_T*);

638 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (
NCURSES_PAIRS_T
,*);

639 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

640 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

641 
NCURSES_EXPORT
(Ë
curs_£t
 ();

642 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

643 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

644 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

645 
NCURSES_EXPORT
(Ë
dñch
 ();

646 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

647 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

648 
NCURSES_EXPORT
(Ë
dñëñn
 ();

649 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

650 
NCURSES_EXPORT
(Ë
doupd©e
 ();

651 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

652 
NCURSES_EXPORT
(Ë
echo
 ();

653 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

654 
NCURSES_EXPORT
(Ë
îa£
 ();

655 
NCURSES_EXPORT
(Ë
ídwö
 ();

656 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

657 
NCURSES_EXPORT
(Ë
fûãr
 ();

658 
NCURSES_EXPORT
(Ë
Êash
 ();

659 
NCURSES_EXPORT
(Ë
Êushöp
 ();

660 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

661 
NCURSES_EXPORT
(Ë
gëch
 ();

662 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

663 
NCURSES_EXPORT
(Ë
gë°r
 (*);

664 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

665 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

666 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

667 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

668 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

669 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

670 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

671 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

672 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

673 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

674 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

675 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

677 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T,NCURSES_COLOR_T,NCURSES_COLOR_T);

678 
NCURSES_EXPORT
(Ë
öô_∑ú
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
,NCURSES_COLOR_T);

679 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

680 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

681 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

682 
NCURSES_EXPORT
(Ë
ö£π 
 ();

683 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

684 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

685 
NCURSES_EXPORT
(Ë
ö°r
 (*);

686 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

687 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

688 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

689 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

690 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

691 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

692 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

693 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

695 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

696 
NCURSES_EXPORT
(Ë
move
 (, );

697 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

698 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

699 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

700 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

701 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

702 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

703 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

704 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

705 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

706 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

707 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

708 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

709 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

710 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

711 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

712 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

713 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

714 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

715 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

716 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

717 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

718 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

719 
GCC_PRINTFLIKE
(3,4);

720 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, const *,...)

721 
GCC_SCANFLIKE
(3,4);

722 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

723 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

724 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

725 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

726 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

727 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

728 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

729 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

730 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

731 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

732 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

733 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

734 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

735 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

736 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

737 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

738 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

739 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

740 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

741 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

742 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

743 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

744 
GCC_PRINTFLIKE
(4,5);

745 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, const *,...)

746 
GCC_SCANFLIKE
(4,5);

747 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

748 
NCURSES_EXPORT
(Ë
«pms
 ();

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

750 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (c⁄° *,
FILE
 *,FILE *);

751 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

752 
NCURSES_EXPORT
(Ë
∆
 ();

753 
NCURSES_EXPORT
(Ë
nocbªak
 ();

754 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

755 
NCURSES_EXPORT
(Ë
n€cho
 ();

756 
NCURSES_EXPORT
(Ë
n⁄l
 ();

757 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

758 
NCURSES_EXPORT
(Ë
n‹aw
 ();

759 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

760 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

761 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

762 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
*,NCURSES_COLOR_T*);

763 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

764 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

765 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

766 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

767 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

768 
GCC_PRINTFLIKE
(1,2);

769 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

770 
NCURSES_EXPORT
(Ë
qiÊush
 ();

771 
NCURSES_EXPORT
(Ë
øw
 ();

772 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

773 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

774 
NCURSES_EXPORT
(Ë
ª£ây
 ();

775 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

776 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

777 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

778 
NCURSES_EXPORT
(Ë
ßvëty
 ();

779 
NCURSES_EXPORT
(Ë
sˇnw
 (const *,...)

780 
GCC_SCANFLIKE
(1,2);

781 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

782 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

783 
NCURSES_EXPORT
(Ë
s¸l
 ();

784 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

786 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

787 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

788 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

789 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

790 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

792 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

793 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

794 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

795 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

796 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,
NCURSES_PAIRS_T
,*);

797 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

798 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 (
NCURSES_PAIRS_T
);

799 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

800 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

801 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

802 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

803 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

804 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

805 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

806 
NCURSES_EXPORT
(Ë
°™dout
 ();

807 
NCURSES_EXPORT
(Ë
°™díd
 ();

808 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

809 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

810 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

811 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

812 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

813 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

814 
NCURSES_EXPORT
(Ë
timeout
 ();

815 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

816 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

818 
NCURSES_EXPORT
(Ë
ungëch
 ();

819 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

821 
NCURSES_EXPORT
(Ë
u£_tio˘l
 (
boﬁ
);

822 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

823 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

824 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

825 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
Ë
GCC_DEPRECATED
(
u£
 
vw_¥ötw
);

826 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

827 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, c⁄° *,
va_li°
Ë
GCC_DEPRECATED
(
u£
 
vw_sˇnw
);

828 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, c⁄° *,
va_li°
);

829 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

830 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

831 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

832 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

833 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

834 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

835 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

836 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

837 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

838 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

839 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

840 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, 
NCURSES_PAIRS_T
, *);

841 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

842 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

843 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

844 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

845 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,
NCURSES_PAIRS_T
,*);

849 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

853 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

854 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

855 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

856 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

857 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

858 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

859 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

860 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

861 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

862 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

863 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

864 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

865 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

866 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

867 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

868 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

869 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

870 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

871 
GCC_PRINTFLIKE
(2,3);

872 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

873 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

874 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, const *,...)

875 
GCC_SCANFLIKE
(2,3);

876 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

877 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

878 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

879 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

880 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

881 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

882 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

883 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

884 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

889 
NCURSES_EXPORT
(Ë
tigëÊag
 (const *);

890 
NCURSES_EXPORT
(Ë
tigënum
 (const *);

891 
NCURSES_EXPORT
(*Ë
tigë°r
 (const *);

892 
NCURSES_EXPORT
(Ë
puç
 (const *);

894 #i‡
NCURSES_TPARM_VARARGS


895 
NCURSES_EXPORT
(*Ë
ç¨m
 (const *, ...);

897 
NCURSES_EXPORT
(*Ë
ç¨m
 (c⁄° *, 
NCURSES_TPARM_ARG
,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG);

898 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (const *, ...);

901 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

906 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

907 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

908 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

909 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

910 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

911 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

912 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

913 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

914 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

919 #i‡!
NCURSES_WIDECHAR


920 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

927 #unde‡
NCURSES_EXT_FUNCS


928 
	#NCURSES_EXT_FUNCS
 20200212

	)

929 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

930 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

931 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

932 
NCURSES_EXPORT
(*Ë
keybound
 (, );

933 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

934 
NCURSES_EXPORT
(Ë
Æloc_∑ú
 (, );

935 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

936 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

937 
NCURSES_EXPORT
(Ë
exãnded_cﬁ‹_c⁄ã¡
(, *, *, *);

938 
NCURSES_EXPORT
(Ë
exãnded_∑ú_c⁄ã¡
(, *, *);

939 
NCURSES_EXPORT
(Ë
exãnded_¶k_cﬁ‹
();

940 
NCURSES_EXPORT
(Ë
föd_∑ú
 (, );

941 
NCURSES_EXPORT
(Ë
‰ì_∑ú
 ();

942 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

943 
NCURSES_EXPORT
(Ë
öô_exãnded_cﬁ‹
(, , , );

944 
NCURSES_EXPORT
(Ë
öô_exãnded_∑ú
(, , );

945 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

946 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

947 
NCURSES_EXPORT
(Ë
ª£t_cﬁ‹_∑ús
 ();

948 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

949 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

950 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

951 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

952 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

953 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

954 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

955 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

956 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

957 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

958 
NCURSES_EXPORT
(Ë
nofûãr
();

964 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

965 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

966 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

967 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

968 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

969 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

970 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

971 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

972 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

973 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

974 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

975 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

976 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

977 
NCURSES_EXPORT
(Ë
wgëdñay
 (c⁄° 
WINDOW
 *);

978 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

981 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

989 #unde‡
NCURSES_SP_FUNCS


990 
	#NCURSES_SP_FUNCS
 20200212

	)

991 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

994 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

995 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

997 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

999 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

1000 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

1001 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

1004 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*, NCURSES_COLOR_T*);

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

1014 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

1015 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

1016 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

1017 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

1018 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

1019 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

1020 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_COLOR_T
, NCURSES_COLOR_T, NCURSES_COLOR_T, NCURSES_COLOR_T);

1021 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
, NCURSES_COLOR_T);

1022 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

1023 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

1024 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

1025 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

1026 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

1027 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

1028 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

1029 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

1030 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, c⁄° *, 
FILE
 *, FILE *);

1031 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

1032 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

1033 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

1034 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

1035 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

1036 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

1037 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

1038 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*);

1039 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

1040 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

1041 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

1042 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

1043 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

1044 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

1045 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

1046 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

1047 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

1048 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

1049 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

1050 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

1051 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

1052 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

1053 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, 
NCURSES_PAIRS_T
, *);

1054 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

1055 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
);

1056 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

1057 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

1058 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

1059 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

1060 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

1061 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

1062 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

1063 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

1064 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

1065 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

1066 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

1067 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

1068 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

1069 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_tio˘l
Ë(
SCREEN
*, 
boﬁ
);

1070 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

1071 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1073 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1074 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Æloc_∑ú
Ë(
SCREEN
*, , );

1075 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1076 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1077 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

1078 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

1079 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_¶k_cﬁ‹
Ë(
SCREEN
*, );

1080 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1081 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
föd_∑ú
Ë(
SCREEN
*, , );

1082 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
‰ì_∑ú
Ë(
SCREEN
*, );

1083 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_exãnded_cﬁ‹
Ë(
SCREEN
*, , , , );

1084 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_exãnded_∑ú
Ë(
SCREEN
*, , , );

1085 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1086 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1087 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1088 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1089 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_cﬁ‹_∑ús
Ë(
SCREEN
*);

1090 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1091 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1092 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1093 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1094 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1095 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1098 #unde‡
NCURSES_SP_FUNCS


1099 
	#NCURSES_SP_FUNCS
 0

	)

1100 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1101 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1106 
	#NCURSES_ATTR_SHIFT
 8

	)

1107 
	#NCURSES_BITS
(
mask
,
shi·
Ë(
	`NCURSES_CAST
(
chty≥
,(mask)Ë<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1109 
	#A_NORMAL
 (1U - 1U)

	)

1110 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1U - 1U),0)

	)

1111 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1U,0Ë- 1U)

	)

1112 
	#A_COLOR
 
	`NCURSES_BITS
(((1UË<< 8Ë- 1U,0)

	)

1113 
	#A_STANDOUT
 
	`NCURSES_BITS
(1U,8)

	)

1114 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1U,9)

	)

1115 
	#A_REVERSE
 
	`NCURSES_BITS
(1U,10)

	)

1116 
	#A_BLINK
 
	`NCURSES_BITS
(1U,11)

	)

1117 
	#A_DIM
 
	`NCURSES_BITS
(1U,12)

	)

1118 
	#A_BOLD
 
	`NCURSES_BITS
(1U,13)

	)

1119 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1U,14)

	)

1120 
	#A_INVIS
 
	`NCURSES_BITS
(1U,15)

	)

1121 
	#A_PROTECT
 
	`NCURSES_BITS
(1U,16)

	)

1122 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1U,17)

	)

1123 
	#A_LEFT
 
	`NCURSES_BITS
(1U,18)

	)

1124 
	#A_LOW
 
	`NCURSES_BITS
(1U,19)

	)

1125 
	#A_RIGHT
 
	`NCURSES_BITS
(1U,20)

	)

1126 
	#A_TOP
 
	`NCURSES_BITS
(1U,21)

	)

1127 
	#A_VERTICAL
 
	`NCURSES_BITS
(1U,22)

	)

1130 
	#A_ITALIC
 
	`NCURSES_BITS
(1U,23Ë

	)

1143 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1144 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1145 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1146 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1148 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1149 i‡(
	`is_Àaveok
(
√ws¸
)) \

1150 (
y
Ë(
x
) = -1; \

1152 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1154 } 0)

	)

1156 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1157 i‡((
y
Ë=-1 && (
x
) == -1) \

1158 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1160 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1161 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1164 } 0)

	)

1166 #i‚de‡
NCURSES_NOMACROS


1172 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1173 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s, (n))

	)

1175 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1177 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1178 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1179 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1180 
	#¸mode
(Ë
	`cbªak
()

	)

1181 
	#no¸mode
(Ë
	`nocbªak
()

	)

1182 
	#gëtmode
()

	)

1185 #i‡!
NCURSES_OPAQUE


1186 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, 
	`NCURSES_OK_ADDR
(wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1187 
	#gëcurx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_curx
 : 
ERR
)

	)

1188 
	#gëcury
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_cury
 : 
ERR
)

	)

1189 
	#gëbegx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_begx
 : 
ERR
)

	)

1190 
	#gëbegy
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_begy
 : 
ERR
)

	)

1191 
	#gëmaxx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1192 
	#gëmaxy
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1193 
	#gë∑rx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1194 
	#gë∑ry
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1197 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1198 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1200 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1201 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1203 #i‡!
NCURSES_OPAQUE


1204 #i‡
NCURSES_WATTR_MACROS


1205 #i‡
NCURSES_WIDECHAR
 && 1

1206 
	#w©å£t
(
wö
,
©
) \

1207 (
	`NCURSES_OK_ADDR
(
wö
) \

1208 ? ((
wö
)->
_cﬁ‹
 = 
	`NCURSES_CAST
(, 
	`PAIR_NUMBER
(
©
)), \

1209 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1210 
OK
) \

1211 : 
ERR
)

	)

1213 
	#w©å£t
(
wö
,
©
) \

1214 (
	`NCURSES_OK_ADDR
(
wö
) \

1215 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1216 
OK
) \

1217 : 
ERR
)

	)

1222 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1224 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1225 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1226 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1228 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1229 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1230 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch, (n))

	)

1231 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch, (n))

	)

1233 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1234 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1235 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1237 #i‡!
NCURSES_OPAQUE


1238 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (
	`NCURSES_OK_ADDR
(wöË? (wö)->
_maxy
+1 : -1))

	)

1241 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1242 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1247 
	#COLOR_PAIR
(
n
Ë(
	`NCURSES_BITS
(“), 0Ë& 
A_COLOR
)

	)

1248 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,◊)Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1254 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,(ch))

	)

1255 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,(°r),“))

	)

1256 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,(°r))

	)

1257 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,(°r),“))

	)

1258 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,(°r),-1)

	)

1259 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,◊p),(˝),(o))

	)

1260 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,◊),(o))

	)

1261 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,◊),(o))

	)

1262 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,◊),(c),(o))

	)

1263 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,◊t))

	)

1264 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,◊t))

	)

1265 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,◊t))

	)

1266 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,(ch))

	)

1267 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,(ch))

	)

1268 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,“),◊),(c),(o))

	)

1269 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1270 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1271 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1272 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,(c),(o))

	)

1273 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1274 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1275 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,(c))

	)

1276 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1277 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1278 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,(°r))

	)

1279 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1280 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,(s),“))

	)

1281 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,(s))

	)

1282 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,(s),“))

	)

1283 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,(c))

	)

1284 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,“))

	)

1285 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1286 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,(s),“))

	)

1287 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,(s))

	)

1288 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,(s))

	)

1289 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,(y),(x))

	)

1290 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1291 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,“))

	)

1292 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,—),(b))

	)

1293 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1294 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1295 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,(dñay))

	)

1296 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1297 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1303 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddch
((wö),(ch)))

	)

1304 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),“)))

	)

1305 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),-1))

	)

1306 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),“)))

	)

1307 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),-1))

	)

1308 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wchg©
((wö),“),◊),(c),(o)))

	)

1309 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1310 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1311 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgën°r
((wö),(°r),“)))

	)

1312 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgë°r
((wö),(°r)))

	)

1313 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`whlöe
((wö),(c),“)))

	)

1314 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1315 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöchn°r
((wö),(s),“)))

	)

1316 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöch°r
((wö),(s)))

	)

1317 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wön°r
((wö),(s),“)))

	)

1318 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wösch
((wö),(c)))

	)

1319 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö¢°r
((wö),(s),“)))

	)

1320 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wös°r
((wö),(s)))

	)

1321 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö°r
((wö),(s)))

	)

1322 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wvlöe
((wö),(c),“)))

	)

1324 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,(y),(x),(ch))

	)

1325 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1326 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,(y),(x),(°r))

	)

1327 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1328 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,(y),(x),(°r))

	)

1329 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,(y),(x),“),◊),(c),(o))

	)

1330 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,(y),(x))

	)

1331 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,(y),(x))

	)

1332 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,(y),(x),(°r),“))

	)

1333 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,(y),(x),(°r))

	)

1334 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,(y),(x),(c),“))

	)

1335 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,(y),(x))

	)

1336 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,(y),(x),(s),“))

	)

1337 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,(y),(x),(s))

	)

1338 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,(y),(x),(s),“))

	)

1339 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,(y),(x),(c))

	)

1340 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,(y),(x),(s),“))

	)

1341 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,(y),(x),(s))

	)

1342 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,(y),(x),(s))

	)

1343 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,(y),(x),(c),“))

	)

1348 #i‡!
NCURSES_OPAQUE


1349 
	#gëbkgd
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_bkgd
Ë: 0)

	)

1352 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1353 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1355 #i‡!
NCURSES_OPAQUE


1356 #i‡
NCURSES_WATTR_MACROS


1357 #i‡
NCURSES_WIDECHAR
 && 1

1358 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) \

1359 (
	`NCURSES_OK_ADDR
(
wö
) \

1360 ? (()((
wö
)->
_©ås
 = ((
a
Ë& ~
A_COLOR
), \

1361 (
wö
)->
_cﬁ‹
 = (
›ts
Ë? *(*)(›tsË: (
p
)), \

1362 
OK
) \

1363 : 
ERR
)

	)

1364 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) \

1365 (
	`NCURSES_OK_ADDR
(
wö
) \

1366 ? (()(
	`NCURSES_OK_ADDR
(
a
) \

1367 ? (*(
a
Ë(
wö
)->
_©ås
) \

1368 : 
OK
), \

1369 ()(
	`NCURSES_OK_ADDR
(
p
) \

1370 ? (*(
p
Ë(
NCURSES_PAIRS_T
Ë(
wö
)->
_cﬁ‹
) \

1371 : 
OK
), \

1372 ()(
	`NCURSES_OK_ADDR
(
›ts
) \

1373 ? (*(*)(
›ts
Ë(
wö
)->
_cﬁ‹
) \

1374 : 
OK
), \

1375 
OK
) \

1376 : 
ERR
)

	)

1378 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) \

1379 (
	`NCURSES_OK_ADDR
(
wö
) \

1380 ? (()((
wö
)->
_©ås
 = (((
a
Ë& ~
A_COLOR
) | \

1381 (
©å_t
)
	`COLOR_PAIR
(
p
))), \

1382 
OK
) \

1383 : 
ERR
)

	)

1384 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) \

1385 (
	`NCURSES_OK_ADDR
(
wö
) \

1386 ? (()(
	`NCURSES_OK_ADDR
(
a
) \

1387 ? (*(
a
Ë(
wö
)->
_©ås
) \

1388 : 
OK
), \

1389 ()(
	`NCURSES_OK_ADDR
(
p
) \

1390 ? (*(
p
Ë(
NCURSES_PAIRS_T
Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
)) \

1391 : 
OK
), \

1392 
OK
) \

1393 : 
ERR
)

	)

1411 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1412 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1419 #i‡!
NCURSES_OPAQUE


1420 
	#is_˛óªd
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1421 
	#is_idcok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1422 
	#is_idlok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1423 
	#is_immedok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_immed
 : 
FALSE
)

	)

1424 
	#is_key∑d
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1425 
	#is_Àaveok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1426 
	#is_nodñay
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1427 
	#is_nŸimeout
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1428 
	#is_∑d
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1429 
	#is_s¸ﬁlok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1430 
	#is_subwö
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1431 
	#is_syncok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_sync
 : 
FALSE
)

	)

1432 
	#wgëdñay
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_dñay
 : 0)

	)

1433 
	#wgë∑ª¡
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑ª¡
 : 0)

	)

1434 
	#wgës¸ªg
(
wö
,
t
,
b
Ë(
	`NCURSES_OK_ADDR
(wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1442 
	#is_löëouched
(
w
,
l
Ë((!(wË|| (÷Ë> 
	`gëmaxy
(w)Ë|| (÷Ë< 0)Ë? 
ERR
 : (
is_löëouched
)((w),÷)))

	)

1454 #i‡
NCURSES_REENTRANT


1456 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1457 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1458 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1459 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1460 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1461 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1462 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1463 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1464 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1465 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1467 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1468 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1469 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1470 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1471 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1472 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1473 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1474 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1475 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1476 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1480 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1481 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1482 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1483 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1484 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1485 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1486 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1487 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1488 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1489 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1505 
	#KEY_CODE_YES
 0400

	)

1506 
	#KEY_MIN
 0401

	)

1507 
	#KEY_BREAK
 0401

	)

1508 
	#KEY_SRESET
 0530

	)

1509 
	#KEY_RESET
 0531

	)

1513 
	#KEY_DOWN
 0402

	)

1514 
	#KEY_UP
 0403

	)

1515 
	#KEY_LEFT
 0404

	)

1516 
	#KEY_RIGHT
 0405

	)

1517 
	#KEY_HOME
 0406

	)

1518 
	#KEY_BACKSPACE
 0407

	)

1519 
	#KEY_F0
 0410

	)

1520 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1521 
	#KEY_DL
 0510

	)

1522 
	#KEY_IL
 0511

	)

1523 
	#KEY_DC
 0512

	)

1524 
	#KEY_IC
 0513

	)

1525 
	#KEY_EIC
 0514

	)

1526 
	#KEY_CLEAR
 0515

	)

1527 
	#KEY_EOS
 0516

	)

1528 
	#KEY_EOL
 0517

	)

1529 
	#KEY_SF
 0520

	)

1530 
	#KEY_SR
 0521

	)

1531 
	#KEY_NPAGE
 0522

	)

1532 
	#KEY_PPAGE
 0523

	)

1533 
	#KEY_STAB
 0524

	)

1534 
	#KEY_CTAB
 0525

	)

1535 
	#KEY_CATAB
 0526

	)

1536 
	#KEY_ENTER
 0527

	)

1537 
	#KEY_PRINT
 0532

	)

1538 
	#KEY_LL
 0533

	)

1539 
	#KEY_A1
 0534

	)

1540 
	#KEY_A3
 0535

	)

1541 
	#KEY_B2
 0536

	)

1542 
	#KEY_C1
 0537

	)

1543 
	#KEY_C3
 0540

	)

1544 
	#KEY_BTAB
 0541

	)

1545 
	#KEY_BEG
 0542

	)

1546 
	#KEY_CANCEL
 0543

	)

1547 
	#KEY_CLOSE
 0544

	)

1548 
	#KEY_COMMAND
 0545

	)

1549 
	#KEY_COPY
 0546

	)

1550 
	#KEY_CREATE
 0547

	)

1551 
	#KEY_END
 0550

	)

1552 
	#KEY_EXIT
 0551

	)

1553 
	#KEY_FIND
 0552

	)

1554 
	#KEY_HELP
 0553

	)

1555 
	#KEY_MARK
 0554

	)

1556 
	#KEY_MESSAGE
 0555

	)

1557 
	#KEY_MOVE
 0556

	)

1558 
	#KEY_NEXT
 0557

	)

1559 
	#KEY_OPEN
 0560

	)

1560 
	#KEY_OPTIONS
 0561

	)

1561 
	#KEY_PREVIOUS
 0562

	)

1562 
	#KEY_REDO
 0563

	)

1563 
	#KEY_REFERENCE
 0564

	)

1564 
	#KEY_REFRESH
 0565

	)

1565 
	#KEY_REPLACE
 0566

	)

1566 
	#KEY_RESTART
 0567

	)

1567 
	#KEY_RESUME
 0570

	)

1568 
	#KEY_SAVE
 0571

	)

1569 
	#KEY_SBEG
 0572

	)

1570 
	#KEY_SCANCEL
 0573

	)

1571 
	#KEY_SCOMMAND
 0574

	)

1572 
	#KEY_SCOPY
 0575

	)

1573 
	#KEY_SCREATE
 0576

	)

1574 
	#KEY_SDC
 0577

	)

1575 
	#KEY_SDL
 0600

	)

1576 
	#KEY_SELECT
 0601

	)

1577 
	#KEY_SEND
 0602

	)

1578 
	#KEY_SEOL
 0603

	)

1579 
	#KEY_SEXIT
 0604

	)

1580 
	#KEY_SFIND
 0605

	)

1581 
	#KEY_SHELP
 0606

	)

1582 
	#KEY_SHOME
 0607

	)

1583 
	#KEY_SIC
 0610

	)

1584 
	#KEY_SLEFT
 0611

	)

1585 
	#KEY_SMESSAGE
 0612

	)

1586 
	#KEY_SMOVE
 0613

	)

1587 
	#KEY_SNEXT
 0614

	)

1588 
	#KEY_SOPTIONS
 0615

	)

1589 
	#KEY_SPREVIOUS
 0616

	)

1590 
	#KEY_SPRINT
 0617

	)

1591 
	#KEY_SREDO
 0620

	)

1592 
	#KEY_SREPLACE
 0621

	)

1593 
	#KEY_SRIGHT
 0622

	)

1594 
	#KEY_SRSUME
 0623

	)

1595 
	#KEY_SSAVE
 0624

	)

1596 
	#KEY_SSUSPEND
 0625

	)

1597 
	#KEY_SUNDO
 0626

	)

1598 
	#KEY_SUSPEND
 0627

	)

1599 
	#KEY_UNDO
 0630

	)

1600 
	#KEY_MOUSE
 0631

	)

1601 
	#KEY_RESIZE
 0632

	)

1602 
	#KEY_EVENT
 0633

	)

1604 
	#KEY_MAX
 0777

	)

1611 
	#_XOPEN_CURSES
 1

	)

1613 #i‡
NCURSES_WIDECHAR


1615 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1617 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[
	`NCURSES_CAST
(,(c))])

	)

1619 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1620 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1621 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1622 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1623 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1624 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1625 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1626 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1627 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1628 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1629 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1631 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1632 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1633 
	#WACS_URCORNER
 
WACS_BBSS


	)

1634 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1635 
	#WACS_RTEE
 
WACS_SBSS


	)

1636 
	#WACS_LTEE
 
WACS_SSSB


	)

1637 
	#WACS_BTEE
 
WACS_SSBS


	)

1638 
	#WACS_TTEE
 
WACS_BSSS


	)

1639 
	#WACS_HLINE
 
WACS_BSBS


	)

1640 
	#WACS_VLINE
 
WACS_SBSB


	)

1641 
	#WACS_PLUS
 
WACS_SSSS


	)

1643 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1644 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1645 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1646 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1647 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1648 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1649 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1652 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1653 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1654 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1655 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1656 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1657 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1658 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1661 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1662 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1663 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1664 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1665 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1666 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1667 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1670 
	#WACS_BDDB
 
	`NCURSES_WACS
('C')

	)

1671 
	#WACS_DDBB
 
	`NCURSES_WACS
('D')

	)

1672 
	#WACS_BBDD
 
	`NCURSES_WACS
('B')

	)

1673 
	#WACS_DBBD
 
	`NCURSES_WACS
('A')

	)

1674 
	#WACS_DBDD
 
	`NCURSES_WACS
('G')

	)

1675 
	#WACS_DDDB
 
	`NCURSES_WACS
('F')

	)

1676 
	#WACS_DDBD
 
	`NCURSES_WACS
('H')

	)

1677 
	#WACS_BDDD
 
	`NCURSES_WACS
('I')

	)

1678 
	#WACS_BDBD
 
	`NCURSES_WACS
('R')

	)

1679 
	#WACS_DBDB
 
	`NCURSES_WACS
('Y')

	)

1680 
	#WACS_DDDD
 
	`NCURSES_WACS
('E')

	)

1682 
	#WACS_D_ULCORNER
 
WACS_BDDB


	)

1683 
	#WACS_D_LLCORNER
 
WACS_DDBB


	)

1684 
	#WACS_D_URCORNER
 
WACS_BBDD


	)

1685 
	#WACS_D_LRCORNER
 
WACS_DBBD


	)

1686 
	#WACS_D_RTEE
 
WACS_DBDD


	)

1687 
	#WACS_D_LTEE
 
WACS_DDDB


	)

1688 
	#WACS_D_BTEE
 
WACS_DDBD


	)

1689 
	#WACS_D_TTEE
 
WACS_BDDD


	)

1690 
	#WACS_D_HLINE
 
WACS_BDBD


	)

1691 
	#WACS_D_VLINE
 
WACS_DBDB


	)

1692 
	#WACS_D_PLUS
 
WACS_DDDD


	)

1695 
	#WACS_BTTB
 
	`NCURSES_WACS
('L')

	)

1696 
	#WACS_TTBB
 
	`NCURSES_WACS
('M')

	)

1697 
	#WACS_BBTT
 
	`NCURSES_WACS
('K')

	)

1698 
	#WACS_TBBT
 
	`NCURSES_WACS
('J')

	)

1699 
	#WACS_TBTT
 
	`NCURSES_WACS
('U')

	)

1700 
	#WACS_TTTB
 
	`NCURSES_WACS
('T')

	)

1701 
	#WACS_TTBT
 
	`NCURSES_WACS
('V')

	)

1702 
	#WACS_BTTT
 
	`NCURSES_WACS
('W')

	)

1703 
	#WACS_BTBT
 
	`NCURSES_WACS
('Q')

	)

1704 
	#WACS_TBTB
 
	`NCURSES_WACS
('X')

	)

1705 
	#WACS_TTTT
 
	`NCURSES_WACS
('N')

	)

1707 
	#WACS_T_ULCORNER
 
WACS_BTTB


	)

1708 
	#WACS_T_LLCORNER
 
WACS_TTBB


	)

1709 
	#WACS_T_URCORNER
 
WACS_BBTT


	)

1710 
	#WACS_T_LRCORNER
 
WACS_TBBT


	)

1711 
	#WACS_T_RTEE
 
WACS_TBTT


	)

1712 
	#WACS_T_LTEE
 
WACS_TTTB


	)

1713 
	#WACS_T_BTEE
 
WACS_TTBT


	)

1714 
	#WACS_T_TTEE
 
WACS_BTTT


	)

1715 
	#WACS_T_HLINE
 
WACS_BTBT


	)

1716 
	#WACS_T_VLINE
 
WACS_TBTB


	)

1717 
	#WACS_T_PLUS
 
WACS_TTTT


	)

1728 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1729 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1730 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1731 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1732 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1733 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1734 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1735 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1736 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1737 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1738 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1739 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1740 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1741 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1742 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, 
NCURSES_PAIRS_T
*, *);

1743 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1744 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1745 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1746 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1747 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1748 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1749 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1750 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1751 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1752 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1753 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1754 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1755 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1756 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1757 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1758 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1759 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1760 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1761 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1762 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1763 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1764 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1765 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1766 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1767 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1768 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1769 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1770 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1771 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1772 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1773 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1774 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1775 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1776 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1777 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1778 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1779 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1780 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1781 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1782 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1783 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1784 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1785 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1786 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1787 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1788 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1789 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1790 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1791 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1792 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, 
NCURSES_PAIRS_T
, const *);

1793 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1794 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1795 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1796 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, 
NCURSES_PAIRS_T
, *);

1797 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, 
NCURSES_PAIRS_T
, *, 
NCURSES_OUTC
);

1798 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1799 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1800 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1801 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1802 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1803 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1804 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1805 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1806 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1807 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1808 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1809 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1810 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1811 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *, 
wöt_t
 *, );

1812 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1813 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1814 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1815 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1816 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1817 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1818 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1819 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1820 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1821 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1822 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1824 #i‡
NCURSES_SP_FUNCS


1825 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
ãrm_©ås
Ë(
SCREEN
*);

1826 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungë_wch
Ë(
SCREEN
*, c⁄° 
wch¨_t
);

1827 
NCURSES_EXPORT
(
wch¨_t
*Ë
NCURSES_SP_NAME
(
wun˘æ
Ë(
SCREEN
*, 
cch¨_t
 *);

1828 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_©å
Ë(
SCREEN
*, 
©å_t
, 
NCURSES_PAIRS_T
, *);

1829 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_puts
Ë(
SCREEN
*, 
©å_t
, 
NCURSES_PAIRS_T
, *, 
NCURSES_SP_OUTC
);

1832 #i‚de‡
NCURSES_NOMACROS


1837 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,(c))

	)

1838 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,(°r),“))

	)

1839 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,(°r))

	)

1840 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,(w°r),“))

	)

1841 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,(w°r))

	)

1842 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,(c))

	)

1843 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,(c))

	)

1844 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,÷),‘),—),(b),é,å,bl,br)

	)

1845 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
((w),(v),(v),(h),(h),0,0,0,0)

	)

1846 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,(c))

	)

1847 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,(c))

	)

1848 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,—))

	)

1849 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,(wch))

	)

1850 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,—),“))

	)

1851 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,(c),“))

	)

1852 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,(c))

	)

1853 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,(c),“))

	)

1854 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,(c))

	)

1855 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,(c),“))

	)

1856 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,—),“))

	)

1857 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,(c))

	)

1858 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,—))

	)

1859 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,(c))

	)

1860 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,(c),“))

	)

1861 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
((wö),(°r),-1)

	)

1862 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
((wö),(w°r),-1)

	)

1863 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
((w),—),-1)

	)

1864 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
((w),(c),-1)

	)

1865 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
((w),—),-1)

	)

1867 #i‡!
NCURSES_OPAQUE


1868 
	#wgëbkg∫d
(
wö
,
wch
Ë(
	`NCURSES_OK_ADDR
(wchË? ((wöË? (*(wchË(wö)->
_bkg∫d
Ë: *(wch), 
OK
Ë: 
ERR
)

	)

1871 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,(y),(x),(c))

	)

1872 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,(y),(x),(s),“))

	)

1873 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,(y),(x),(s))

	)

1874 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,(y),(x),(w°r),“))

	)

1875 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,(y),(x),(w°r))

	)

1876 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,(y),(x),(c))

	)

1877 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,(y),(x),—))

	)

1878 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,(y),(x),—),“))

	)

1879 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,(y),(x),(c),“))

	)

1880 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,(y),(x),(c))

	)

1881 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,(y),(x),(c),“))

	)

1882 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,(y),(x),(c))

	)

1883 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,(y),(x),(c),“))

	)

1884 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,(y),(x),—),“))

	)

1885 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,(y),(x),(c))

	)

1886 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,(y),(x),—))

	)

1887 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,(y),(x),(c))

	)

1888 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,(y),(x),(c),“))

	)

1890 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wch
((wö),(c)))

	)

1891 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wchn°r
((wö),(s),“)))

	)

1892 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wch°r
((wö),(s)))

	)

1893 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`waddnw°r
((wö),(w°r),“)))

	)

1894 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`waddw°r
((wö),(w°r)))

	)

1895 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgë_wch
((wö),(c)))

	)

1896 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgë_w°r
((wö),—)))

	)

1897 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgën_w°r
((wö),—),“)))

	)

1898 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`whlöe_£t
((wö),(c),“)))

	)

1899 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wch
((wö),(c)))

	)

1900 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wchn°r
((wö),(c),“)))

	)

1901 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wch°r
((wö),(c)))

	)

1902 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wönw°r
((wö),(c),“)))

	)

1903 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_nw°r
((wö),—),“)))

	)

1904 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_wch
((wö),(c)))

	)

1905 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_w°r
((wö),—)))

	)

1906 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wöw°r
((wö),(c)))

	)

1907 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wvlöe_£t
((wö),(c),“)))

	)

1911 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1912 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1913 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1926 #i‡
NCURSES_MOUSE_VERSION
 > 1

1927 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1929 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1932 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1933 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1934 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1935 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1936 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1937 
	#NCURSES_RESERVED_EVENT
 040L

	)

1940 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1941 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1942 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1943 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1944 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1946 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1947 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1948 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1949 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1950 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1952 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1953 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1954 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1955 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1956 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1958 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1959 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1960 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1961 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1962 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1968 #i‡
NCURSES_MOUSE_VERSION
 > 1

1970 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1971 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1972 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1973 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1974 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1976 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1977 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1978 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1979 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1983 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1984 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1985 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1986 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1988 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1989 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1990 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1991 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1995 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1998 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1999 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

2000 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

2001 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

2002 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

2003 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

2007 
	gid
;

2008 
	gx
, 
	gy
, 
	gz
;

2009 
mmask_t
 
	gb°©e
;

2011 
	tMEVENT
;

2013 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

2014 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

2015 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

2016 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

2017 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

2018 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

2019 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

2020 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

2022 #i‡
NCURSES_SP_FUNCS


2023 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

2024 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

2025 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

2026 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

2027 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

2030 #i‚de‡
NCURSES_NOMACROS


2031 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

2036 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

2037 
NCURSES_EXPORT
(Ë
has_key
 ();

2039 #i‡
NCURSES_SP_FUNCS


2040 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

2041 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

2046 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

2047 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

2048 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

2049 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

2050 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

2051 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

2052 #i‡
NCURSES_WIDECHAR


2053 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

2054 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

2055 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

2056 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

2058 
	#_åa˚ch_t
 
_åa˚chty≥


	)

2059 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

2061 
NCURSES_EXPORT
(Ë
åa˚
 (c⁄° Ë
GCC_DEPRECATED
("use curses_trace");

2062 
NCURSES_EXPORT
(Ë
cur£s_åa˚
 (const );

2065 
	#TRACE_DISABLE
 0x0000

	)

2066 
	#TRACE_TIMES
 0x0001

	)

2067 
	#TRACE_TPUTS
 0x0002

	)

2068 
	#TRACE_UPDATE
 0x0004

	)

2069 
	#TRACE_MOVE
 0x0008

	)

2070 
	#TRACE_CHARPUT
 0x0010

	)

2071 
	#TRACE_ORDINARY
 0x001F

	)

2072 
	#TRACE_CALLS
 0x0020

	)

2073 
	#TRACE_VIRTPUT
 0x0040

	)

2074 
	#TRACE_IEVENT
 0x0080

	)

2075 
	#TRACE_BITS
 0x0100

	)

2076 
	#TRACE_ICALLS
 0x0200

	)

2077 
	#TRACE_CCALLS
 0x0400

	)

2078 
	#TRACE_DATABASE
 0x0800

	)

2079 
	#TRACE_ATTRS
 0x1000

	)

2081 
	#TRACE_SHIFT
 13

	)

2082 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

2084 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

2085 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

2086 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

2087 
	#OPTIMIZE_MVCUR
 0x01

	)

2088 
	#OPTIMIZE_HASHMAP
 0x02

	)

2089 
	#OPTIMIZE_SCROLL
 0x04

	)

2090 
	#OPTIMIZE_ALL
 0xf‡

	)

2093 
NCURSES_EXPORT
(Ë
exô_cur£s
 (Ë
GCC_NORETURN
;

2095 
	~<un˘æ.h
>

2097 #ifde‡
__˝lu•lus


2099 #i‚de‡
NCURSES_NOMACROS


2102 #unde‡
box


2103 #unde‡
˛ór


2104 #unde‡
îa£


2105 #unde‡
move


2106 #unde‡
ª‰esh


	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
	slc⁄v


55 *
	mdecimÆ_poöt
;

56 *
	mthoußnds_£p
;

62 *
	mgroupög
;

68 *
	möt_cuº_symbﬁ
;

69 *
	mcuºícy_symbﬁ
;

70 *
	mm⁄_decimÆ_poöt
;

71 *
	mm⁄_thoußnds_£p
;

72 *
	mm⁄_groupög
;

73 *
	mposôive_sign
;

74 *
	m√g©ive_sign
;

75 
	möt_‰ac_digôs
;

76 
	m‰ac_digôs
;

78 
	mp_cs_¥e˚des
;

80 
	mp_£p_by_•a˚
;

82 
	mn_cs_¥e˚des
;

84 
	mn_£p_by_•a˚
;

91 
	mp_sign_po¢
;

92 
	mn_sign_po¢
;

93 #ifde‡
__USE_ISOC99


95 
	möt_p_cs_¥e˚des
;

97 
	möt_p_£p_by_•a˚
;

99 
	möt_n_cs_¥e˚des
;

101 
	möt_n_£p_by_•a˚
;

108 
	möt_p_sign_po¢
;

109 
	möt_n_sign_po¢
;

111 
	m__öt_p_cs_¥e˚des
;

112 
	m__öt_p_£p_by_•a˚
;

113 
	m__öt_n_cs_¥e˚des
;

114 
	m__öt_n_£p_by_•a˚
;

115 
	m__öt_p_sign_po¢
;

116 
	m__öt_n_sign_po¢
;

122 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

125 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

128 #ifdef 
__USE_XOPEN2K8


135 
	~<bôs/ty≥s/loˇÀ_t.h
>

141 
loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

142 
loˇÀ_t
 
__ba£
Ë
__THROW
;

148 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

149 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

150 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

151 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

152 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

153 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

154 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

155 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

156 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

157 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

158 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

159 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

160 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

161 | 
LC_NUMERIC_MASK
 \

162 | 
LC_TIME_MASK
 \

163 | 
LC_COLLATE_MASK
 \

164 | 
LC_MONETARY_MASK
 \

165 | 
LC_MESSAGES_MASK
 \

166 | 
LC_PAPER_MASK
 \

167 | 
LC_NAME_MASK
 \

168 | 
LC_ADDRESS_MASK
 \

169 | 
LC_TELEPHONE_MASK
 \

170 | 
LC_MEASUREMENT_MASK
 \

171 | 
LC_IDENTIFICATION_MASK
 \

172 )

	)

176 
loˇÀ_t
 
	$du∂oˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

180 
	$‰ìloˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

187 
loˇÀ_t
 
	$u£loˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	#LC_GLOBAL_LOCALE
 ((
loˇÀ_t
Ë-1L)

	)

195 
__END_DECLS


	@/usr/include/ncurses.h

38 #i‚de‡
__NCURSES_H


39 
	#__NCURSES_H


	)

41 
	#CURSES
 1

	)

42 
	#CURSES_H
 1

	)

45 
	#NCURSES_VERSION_MAJOR
 6

	)

46 
	#NCURSES_VERSION_MINOR
 2

	)

47 
	#NCURSES_VERSION_PATCH
 20200212

	)

50 #unde‡
NCURSES_VERSION


51 
	#NCURSES_VERSION
 "6.2"

	)

56 
	#NCURSES_MOUSE_VERSION
 2

	)

61 
	~<ncur£s_dŒ.h
>

64 
	~<°döt.h
>

70 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


71 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

78 #i‚de‡
NCURSES_ATTR_T


79 
	#NCURSES_ATTR_T
 

	)

86 #unde‡
NCURSES_CONST


87 
	#NCURSES_CONST
 c⁄°

	)

89 #unde‡
NCURSES_INLINE


90 
	#NCURSES_INLINE
 
ölöe


	)

101 #unde‡
NCURSES_COLOR_T


102 
	#NCURSES_COLOR_T
 

	)

104 #unde‡
NCURSES_PAIRS_T


105 
	#NCURSES_PAIRS_T
 

	)

110 #i‚de‡
NCURSES_INTERNALS


111 
	#NCURSES_OPAQUE
 0

	)

112 
	#NCURSES_OPAQUE_FORM
 0

	)

113 
	#NCURSES_OPAQUE_MENU
 0

	)

114 
	#NCURSES_OPAQUE_PANEL
 0

	)

122 #i‚de‡
NCURSES_WATTR_MACROS


123 
	#NCURSES_WATTR_MACROS
 1

	)

129 #i‚de‡
NCURSES_REENTRANT


130 
	#NCURSES_REENTRANT
 0

	)

136 #unde‡
NCURSES_BROKEN_LINKER


138 
	#NCURSES_BROKEN_LINKER
 1

	)

144 #unde‡
NCURSES_INTEROP_FUNCS


145 
	#NCURSES_INTEROP_FUNCS
 1

	)

150 #unde‡
NCURSES_SIZE_T


151 
	#NCURSES_SIZE_T
 

	)

156 #unde‡
NCURSES_TPARM_VARARGS


157 
	#NCURSES_TPARM_VARARGS
 1

	)

163 #unde‡
NCURSES_TPARM_ARG


164 
	#NCURSES_TPARM_ARG
 
öçå_t


	)

170 #unde‡
NCURSES_WCWIDTH_GRAPHICS


171 
	#NCURSES_WCWIDTH_GRAPHICS
 1

	)

178 #unde‡
NCURSES_CH_T


179 
	#NCURSES_CH_T
 
cch¨_t


	)

181 #i‡1 && 
deföed
(
_LP64
)

182 
	tchty≥
;

183 
	tmmask_t
;

185 
uöt32_t
 
	tchty≥
;

186 
uöt32_t
 
	tmmask_t
;

192 
	~<°dio.h
>

201 #i‚de‡
NCURSES_WIDECHAR


202 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| (deföed(
_XOPEN_SOURCE
) && (_XOPEN_SOURCE - 0 >= 500))

203 
	#NCURSES_WIDECHAR
 1

	)

205 
	#NCURSES_WIDECHAR
 0

	)

209 
	~<°d¨g.h
>

210 #i‡
NCURSES_WIDECHAR


211 
	~<°ddef.h
>

226 #unde‡
TRUE


227 
	#TRUE
 1

	)

229 #unde‡
FALSE


230 
	#FALSE
 0

	)

232 
	tNCURSES_BOOL
;

234 #i‡
deföed
(
__˝lu•lus
)

237 
	#NCURSES_BOOL
 
boﬁ


	)

241 #i‡
NCURSES_ENABLE_STDBOOL_H


242 
	~<°dboﬁ.h
>

244 
	#NCURSES_BOOL
 
boﬁ


	)

247 #unde‡
boﬁ


248 
	#boﬁ
 
NCURSES_BOOL


	)

253 #ifde‡
__˝lu•lus


255 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

257 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

260 
	#NCURSES_OK_ADDR
(
p
Ë(0 !
	`NCURSES_CAST
(c⁄° *, (p)))

	)

266 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

267 
	#WA_NORMAL
 
A_NORMAL


	)

268 
	#WA_STANDOUT
 
A_STANDOUT


	)

269 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

270 
	#WA_REVERSE
 
A_REVERSE


	)

271 
	#WA_BLINK
 
A_BLINK


	)

272 
	#WA_DIM
 
A_DIM


	)

273 
	#WA_BOLD
 
A_BOLD


	)

274 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

275 
	#WA_INVIS
 
A_INVIS


	)

276 
	#WA_PROTECT
 
A_PROTECT


	)

277 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

278 
	#WA_LEFT
 
A_LEFT


	)

279 
	#WA_LOW
 
A_LOW


	)

280 
	#WA_RIGHT
 
A_RIGHT


	)

281 
	#WA_TOP
 
A_TOP


	)

282 
	#WA_VERTICAL
 
A_VERTICAL


	)

285 
	#WA_ITALIC
 
A_ITALIC


	)

289 
	#COLOR_BLACK
 0

	)

290 
	#COLOR_RED
 1

	)

291 
	#COLOR_GREEN
 2

	)

292 
	#COLOR_YELLOW
 3

	)

293 
	#COLOR_BLUE
 4

	)

294 
	#COLOR_MAGENTA
 5

	)

295 
	#COLOR_CYAN
 6

	)

296 
	#COLOR_WHITE
 7

	)

300 #i‡0 || 
NCURSES_REENTRANT


301 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

302 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

304 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

307 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,(c))])

	)

310 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

311 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

312 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

313 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

314 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

315 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

316 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

317 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

318 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

319 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

320 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

321 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

322 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

323 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

324 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

325 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

326 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

327 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

329 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

330 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

331 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

332 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

333 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

334 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

335 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

341 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

342 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

343 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

344 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

345 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

346 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

347 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

355 
	#ACS_BSSB
 
ACS_ULCORNER


	)

356 
	#ACS_SSBB
 
ACS_LLCORNER


	)

357 
	#ACS_BBSS
 
ACS_URCORNER


	)

358 
	#ACS_SBBS
 
ACS_LRCORNER


	)

359 
	#ACS_SBSS
 
ACS_RTEE


	)

360 
	#ACS_SSSB
 
ACS_LTEE


	)

361 
	#ACS_SSBS
 
ACS_BTEE


	)

362 
	#ACS_BSSS
 
ACS_TTEE


	)

363 
	#ACS_BSBS
 
ACS_HLINE


	)

364 
	#ACS_SBSB
 
ACS_VLINE


	)

365 
	#ACS_SSSS
 
ACS_PLUS


	)

367 #unde‡
ERR


368 
	#ERR
 (-1)

	)

370 #unde‡
OK


371 
	#OK
 (0)

	)

374 
	#_SUBWIN
 0x01

	)

375 
	#_ENDLINE
 0x02

	)

376 
	#_FULLWIN
 0x04

	)

377 
	#_SCROLLWIN
 0x08

	)

378 
	#_ISPAD
 0x10

	)

379 
	#_HASMOVED
 0x20

	)

380 
	#_WRAPPED
 0x40

	)

386 
	#_NOCHANGE
 -1

	)

392 
	#_NEWINDEX
 -1

	)

394 
s¸ìn
 
	tSCREEN
;

395 
_wö_°
 
	tWINDOW
;

397 
chty≥
 
	t©å_t
;

399 #i‡
NCURSES_WIDECHAR


402 #ifde‡
mbÀn


403 #unde‡
mbÀn


405 
	~<libutf8.h
>

409 
	~<wch¨.h
>

413 
	twch¨_t1
;

417 
	twöt_t1
;

426 
	#CCHARW_MAX
 5

	)

429 
©å_t
 
	g©å
;

430 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

432 #unde‡
NCURSES_EXT_COLORS


433 
	#NCURSES_EXT_COLORS
 20200212

	)

434 
	gext_cﬁ‹
;

437 
	tcch¨_t
;

441 #i‡!
NCURSES_OPAQUE


442 
	gld©
;

444 
	s_wö_°


446 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

449 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

450 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

452 
	g_Êags
;

455 
©å_t
 
	g_©ås
;

456 
chty≥
 
	g_bkgd
;

459 
boﬁ
 
	g_nŸimeout
;

460 
boﬁ
 
	g_˛ór
;

461 
boﬁ
 
	g_Àaveok
;

462 
boﬁ
 
	g_s¸ﬁl
;

463 
boﬁ
 
	g_idlok
;

464 
boﬁ
 
	g_idcok
;

465 
boﬁ
 
	g_immed
;

466 
boﬁ
 
	g_sync
;

467 
boﬁ
 
	g_u£_key∑d
;

468 
	g_dñay
;

470 
ld©
 *
	g_löe
;

473 
NCURSES_SIZE_T
 
	g_ªgt›
;

474 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

477 
	g_∑rx
;

478 
	g_∑ry
;

479 
WINDOW
 *
	g_∑ª¡
;

482 
	spd©


484 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

485 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

486 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

487 } 
	g_∑d
;

489 
NCURSES_SIZE_T
 
	g_yoff£t
;

491 #i‡
NCURSES_WIDECHAR


492 
cch¨_t
 
	g_bkg∫d
;

494 
	g_cﬁ‹
;

504 #ifde‡
NCURSES_WGETCH_EVENTS


505 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

507 
	#NCURSES_EVENT_VERSION
 1

	)

513 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

514 
	#_NC_EVENT_FILE
 2

	)

515 
	#_NC_EVENT_FILE_READABLE
 2

	)

517 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

518 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

523 
	gty≥
;

526 
	gtimeout_m£c
;

529 
	gÊags
;

530 
	gfd
;

531 
	gªsu…
;

532 } 
	g„v
;

533 } 
	gd©a
;

534 } 
	t_nc_evít
;

538 
	gcou¡
;

539 
	gªsu…_Êags
;

540 
_nc_evít
 *
	gevíts
[1];

541 } 
	t_nc_evíéi°
;

543 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

544 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

556 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

557 
	#__©åibuã__
(
p
Ë

	)

568 #i‚de‡
GCC_PRINTFLIKE


569 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

570 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

572 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

576 #i‚de‡
GCC_SCANFLIKE


577 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

578 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

580 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

584 #i‚def 
GCC_NORETURN


585 
	#GCC_NORETURN


	)

588 #i‚def 
GCC_UNUSED


589 
	#GCC_UNUSED


	)

592 #unde‡
GCC_DEPRECATED


593 #i‡(
__GNUC__
 - 0 > 3 || (__GNUC__ - 0 =3 && 
__GNUC_MINOR__
 - 0 >= 2))

594 
	#GCC_DEPRECATED
(
msg
Ë
	`__©åibuã__
((
dïªˇãd
))

	)

596 
	#GCC_DEPRECATED
(
msg
Ë

	)

603 (*
	gNCURSES_OUTC
)();

612 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

613 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

615 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

616 
NCURSES_EXPORT
(Ë
add°r
 (const *);

617 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

618 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

619 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

620 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

621 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

622 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

623 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, 
NCURSES_PAIRS_T
, *);

624 
NCURSES_EXPORT
(Ë
baudøã
 ();

625 
NCURSES_EXPORT
(Ë
bìp
 ();

626 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

627 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

628 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

629 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

630 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

631 
NCURSES_EXPORT
(Ë
cbªak
 ();

632 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, 
NCURSES_PAIRS_T
, const *);

633 
NCURSES_EXPORT
(Ë
˛ór
 ();

634 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

636 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

637 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T*,NCURSES_COLOR_T*,NCURSES_COLOR_T*);

638 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (
NCURSES_PAIRS_T
,*);

639 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

640 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

641 
NCURSES_EXPORT
(Ë
curs_£t
 ();

642 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

643 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

644 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

645 
NCURSES_EXPORT
(Ë
dñch
 ();

646 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

647 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

648 
NCURSES_EXPORT
(Ë
dñëñn
 ();

649 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

650 
NCURSES_EXPORT
(Ë
doupd©e
 ();

651 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

652 
NCURSES_EXPORT
(Ë
echo
 ();

653 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

654 
NCURSES_EXPORT
(Ë
îa£
 ();

655 
NCURSES_EXPORT
(Ë
ídwö
 ();

656 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

657 
NCURSES_EXPORT
(Ë
fûãr
 ();

658 
NCURSES_EXPORT
(Ë
Êash
 ();

659 
NCURSES_EXPORT
(Ë
Êushöp
 ();

660 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

661 
NCURSES_EXPORT
(Ë
gëch
 ();

662 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

663 
NCURSES_EXPORT
(Ë
gë°r
 (*);

664 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

665 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

666 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

667 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

668 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

669 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

670 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

671 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

672 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

673 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

674 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

675 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

676 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

677 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (
NCURSES_COLOR_T
,NCURSES_COLOR_T,NCURSES_COLOR_T,NCURSES_COLOR_T);

678 
NCURSES_EXPORT
(Ë
öô_∑ú
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
,NCURSES_COLOR_T);

679 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

680 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

681 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

682 
NCURSES_EXPORT
(Ë
ö£π 
 ();

683 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

684 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

685 
NCURSES_EXPORT
(Ë
ö°r
 (*);

686 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

687 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

688 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

689 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

690 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

691 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

692 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

693 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

695 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

696 
NCURSES_EXPORT
(Ë
move
 (, );

697 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

698 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

699 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

700 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

701 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

702 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

703 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

704 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

705 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

706 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

707 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

708 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

709 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

710 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

711 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

712 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

713 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

714 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

715 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

716 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

717 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

718 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

719 
GCC_PRINTFLIKE
(3,4);

720 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, const *,...)

721 
GCC_SCANFLIKE
(3,4);

722 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

723 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

724 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

725 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

726 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

727 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

728 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

729 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

730 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

731 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

732 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

733 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

734 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

735 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

736 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

737 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

738 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

739 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

740 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

741 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

742 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

743 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

744 
GCC_PRINTFLIKE
(4,5);

745 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, const *,...)

746 
GCC_SCANFLIKE
(4,5);

747 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

748 
NCURSES_EXPORT
(Ë
«pms
 ();

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

750 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (c⁄° *,
FILE
 *,FILE *);

751 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

752 
NCURSES_EXPORT
(Ë
∆
 ();

753 
NCURSES_EXPORT
(Ë
nocbªak
 ();

754 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

755 
NCURSES_EXPORT
(Ë
n€cho
 ();

756 
NCURSES_EXPORT
(Ë
n⁄l
 ();

757 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

758 
NCURSES_EXPORT
(Ë
n‹aw
 ();

759 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

760 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

761 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

762 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (
NCURSES_PAIRS_T
,
NCURSES_COLOR_T
*,NCURSES_COLOR_T*);

763 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

764 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

765 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

766 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

767 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

768 
GCC_PRINTFLIKE
(1,2);

769 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

770 
NCURSES_EXPORT
(Ë
qiÊush
 ();

771 
NCURSES_EXPORT
(Ë
øw
 ();

772 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

773 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

774 
NCURSES_EXPORT
(Ë
ª£ây
 ();

775 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

776 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

777 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

778 
NCURSES_EXPORT
(Ë
ßvëty
 ();

779 
NCURSES_EXPORT
(Ë
sˇnw
 (const *,...)

780 
GCC_SCANFLIKE
(1,2);

781 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

782 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

783 
NCURSES_EXPORT
(Ë
s¸l
 ();

784 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

786 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

787 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

788 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

789 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

790 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

792 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

793 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

794 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

795 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

796 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,
NCURSES_PAIRS_T
,*);

797 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

798 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 (
NCURSES_PAIRS_T
);

799 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

800 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

801 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

802 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

803 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

804 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

805 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

806 
NCURSES_EXPORT
(Ë
°™dout
 ();

807 
NCURSES_EXPORT
(Ë
°™díd
 ();

808 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

809 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

810 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

811 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

812 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

813 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

814 
NCURSES_EXPORT
(Ë
timeout
 ();

815 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

816 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

818 
NCURSES_EXPORT
(Ë
ungëch
 ();

819 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

821 
NCURSES_EXPORT
(Ë
u£_tio˘l
 (
boﬁ
);

822 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

823 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

824 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

825 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
Ë
GCC_DEPRECATED
(
u£
 
vw_¥ötw
);

826 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

827 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, c⁄° *,
va_li°
Ë
GCC_DEPRECATED
(
u£
 
vw_sˇnw
);

828 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, c⁄° *,
va_li°
);

829 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

830 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

831 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

832 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

833 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

834 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

835 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

836 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

837 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, 
NCURSES_PAIRS_T
 *, *);

838 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

839 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

840 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, 
NCURSES_PAIRS_T
, *);

841 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

842 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

843 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

844 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, 
NCURSES_PAIRS_T
, const *);

845 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,
NCURSES_PAIRS_T
,*);

849 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

853 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

854 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

855 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

856 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

857 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

858 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

859 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

860 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

861 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

862 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

863 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

864 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

865 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

866 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

867 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

868 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

869 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

870 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

871 
GCC_PRINTFLIKE
(2,3);

872 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

873 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

874 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, const *,...)

875 
GCC_SCANFLIKE
(2,3);

876 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

877 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

878 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

879 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

880 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

881 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

882 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

883 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

884 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

889 
NCURSES_EXPORT
(Ë
tigëÊag
 (const *);

890 
NCURSES_EXPORT
(Ë
tigënum
 (const *);

891 
NCURSES_EXPORT
(*Ë
tigë°r
 (const *);

892 
NCURSES_EXPORT
(Ë
puç
 (const *);

894 #i‡
NCURSES_TPARM_VARARGS


895 
NCURSES_EXPORT
(*Ë
ç¨m
 (const *, ...);

897 
NCURSES_EXPORT
(*Ë
ç¨m
 (c⁄° *, 
NCURSES_TPARM_ARG
,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG,NCURSES_TPARM_ARG);

898 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (const *, ...);

901 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

906 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

907 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

908 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

909 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

910 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

911 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

912 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

913 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

914 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

919 #i‡!
NCURSES_WIDECHAR


920 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

927 #unde‡
NCURSES_EXT_FUNCS


928 
	#NCURSES_EXT_FUNCS
 20200212

	)

929 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

930 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

931 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

932 
NCURSES_EXPORT
(*Ë
keybound
 (, );

933 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

934 
NCURSES_EXPORT
(Ë
Æloc_∑ú
 (, );

935 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

936 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

937 
NCURSES_EXPORT
(Ë
exãnded_cﬁ‹_c⁄ã¡
(, *, *, *);

938 
NCURSES_EXPORT
(Ë
exãnded_∑ú_c⁄ã¡
(, *, *);

939 
NCURSES_EXPORT
(Ë
exãnded_¶k_cﬁ‹
();

940 
NCURSES_EXPORT
(Ë
föd_∑ú
 (, );

941 
NCURSES_EXPORT
(Ë
‰ì_∑ú
 ();

942 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

943 
NCURSES_EXPORT
(Ë
öô_exãnded_cﬁ‹
(, , , );

944 
NCURSES_EXPORT
(Ë
öô_exãnded_∑ú
(, , );

945 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

946 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

947 
NCURSES_EXPORT
(Ë
ª£t_cﬁ‹_∑ús
 ();

948 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

949 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

950 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

951 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

952 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

953 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

954 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

955 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

956 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

957 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

958 
NCURSES_EXPORT
(Ë
nofûãr
();

964 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

965 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

966 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

967 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

968 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

969 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

970 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

971 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

972 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

973 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

974 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

975 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

976 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

977 
NCURSES_EXPORT
(Ë
wgëdñay
 (c⁄° 
WINDOW
 *);

978 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

981 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

989 #unde‡
NCURSES_SP_FUNCS


990 
	#NCURSES_SP_FUNCS
 20200212

	)

991 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

994 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

995 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

997 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

999 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

1000 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

1001 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

1004 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*, NCURSES_COLOR_T*);

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

1014 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

1015 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

1016 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

1017 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

1018 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

1019 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

1020 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_COLOR_T
, NCURSES_COLOR_T, NCURSES_COLOR_T, NCURSES_COLOR_T);

1021 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
, NCURSES_COLOR_T);

1022 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

1023 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

1024 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

1025 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

1026 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

1027 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

1028 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

1029 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

1030 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, c⁄° *, 
FILE
 *, FILE *);

1031 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

1032 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

1033 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

1034 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

1035 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

1036 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

1037 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

1038 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
, 
NCURSES_COLOR_T
*, NCURSES_COLOR_T*);

1039 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

1040 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

1041 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

1042 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

1043 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

1044 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

1045 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

1046 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

1047 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

1048 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

1049 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

1050 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

1051 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

1052 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

1053 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, 
NCURSES_PAIRS_T
, *);

1054 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

1055 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, 
NCURSES_PAIRS_T
);

1056 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

1057 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

1058 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

1059 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

1060 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

1061 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

1062 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

1063 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

1064 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

1065 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

1066 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

1067 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

1068 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

1069 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_tio˘l
Ë(
SCREEN
*, 
boﬁ
);

1070 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

1071 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1073 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1074 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Æloc_∑ú
Ë(
SCREEN
*, , );

1075 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1076 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1077 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

1078 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

1079 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
exãnded_¶k_cﬁ‹
Ë(
SCREEN
*, );

1080 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1081 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
föd_∑ú
Ë(
SCREEN
*, , );

1082 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
‰ì_∑ú
Ë(
SCREEN
*, );

1083 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_exãnded_cﬁ‹
Ë(
SCREEN
*, , , , );

1084 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_exãnded_∑ú
Ë(
SCREEN
*, , , );

1085 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1086 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1087 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1088 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1089 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_cﬁ‹_∑ús
Ë(
SCREEN
*);

1090 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1091 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1092 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1093 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1094 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1095 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1098 #unde‡
NCURSES_SP_FUNCS


1099 
	#NCURSES_SP_FUNCS
 0

	)

1100 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1101 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1106 
	#NCURSES_ATTR_SHIFT
 8

	)

1107 
	#NCURSES_BITS
(
mask
,
shi·
Ë(
	`NCURSES_CAST
(
chty≥
,(mask)Ë<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1109 
	#A_NORMAL
 (1U - 1U)

	)

1110 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1U - 1U),0)

	)

1111 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1U,0Ë- 1U)

	)

1112 
	#A_COLOR
 
	`NCURSES_BITS
(((1UË<< 8Ë- 1U,0)

	)

1113 
	#A_STANDOUT
 
	`NCURSES_BITS
(1U,8)

	)

1114 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1U,9)

	)

1115 
	#A_REVERSE
 
	`NCURSES_BITS
(1U,10)

	)

1116 
	#A_BLINK
 
	`NCURSES_BITS
(1U,11)

	)

1117 
	#A_DIM
 
	`NCURSES_BITS
(1U,12)

	)

1118 
	#A_BOLD
 
	`NCURSES_BITS
(1U,13)

	)

1119 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1U,14)

	)

1120 
	#A_INVIS
 
	`NCURSES_BITS
(1U,15)

	)

1121 
	#A_PROTECT
 
	`NCURSES_BITS
(1U,16)

	)

1122 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1U,17)

	)

1123 
	#A_LEFT
 
	`NCURSES_BITS
(1U,18)

	)

1124 
	#A_LOW
 
	`NCURSES_BITS
(1U,19)

	)

1125 
	#A_RIGHT
 
	`NCURSES_BITS
(1U,20)

	)

1126 
	#A_TOP
 
	`NCURSES_BITS
(1U,21)

	)

1127 
	#A_VERTICAL
 
	`NCURSES_BITS
(1U,22)

	)

1130 
	#A_ITALIC
 
	`NCURSES_BITS
(1U,23Ë

	)

1143 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1144 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1145 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1146 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1148 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1149 i‡(
	`is_Àaveok
(
√ws¸
)) \

1150 (
y
Ë(
x
) = -1; \

1152 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1154 } 0)

	)

1156 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1157 i‡((
y
Ë=-1 && (
x
) == -1) \

1158 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1160 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1161 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1164 } 0)

	)

1166 #i‚de‡
NCURSES_NOMACROS


1172 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1173 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s, (n))

	)

1175 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1177 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1178 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1179 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1180 
	#¸mode
(Ë
	`cbªak
()

	)

1181 
	#no¸mode
(Ë
	`nocbªak
()

	)

1182 
	#gëtmode
()

	)

1185 #i‡!
NCURSES_OPAQUE


1186 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, 
	`NCURSES_OK_ADDR
(wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1187 
	#gëcurx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_curx
 : 
ERR
)

	)

1188 
	#gëcury
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_cury
 : 
ERR
)

	)

1189 
	#gëbegx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_begx
 : 
ERR
)

	)

1190 
	#gëbegy
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_begy
 : 
ERR
)

	)

1191 
	#gëmaxx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1192 
	#gëmaxy
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1193 
	#gë∑rx
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1194 
	#gë∑ry
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1197 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1198 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1200 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1201 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1203 #i‡!
NCURSES_OPAQUE


1204 #i‡
NCURSES_WATTR_MACROS


1205 #i‡
NCURSES_WIDECHAR
 && 1

1206 
	#w©å£t
(
wö
,
©
) \

1207 (
	`NCURSES_OK_ADDR
(
wö
) \

1208 ? ((
wö
)->
_cﬁ‹
 = 
	`NCURSES_CAST
(, 
	`PAIR_NUMBER
(
©
)), \

1209 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1210 
OK
) \

1211 : 
ERR
)

	)

1213 
	#w©å£t
(
wö
,
©
) \

1214 (
	`NCURSES_OK_ADDR
(
wö
) \

1215 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1216 
OK
) \

1217 : 
ERR
)

	)

1222 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1224 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1225 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1226 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1228 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1229 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1230 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch, (n))

	)

1231 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch, (n))

	)

1233 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1234 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1235 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1237 #i‡!
NCURSES_OPAQUE


1238 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, (
	`NCURSES_OK_ADDR
(wöË? (wö)->
_maxy
+1 : -1))

	)

1241 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1242 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1247 
	#COLOR_PAIR
(
n
Ë(
	`NCURSES_BITS
(“), 0Ë& 
A_COLOR
)

	)

1248 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,◊)Ë& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1254 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,(ch))

	)

1255 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,(°r),“))

	)

1256 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,(°r))

	)

1257 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,(°r),“))

	)

1258 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,(°r),-1)

	)

1259 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,◊p),(˝),(o))

	)

1260 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,◊),(o))

	)

1261 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,◊),(o))

	)

1262 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,◊),(c),(o))

	)

1263 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,◊t))

	)

1264 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,◊t))

	)

1265 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,◊t))

	)

1266 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,(ch))

	)

1267 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,(ch))

	)

1268 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,“),◊),(c),(o))

	)

1269 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1270 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1271 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1272 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,(c),(o))

	)

1273 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1274 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1275 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,(c))

	)

1276 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1277 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1278 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,(°r))

	)

1279 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1280 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,(s),“))

	)

1281 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,(s))

	)

1282 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,(s),“))

	)

1283 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,(c))

	)

1284 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,“))

	)

1285 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1286 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,(s),“))

	)

1287 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,(s))

	)

1288 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,(s))

	)

1289 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,(y),(x))

	)

1290 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1291 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,“))

	)

1292 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,—),(b))

	)

1293 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1294 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1295 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,(dñay))

	)

1296 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1297 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1303 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddch
((wö),(ch)))

	)

1304 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),“)))

	)

1305 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddchn°r
((wö),(°r),-1))

	)

1306 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),“)))

	)

1307 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`waddn°r
((wö),(°r),-1))

	)

1308 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wchg©
((wö),“),◊),(c),(o)))

	)

1309 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1310 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1311 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgën°r
((wö),(°r),“)))

	)

1312 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wgë°r
((wö),(°r)))

	)

1313 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`whlöe
((wö),(c),“)))

	)

1314 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1315 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöchn°r
((wö),(s),“)))

	)

1316 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wöch°r
((wö),(s)))

	)

1317 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wön°r
((wö),(s),“)))

	)

1318 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wösch
((wö),(c)))

	)

1319 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö¢°r
((wö),(s),“)))

	)

1320 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wös°r
((wö),(s)))

	)

1321 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wö°r
((wö),(s)))

	)

1322 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
((wö),(y),(x)Ë=
ERR
 ? ERR : 
	`wvlöe
((wö),(c),“)))

	)

1324 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,(y),(x),(ch))

	)

1325 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1326 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,(y),(x),(°r))

	)

1327 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,(y),(x),(°r),“))

	)

1328 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,(y),(x),(°r))

	)

1329 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,(y),(x),“),◊),(c),(o))

	)

1330 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,(y),(x))

	)

1331 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,(y),(x))

	)

1332 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,(y),(x),(°r),“))

	)

1333 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,(y),(x),(°r))

	)

1334 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,(y),(x),(c),“))

	)

1335 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,(y),(x))

	)

1336 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,(y),(x),(s),“))

	)

1337 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,(y),(x),(s))

	)

1338 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,(y),(x),(s),“))

	)

1339 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,(y),(x),(c))

	)

1340 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,(y),(x),(s),“))

	)

1341 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,(y),(x),(s))

	)

1342 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,(y),(x),(s))

	)

1343 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,(y),(x),(c),“))

	)

1348 #i‡!
NCURSES_OPAQUE


1349 
	#gëbkgd
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_bkgd
Ë: 0)

	)

1352 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1353 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1355 #i‡!
NCURSES_OPAQUE


1356 #i‡
NCURSES_WATTR_MACROS


1357 #i‡
NCURSES_WIDECHAR
 && 1

1358 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) \

1359 (
	`NCURSES_OK_ADDR
(
wö
) \

1360 ? (()((
wö
)->
_©ås
 = ((
a
Ë& ~
A_COLOR
), \

1361 (
wö
)->
_cﬁ‹
 = (
›ts
Ë? *(*)(›tsË: (
p
)), \

1362 
OK
) \

1363 : 
ERR
)

	)

1364 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) \

1365 (
	`NCURSES_OK_ADDR
(
wö
) \

1366 ? (()(
	`NCURSES_OK_ADDR
(
a
) \

1367 ? (*(
a
Ë(
wö
)->
_©ås
) \

1368 : 
OK
), \

1369 ()(
	`NCURSES_OK_ADDR
(
p
) \

1370 ? (*(
p
Ë(
NCURSES_PAIRS_T
Ë(
wö
)->
_cﬁ‹
) \

1371 : 
OK
), \

1372 ()(
	`NCURSES_OK_ADDR
(
›ts
) \

1373 ? (*(*)(
›ts
Ë(
wö
)->
_cﬁ‹
) \

1374 : 
OK
), \

1375 
OK
) \

1376 : 
ERR
)

	)

1378 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) \

1379 (
	`NCURSES_OK_ADDR
(
wö
) \

1380 ? (()((
wö
)->
_©ås
 = (((
a
Ë& ~
A_COLOR
) | \

1381 (
©å_t
)
	`COLOR_PAIR
(
p
))), \

1382 
OK
) \

1383 : 
ERR
)

	)

1384 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) \

1385 (
	`NCURSES_OK_ADDR
(
wö
) \

1386 ? (()(
	`NCURSES_OK_ADDR
(
a
) \

1387 ? (*(
a
Ë(
wö
)->
_©ås
) \

1388 : 
OK
), \

1389 ()(
	`NCURSES_OK_ADDR
(
p
) \

1390 ? (*(
p
Ë(
NCURSES_PAIRS_T
Ë
	`PAIR_NUMBER
((
wö
)->
_©ås
)) \

1391 : 
OK
), \

1392 
OK
) \

1393 : 
ERR
)

	)

1411 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1412 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1419 #i‡!
NCURSES_OPAQUE


1420 
	#is_˛óªd
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1421 
	#is_idcok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1422 
	#is_idlok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1423 
	#is_immedok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_immed
 : 
FALSE
)

	)

1424 
	#is_key∑d
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1425 
	#is_Àaveok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1426 
	#is_nodñay
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1427 
	#is_nŸimeout
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1428 
	#is_∑d
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1429 
	#is_s¸ﬁlok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1430 
	#is_subwö
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1431 
	#is_syncok
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_sync
 : 
FALSE
)

	)

1432 
	#wgëdñay
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_dñay
 : 0)

	)

1433 
	#wgë∑ª¡
(
wö
Ë(
	`NCURSES_OK_ADDR
(wöË? (wö)->
_∑ª¡
 : 0)

	)

1434 
	#wgës¸ªg
(
wö
,
t
,
b
Ë(
	`NCURSES_OK_ADDR
(wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1442 
	#is_löëouched
(
w
,
l
Ë((!(wË|| (÷Ë> 
	`gëmaxy
(w)Ë|| (÷Ë< 0)Ë? 
ERR
 : (
is_löëouched
)((w),÷)))

	)

1454 #i‡
NCURSES_REENTRANT


1456 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1457 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1458 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1459 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1460 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1461 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1462 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1463 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1464 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1465 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1467 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1468 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1469 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1470 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1471 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1472 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1473 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1474 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1475 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1476 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1480 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1481 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1482 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1483 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1484 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1485 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1486 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1487 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1488 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1489 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1505 
	#KEY_CODE_YES
 0400

	)

1506 
	#KEY_MIN
 0401

	)

1507 
	#KEY_BREAK
 0401

	)

1508 
	#KEY_SRESET
 0530

	)

1509 
	#KEY_RESET
 0531

	)

1513 
	#KEY_DOWN
 0402

	)

1514 
	#KEY_UP
 0403

	)

1515 
	#KEY_LEFT
 0404

	)

1516 
	#KEY_RIGHT
 0405

	)

1517 
	#KEY_HOME
 0406

	)

1518 
	#KEY_BACKSPACE
 0407

	)

1519 
	#KEY_F0
 0410

	)

1520 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1521 
	#KEY_DL
 0510

	)

1522 
	#KEY_IL
 0511

	)

1523 
	#KEY_DC
 0512

	)

1524 
	#KEY_IC
 0513

	)

1525 
	#KEY_EIC
 0514

	)

1526 
	#KEY_CLEAR
 0515

	)

1527 
	#KEY_EOS
 0516

	)

1528 
	#KEY_EOL
 0517

	)

1529 
	#KEY_SF
 0520

	)

1530 
	#KEY_SR
 0521

	)

1531 
	#KEY_NPAGE
 0522

	)

1532 
	#KEY_PPAGE
 0523

	)

1533 
	#KEY_STAB
 0524

	)

1534 
	#KEY_CTAB
 0525

	)

1535 
	#KEY_CATAB
 0526

	)

1536 
	#KEY_ENTER
 0527

	)

1537 
	#KEY_PRINT
 0532

	)

1538 
	#KEY_LL
 0533

	)

1539 
	#KEY_A1
 0534

	)

1540 
	#KEY_A3
 0535

	)

1541 
	#KEY_B2
 0536

	)

1542 
	#KEY_C1
 0537

	)

1543 
	#KEY_C3
 0540

	)

1544 
	#KEY_BTAB
 0541

	)

1545 
	#KEY_BEG
 0542

	)

1546 
	#KEY_CANCEL
 0543

	)

1547 
	#KEY_CLOSE
 0544

	)

1548 
	#KEY_COMMAND
 0545

	)

1549 
	#KEY_COPY
 0546

	)

1550 
	#KEY_CREATE
 0547

	)

1551 
	#KEY_END
 0550

	)

1552 
	#KEY_EXIT
 0551

	)

1553 
	#KEY_FIND
 0552

	)

1554 
	#KEY_HELP
 0553

	)

1555 
	#KEY_MARK
 0554

	)

1556 
	#KEY_MESSAGE
 0555

	)

1557 
	#KEY_MOVE
 0556

	)

1558 
	#KEY_NEXT
 0557

	)

1559 
	#KEY_OPEN
 0560

	)

1560 
	#KEY_OPTIONS
 0561

	)

1561 
	#KEY_PREVIOUS
 0562

	)

1562 
	#KEY_REDO
 0563

	)

1563 
	#KEY_REFERENCE
 0564

	)

1564 
	#KEY_REFRESH
 0565

	)

1565 
	#KEY_REPLACE
 0566

	)

1566 
	#KEY_RESTART
 0567

	)

1567 
	#KEY_RESUME
 0570

	)

1568 
	#KEY_SAVE
 0571

	)

1569 
	#KEY_SBEG
 0572

	)

1570 
	#KEY_SCANCEL
 0573

	)

1571 
	#KEY_SCOMMAND
 0574

	)

1572 
	#KEY_SCOPY
 0575

	)

1573 
	#KEY_SCREATE
 0576

	)

1574 
	#KEY_SDC
 0577

	)

1575 
	#KEY_SDL
 0600

	)

1576 
	#KEY_SELECT
 0601

	)

1577 
	#KEY_SEND
 0602

	)

1578 
	#KEY_SEOL
 0603

	)

1579 
	#KEY_SEXIT
 0604

	)

1580 
	#KEY_SFIND
 0605

	)

1581 
	#KEY_SHELP
 0606

	)

1582 
	#KEY_SHOME
 0607

	)

1583 
	#KEY_SIC
 0610

	)

1584 
	#KEY_SLEFT
 0611

	)

1585 
	#KEY_SMESSAGE
 0612

	)

1586 
	#KEY_SMOVE
 0613

	)

1587 
	#KEY_SNEXT
 0614

	)

1588 
	#KEY_SOPTIONS
 0615

	)

1589 
	#KEY_SPREVIOUS
 0616

	)

1590 
	#KEY_SPRINT
 0617

	)

1591 
	#KEY_SREDO
 0620

	)

1592 
	#KEY_SREPLACE
 0621

	)

1593 
	#KEY_SRIGHT
 0622

	)

1594 
	#KEY_SRSUME
 0623

	)

1595 
	#KEY_SSAVE
 0624

	)

1596 
	#KEY_SSUSPEND
 0625

	)

1597 
	#KEY_SUNDO
 0626

	)

1598 
	#KEY_SUSPEND
 0627

	)

1599 
	#KEY_UNDO
 0630

	)

1600 
	#KEY_MOUSE
 0631

	)

1601 
	#KEY_RESIZE
 0632

	)

1602 
	#KEY_EVENT
 0633

	)

1604 
	#KEY_MAX
 0777

	)

1611 
	#_XOPEN_CURSES
 1

	)

1613 #i‡
NCURSES_WIDECHAR


1615 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1617 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[
	`NCURSES_CAST
(,(c))])

	)

1619 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1620 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1621 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1622 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1623 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1624 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1625 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1626 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1627 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1628 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1629 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1631 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1632 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1633 
	#WACS_URCORNER
 
WACS_BBSS


	)

1634 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1635 
	#WACS_RTEE
 
WACS_SBSS


	)

1636 
	#WACS_LTEE
 
WACS_SSSB


	)

1637 
	#WACS_BTEE
 
WACS_SSBS


	)

1638 
	#WACS_TTEE
 
WACS_BSSS


	)

1639 
	#WACS_HLINE
 
WACS_BSBS


	)

1640 
	#WACS_VLINE
 
WACS_SBSB


	)

1641 
	#WACS_PLUS
 
WACS_SSSS


	)

1643 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1644 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1645 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1646 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1647 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1648 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1649 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1652 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1653 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1654 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1655 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1656 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1657 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1658 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1661 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1662 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1663 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1664 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1665 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1666 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1667 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1670 
	#WACS_BDDB
 
	`NCURSES_WACS
('C')

	)

1671 
	#WACS_DDBB
 
	`NCURSES_WACS
('D')

	)

1672 
	#WACS_BBDD
 
	`NCURSES_WACS
('B')

	)

1673 
	#WACS_DBBD
 
	`NCURSES_WACS
('A')

	)

1674 
	#WACS_DBDD
 
	`NCURSES_WACS
('G')

	)

1675 
	#WACS_DDDB
 
	`NCURSES_WACS
('F')

	)

1676 
	#WACS_DDBD
 
	`NCURSES_WACS
('H')

	)

1677 
	#WACS_BDDD
 
	`NCURSES_WACS
('I')

	)

1678 
	#WACS_BDBD
 
	`NCURSES_WACS
('R')

	)

1679 
	#WACS_DBDB
 
	`NCURSES_WACS
('Y')

	)

1680 
	#WACS_DDDD
 
	`NCURSES_WACS
('E')

	)

1682 
	#WACS_D_ULCORNER
 
WACS_BDDB


	)

1683 
	#WACS_D_LLCORNER
 
WACS_DDBB


	)

1684 
	#WACS_D_URCORNER
 
WACS_BBDD


	)

1685 
	#WACS_D_LRCORNER
 
WACS_DBBD


	)

1686 
	#WACS_D_RTEE
 
WACS_DBDD


	)

1687 
	#WACS_D_LTEE
 
WACS_DDDB


	)

1688 
	#WACS_D_BTEE
 
WACS_DDBD


	)

1689 
	#WACS_D_TTEE
 
WACS_BDDD


	)

1690 
	#WACS_D_HLINE
 
WACS_BDBD


	)

1691 
	#WACS_D_VLINE
 
WACS_DBDB


	)

1692 
	#WACS_D_PLUS
 
WACS_DDDD


	)

1695 
	#WACS_BTTB
 
	`NCURSES_WACS
('L')

	)

1696 
	#WACS_TTBB
 
	`NCURSES_WACS
('M')

	)

1697 
	#WACS_BBTT
 
	`NCURSES_WACS
('K')

	)

1698 
	#WACS_TBBT
 
	`NCURSES_WACS
('J')

	)

1699 
	#WACS_TBTT
 
	`NCURSES_WACS
('U')

	)

1700 
	#WACS_TTTB
 
	`NCURSES_WACS
('T')

	)

1701 
	#WACS_TTBT
 
	`NCURSES_WACS
('V')

	)

1702 
	#WACS_BTTT
 
	`NCURSES_WACS
('W')

	)

1703 
	#WACS_BTBT
 
	`NCURSES_WACS
('Q')

	)

1704 
	#WACS_TBTB
 
	`NCURSES_WACS
('X')

	)

1705 
	#WACS_TTTT
 
	`NCURSES_WACS
('N')

	)

1707 
	#WACS_T_ULCORNER
 
WACS_BTTB


	)

1708 
	#WACS_T_LLCORNER
 
WACS_TTBB


	)

1709 
	#WACS_T_URCORNER
 
WACS_BBTT


	)

1710 
	#WACS_T_LRCORNER
 
WACS_TBBT


	)

1711 
	#WACS_T_RTEE
 
WACS_TBTT


	)

1712 
	#WACS_T_LTEE
 
WACS_TTTB


	)

1713 
	#WACS_T_BTEE
 
WACS_TTBT


	)

1714 
	#WACS_T_TTEE
 
WACS_BTTT


	)

1715 
	#WACS_T_HLINE
 
WACS_BTBT


	)

1716 
	#WACS_T_VLINE
 
WACS_TBTB


	)

1717 
	#WACS_T_PLUS
 
WACS_TTTT


	)

1728 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1729 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1730 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1731 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1732 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1733 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1734 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1735 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1736 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1737 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1738 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1739 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1740 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1741 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1742 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, 
NCURSES_PAIRS_T
*, *);

1743 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1744 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1745 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1746 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1747 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1748 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1749 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1750 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1751 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1752 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1753 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1754 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1755 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1756 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1757 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1758 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1759 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1760 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1761 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1762 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1763 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1764 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1765 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1766 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1767 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1768 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1769 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1770 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1771 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1772 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1773 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1774 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1775 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1776 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1777 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1778 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1779 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1780 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1781 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1782 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1783 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1784 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1785 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1786 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1787 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1788 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1789 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1790 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1791 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1792 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, 
NCURSES_PAIRS_T
, const *);

1793 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1794 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1795 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1796 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, 
NCURSES_PAIRS_T
, *);

1797 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, 
NCURSES_PAIRS_T
, *, 
NCURSES_OUTC
);

1798 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1799 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1800 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1801 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1802 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1803 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1804 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1805 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1806 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1807 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1808 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1809 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1810 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1811 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *, 
wöt_t
 *, );

1812 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1813 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1814 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1815 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1816 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1817 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1818 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1819 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1820 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1821 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1822 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1824 #i‡
NCURSES_SP_FUNCS


1825 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
ãrm_©ås
Ë(
SCREEN
*);

1826 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungë_wch
Ë(
SCREEN
*, c⁄° 
wch¨_t
);

1827 
NCURSES_EXPORT
(
wch¨_t
*Ë
NCURSES_SP_NAME
(
wun˘æ
Ë(
SCREEN
*, 
cch¨_t
 *);

1828 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_©å
Ë(
SCREEN
*, 
©å_t
, 
NCURSES_PAIRS_T
, *);

1829 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_puts
Ë(
SCREEN
*, 
©å_t
, 
NCURSES_PAIRS_T
, *, 
NCURSES_SP_OUTC
);

1832 #i‚de‡
NCURSES_NOMACROS


1837 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,(c))

	)

1838 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,(°r),“))

	)

1839 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,(°r))

	)

1840 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,(w°r),“))

	)

1841 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,(w°r))

	)

1842 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,(c))

	)

1843 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,(c))

	)

1844 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,÷),‘),—),(b),é,å,bl,br)

	)

1845 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
((w),(v),(v),(h),(h),0,0,0,0)

	)

1846 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,(c))

	)

1847 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,(c))

	)

1848 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,—))

	)

1849 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,(wch))

	)

1850 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,—),“))

	)

1851 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,(c),“))

	)

1852 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,(c))

	)

1853 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,(c),“))

	)

1854 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,(c))

	)

1855 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,(c),“))

	)

1856 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,—),“))

	)

1857 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,(c))

	)

1858 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,—))

	)

1859 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,(c))

	)

1860 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,(c),“))

	)

1861 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
((wö),(°r),-1)

	)

1862 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
((wö),(w°r),-1)

	)

1863 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
((w),—),-1)

	)

1864 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
((w),(c),-1)

	)

1865 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
((w),—),-1)

	)

1867 #i‡!
NCURSES_OPAQUE


1868 
	#wgëbkg∫d
(
wö
,
wch
Ë(
	`NCURSES_OK_ADDR
(wchË? ((wöË? (*(wchË(wö)->
_bkg∫d
Ë: *(wch), 
OK
Ë: 
ERR
)

	)

1871 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,(y),(x),(c))

	)

1872 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,(y),(x),(s),“))

	)

1873 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,(y),(x),(s))

	)

1874 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,(y),(x),(w°r),“))

	)

1875 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,(y),(x),(w°r))

	)

1876 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,(y),(x),(c))

	)

1877 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,(y),(x),—))

	)

1878 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,(y),(x),—),“))

	)

1879 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,(y),(x),(c),“))

	)

1880 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,(y),(x),(c))

	)

1881 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,(y),(x),(c),“))

	)

1882 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,(y),(x),(c))

	)

1883 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,(y),(x),(c),“))

	)

1884 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,(y),(x),—),“))

	)

1885 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,(y),(x),(c))

	)

1886 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,(y),(x),—))

	)

1887 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,(y),(x),(c))

	)

1888 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,(y),(x),(c),“))

	)

1890 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wch
((wö),(c)))

	)

1891 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wchn°r
((wö),(s),“)))

	)

1892 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wadd_wch°r
((wö),(s)))

	)

1893 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`waddnw°r
((wö),(w°r),“)))

	)

1894 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`waddw°r
((wö),(w°r)))

	)

1895 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgë_wch
((wö),(c)))

	)

1896 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgë_w°r
((wö),—)))

	)

1897 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wgën_w°r
((wö),—),“)))

	)

1898 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`whlöe_£t
((wö),(c),“)))

	)

1899 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wch
((wö),(c)))

	)

1900 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wchn°r
((wö),(c),“)))

	)

1901 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wö_wch°r
((wö),(c)))

	)

1902 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wönw°r
((wö),(c),“)))

	)

1903 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_nw°r
((wö),—),“)))

	)

1904 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_wch
((wö),(c)))

	)

1905 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wös_w°r
((wö),—)))

	)

1906 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wöw°r
((wö),(c)))

	)

1907 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,(y),(x)Ë=
ERR
 ? ERR : 
	`wvlöe_£t
((wö),(c),“)))

	)

1911 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1912 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1913 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1926 #i‡
NCURSES_MOUSE_VERSION
 > 1

1927 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1929 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1932 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1933 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1934 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1935 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1936 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1937 
	#NCURSES_RESERVED_EVENT
 040L

	)

1940 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1941 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1942 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1943 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1944 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1946 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1947 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1948 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1949 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1950 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1952 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1953 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1954 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1955 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1956 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1958 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1959 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1960 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1961 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1962 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1968 #i‡
NCURSES_MOUSE_VERSION
 > 1

1970 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1971 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1972 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1973 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1974 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1976 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1977 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1978 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1979 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1983 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1984 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1985 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1986 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1988 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1989 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1990 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1991 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1995 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1998 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1999 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

2000 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

2001 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

2002 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

2003 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

2007 
	gid
;

2008 
	gx
, 
	gy
, 
	gz
;

2009 
mmask_t
 
	gb°©e
;

2011 
	tMEVENT
;

2013 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

2014 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

2015 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

2016 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

2017 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

2018 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

2019 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

2020 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

2022 #i‡
NCURSES_SP_FUNCS


2023 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

2024 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

2025 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

2026 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

2027 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

2030 #i‚de‡
NCURSES_NOMACROS


2031 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

2036 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

2037 
NCURSES_EXPORT
(Ë
has_key
 ();

2039 #i‡
NCURSES_SP_FUNCS


2040 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

2041 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

2046 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

2047 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

2048 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

2049 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

2050 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

2051 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

2052 #i‡
NCURSES_WIDECHAR


2053 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

2054 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

2055 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

2056 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

2058 
	#_åa˚ch_t
 
_åa˚chty≥


	)

2059 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

2061 
NCURSES_EXPORT
(Ë
åa˚
 (c⁄° Ë
GCC_DEPRECATED
("use curses_trace");

2062 
NCURSES_EXPORT
(Ë
cur£s_åa˚
 (const );

2065 
	#TRACE_DISABLE
 0x0000

	)

2066 
	#TRACE_TIMES
 0x0001

	)

2067 
	#TRACE_TPUTS
 0x0002

	)

2068 
	#TRACE_UPDATE
 0x0004

	)

2069 
	#TRACE_MOVE
 0x0008

	)

2070 
	#TRACE_CHARPUT
 0x0010

	)

2071 
	#TRACE_ORDINARY
 0x001F

	)

2072 
	#TRACE_CALLS
 0x0020

	)

2073 
	#TRACE_VIRTPUT
 0x0040

	)

2074 
	#TRACE_IEVENT
 0x0080

	)

2075 
	#TRACE_BITS
 0x0100

	)

2076 
	#TRACE_ICALLS
 0x0200

	)

2077 
	#TRACE_CCALLS
 0x0400

	)

2078 
	#TRACE_DATABASE
 0x0800

	)

2079 
	#TRACE_ATTRS
 0x1000

	)

2081 
	#TRACE_SHIFT
 13

	)

2082 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

2084 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

2085 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

2086 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

2087 
	#OPTIMIZE_MVCUR
 0x01

	)

2088 
	#OPTIMIZE_HASHMAP
 0x02

	)

2089 
	#OPTIMIZE_SCROLL
 0x04

	)

2090 
	#OPTIMIZE_ALL
 0xf‡

	)

2093 
NCURSES_EXPORT
(Ë
exô_cur£s
 (Ë
GCC_NORETURN
;

2095 
	~<un˘æ.h
>

2097 #ifde‡
__˝lu•lus


2099 #i‚de‡
NCURSES_NOMACROS


2102 #unde‡
box


2103 #unde‡
˛ór


2104 #unde‡
îa£


2105 #unde‡
move


2106 #unde‡
ª‰esh


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

406 
	~<bôs/Êﬂä.h
>

407 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

408 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

409 #ifde‡
__REDIRECT


410 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

411 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

412 
__isoc99_fsˇnf
Ë
__wur
;

413 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_sˇnf
Ë
__wur
;

415 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

416 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

417 
__isoc99_ssˇnf
);

419 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

421 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

422 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

423 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

424 
	#fsˇnf
 
__isoc99_fsˇnf


	)

425 
	#sˇnf
 
__isoc99_sˇnf


	)

426 
	#ssˇnf
 
__isoc99_ssˇnf


	)

430 #ifdef 
__USE_ISOC99


435 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

436 
__gnuc_va_li°
 
__¨g
)

437 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

443 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

444 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

447 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

448 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

449 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

452 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

453 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

454 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

455 
	`__REDIRECT
 (
vfsˇnf
,

456 (
FILE
 *
__ª°ri˘
 
__s
,

457 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

458 
__isoc99_vfsˇnf
)

459 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

460 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

461 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

462 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

463 
	`__REDIRECT_NTH
 (
vssˇnf
,

464 (c⁄° *
__ª°ri˘
 
__s
,

465 c⁄° *
__ª°ri˘
 
__f‹m©
,

466 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

467 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

468 #ñi‡!
deföed
 
__REDIRECT


469 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

470 c⁄° *
__ª°ri˘
 
__f‹m©
,

471 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

472 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

473 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

474 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

475 c⁄° *
__ª°ri˘
 
__f‹m©
,

476 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

477 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

478 
	#vsˇnf
 
__isoc99_vsˇnf


	)

479 
	#vssˇnf
 
__isoc99_vssˇnf


	)

489 
	`fgëc
 (
FILE
 *
__°ªam
);

490 
	`gëc
 (
FILE
 *
__°ªam
);

496 
	`gëch¨
 ();

498 #ifde‡
__USE_POSIX199506


503 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

504 
	`gëch¨_u∆ocked
 ();

507 #ifde‡
__USE_MISC


514 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

525 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

526 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

532 
	`putch¨
 (
__c
);

534 #ifde‡
__USE_MISC


541 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

544 #ifde‡
__USE_POSIX199506


549 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

550 
	`putch¨_u∆ocked
 (
__c
);

554 #i‡
deföed
 
__USE_MISC
 \

555 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

557 
	`gëw
 (
FILE
 *
__°ªam
);

560 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

568 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

569 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

571 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

581 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

584 #ifde‡
__USE_GNU


591 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

592 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


593 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

597 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

608 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

609 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

610 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

611 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

612 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

613 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

621 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

622 
size_t
 *
__ª°ri˘
 
__n
,

623 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

631 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

637 
	`puts
 (c⁄° *
__s
);

644 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

651 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

652 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

657 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

658 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

660 #ifde‡
__USE_GNU


667 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

668 
FILE
 *
__ª°ri˘
 
__°ªam
);

671 #ifde‡
__USE_MISC


678 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

679 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

680 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

681 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

689 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

694 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

699 
	`ªwöd
 (
FILE
 *
__°ªam
);

706 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


707 #i‚de‡
__USE_FILE_OFFSET64


712 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

717 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

719 #ifde‡
__REDIRECT


720 
	`__REDIRECT
 (
f£eko
,

721 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

722 
f£eko64
);

723 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

725 
	#f£eko
 
f£eko64


	)

726 
	#·ñlo
 
·ñlo64


	)

731 #i‚de‡
__USE_FILE_OFFSET64


736 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

741 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

743 #ifde‡
__REDIRECT


744 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

745 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

746 
	`__REDIRECT
 (
f£ços
,

747 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

749 
	#fgëpos
 
fgëpos64


	)

750 
	#f£ços
 
f£ços64


	)

754 #ifde‡
__USE_LARGEFILE64


755 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

756 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

757 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

758 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

762 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

764 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

766 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

768 #ifde‡
__USE_MISC


770 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

771 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

772 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

780 
	`≥º‹
 (c⁄° *
__s
);

783 #ifdef 
__USE_POSIX


785 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

788 #ifde‡
__USE_MISC


790 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

794 #ifde‡
__USE_POSIX2


799 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

805 
	`p˛o£
 (
FILE
 *
__°ªam
);

809 #ifdef 
__USE_POSIX


811 *
	$˘îmid
 (*
__s
Ë
__THROW
;

815 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


817 *
	`cu£rid
 (*
__s
);

821 #ifdef 
__USE_GNU


822 
ob°ack
;

825 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

826 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

827 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

828 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

829 c⁄° *
__ª°ri˘
 
__f‹m©
,

830 
__gnuc_va_li°
 
__¨gs
)

831 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

835 #ifde‡
__USE_POSIX199506


839 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

843 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

846 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

849 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


852 
	~<bôs/gë›t_posix.h
>

857 
	`__uÊow
 (
FILE
 *);

858 
	`__ovîÊow
 (
FILE
 *, );

862 #ifde‡
__USE_EXTERN_INLINES


863 
	~<bôs/°dio.h
>

865 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


866 
	~<bôs/°dio2.h
>

869 
	~<bôs/Êﬂä.h
>

870 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

871 
	~<bôs/°dio-ldbl.h
>

874 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


540 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

542 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

543 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

550 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

551 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

553 #ifde‡
__USE_MISC


559 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

560 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


561 
	`__©åibuã_Æloc_size__
 ((2, 3));

565 
	$‰ì
 (*
__±r
Ë
__THROW
;

567 #ifde‡
__USE_MISC


568 
	~<Æloˇ.h
>

571 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

572 || 
deföed
 
__USE_MISC


574 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


575 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

578 #ifde‡
__USE_XOPEN2K


580 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

584 #ifde‡
__USE_ISOC11


586 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

591 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

595 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

597 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


599 #ifde‡
__˝lu•lus


600 "C++" 
	`©_quick_exô
 ((*
__func
) ())

601 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

603 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

607 #ifdef 
__USE_MISC


610 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

611 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

619 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


623 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #ifde‡
__USE_ISOC99


629 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

634 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

636 #ifde‡
__USE_GNU


639 *
	$£cuª_gëív
 (c⁄° *
__«me
)

640 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


647 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

650 #ifde‡
__USE_XOPEN2K


653 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

654 
__THROW
 
	`__n⁄nuŒ
 ((2));

657 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

660 #ifdef 
__USE_MISC


664 
	$˛óªnv
 (Ë
__THROW
;

668 #i‡
deföed
 
__USE_MISC
 \

669 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

675 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

678 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


687 #i‚de‡
__USE_FILE_OFFSET64


688 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

690 #ifde‡
__REDIRECT


691 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

692 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

694 
	#mk°emp
 
mk°emp64


	)

697 #ifde‡
__USE_LARGEFILE64


698 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 #ifde‡
__USE_MISC


709 #i‚de‡
__USE_FILE_OFFSET64


710 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

714 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

716 
	#mk°emps
 
mk°emps64


	)

719 #ifde‡
__USE_LARGEFILE64


720 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

721 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

725 #ifde‡
__USE_XOPEN2K8


731 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

734 #ifde‡
__USE_GNU


741 #i‚de‡
__USE_FILE_OFFSET64


742 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

744 #ifde‡
__REDIRECT


745 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

746 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

748 
	#mko°emp
 
mko°emp64


	)

751 #ifde‡
__USE_LARGEFILE64


752 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

761 #i‚de‡
__USE_FILE_OFFSET64


762 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

763 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

765 #ifde‡
__REDIRECT


766 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

767 
__Êags
), 
mko°emps64
)

768 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

770 
	#mko°emps
 
mko°emps64


	)

773 #ifde‡
__USE_LARGEFILE64


774 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

784 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

787 #ifdef 
__USE_GNU


790 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

794 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


800 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

801 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

806 #i‚de‡
__COMPAR_FN_T


807 
	#__COMPAR_FN_T


	)

808 (*
	t__com∑r_‚_t
) (const *, const *);

810 #ifdef 
__USE_GNU


811 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

814 #ifde‡
__USE_GNU


815 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

820 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

821 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

822 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

824 #ifde‡
__USE_EXTERN_INLINES


825 
	~<bôs/°dlib-b£¨ch.h
>

830 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

832 #ifde‡
__USE_GNU


833 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

834 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

835 
	`__n⁄nuŒ
 ((1, 4));

840 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

841 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

843 #ifde‡
__USE_ISOC99


844 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

845 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

852 
div_t
 
	$div
 (
__numî
, 
__díom
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

855 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

857 #ifde‡
__USE_ISOC99


858 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

859 
__díom
)

860 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

864 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

865 || 
deföed
 
__USE_MISC


872 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

873 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

878 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

879 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

884 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

885 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

888 #ifde‡
__USE_MISC


890 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

894 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

895 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

896 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

897 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

902 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

905 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

906 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

907 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

909 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

910 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

911 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

912 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

914 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

915 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

916 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

922 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

925 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

926 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

929 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

933 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


935 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

937 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

938 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

939 
__THROW


940 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

942 #ifde‡
__USE_MISC


947 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


958 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

959 *c⁄° *
__ª°ri˘
 
__tokís
,

960 **
__ª°ri˘
 
__vÆuï
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

967 #ifde‡
__USE_XOPEN2KXSI


969 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

972 #ifde‡
__USE_XOPEN_EXTENDED


977 
	$gø¡±
 (
__fd
Ë
__THROW
;

981 
	$u∆ock±
 (
__fd
Ë
__THROW
;

986 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

989 #ifde‡
__USE_GNU


993 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

994 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

997 
	`gë±
 ();

1000 #ifde‡
__USE_MISC


1004 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1005 
__THROW
 
	`__n⁄nuŒ
 ((1));

1008 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1011 
	$ây¶Ÿ
 (Ë
__THROW
;

1014 
	~<bôs/°dlib-Êﬂt.h
>

1017 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1018 
	~<bôs/°dlib.h
>

1021 
	~<bôs/Êﬂä.h
>

1022 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1023 
	~<bôs/°dlib-ldbl.h
>

1026 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

68 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


71 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

72 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

74 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__OPTIMIZE__


77 
__exã∫_Æways_ölöe
 *

78 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


80  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

83 
__exã∫_Æways_ölöe
 const *

84 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


86  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

89 
	}
}

91 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

92 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 #ifde‡
__USE_GNU


98 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


99 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

100 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

104 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


110 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

111 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

112 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

113 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

114 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

115 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

119 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

154 #ifde‡
__USE_XOPEN2K8


156 
	~<bôs/ty≥s/loˇÀ_t.h
>

159 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

163 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

164 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

165 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

168 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

169 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

207 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


210 *
°rchr
 (*
__s
, 
__c
)

211 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

212 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

215 #ifde‡
__OPTIMIZE__


216 
__exã∫_Æways_ölöe
 *

217 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


219  
__buûtö_°rchr
 (
__s
, 
__c
);

222 
__exã∫_Æways_ölöe
 const *

223 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

230 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

231 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

234 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


237 *
	`°ºchr
 (*
__s
, 
__c
)

238 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

242 #ifde‡
__OPTIMIZE__


243 
__exã∫_Æways_ölöe
 *

244 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


246  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

249 
__exã∫_Æways_ölöe
 const *

250 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
	}
}

257 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

258 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 #ifde‡
__USE_GNU


264 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


265 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

266 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

267 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

281 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


287 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

288 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__OPTIMIZE__


293 
__exã∫_Æways_ölöe
 *

294 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


296  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

299 
__exã∫_Æways_ölöe
 const *

300 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


302  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

305 
	}
}

307 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

308 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

311 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


314 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

315 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

316 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

317 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__OPTIMIZE__


320 
__exã∫_Æways_ölöe
 *

321 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


323  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

326 
__exã∫_Æways_ölöe
 const *

327 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


329  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

332 
	}
}

334 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

335 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

340 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

341 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

346 c⁄° *
__ª°ri˘
 
__dñim
,

347 **
__ª°ri˘
 
__ßve_±r
)

348 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

349 #ifde‡
__USE_POSIX


350 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

355 #ifde‡
__USE_GNU


357 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


358 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

359 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

360 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

361 c⁄° *
__√edÀ
)

362 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

365 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 #ifde‡
__USE_GNU


373 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

374 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

375 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

376 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

377 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

381 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

382 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

384 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 
size_t
 
	$°æí
 (c⁄° *
__s
)

392 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

394 #ifdef 
__USE_XOPEN2K8


397 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

403 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

404 #ifde‡
__USE_XOPEN2K


412 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


415 #ifde‡
__REDIRECT_NTH


416 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

417 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

418 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

419 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

421 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

423 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

428 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

429 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

432 #ifde‡
__USE_GNU


434 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

436 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN2K8


442 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

445 #ifde‡
__USE_MISC


446 
	~<°rögs.h
>

450 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

451 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

455 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

456 c⁄° *
__ª°ri˘
 
__dñim
)

457 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

460 #ifdef 
__USE_XOPEN2K8


462 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

464 #ifde‡
__USE_GNU


466 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

469 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

473 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

475 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

476 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

480 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

481 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

482 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

483 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

484 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

488 #ifdef 
__USE_GNU


490 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

491 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

494 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

497 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

498 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

500 #i‚de‡
ba£«me


505 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


506 "C++" *
	$ba£«me
 (*
__fûíame
)

507 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

508 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

509 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

511 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

516 #i‡
	`__GNUC_PREREQ
 (3,4)

517 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


519 
	~<bôs/°rög_f‹tifõd.h
>

523 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

181 
	#__i¶óp
(
yór
) \

182 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

185 #ifde‡
__USE_MISC


190 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

193 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

196 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

200 #ifde‡
__USE_POSIX199309


205 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

206 
time•ec
 *
__ªmaöög
);

210 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

213 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

216 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

217 
__THROW
;

219 #ifde‡
__USE_XOPEN2K


224 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

225 c⁄° 
time•ec
 *
__ªq
,

226 
time•ec
 *
__ªm
);

229 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

234 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

235 
sigevít
 *
__ª°ri˘
 
__evp
,

236 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

239 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

242 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

243 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

244 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

247 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

248 
__THROW
;

251 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

255 #ifde‡
__USE_ISOC11


257 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1));

262 #ifde‡
__USE_XOPEN_EXTENDED


274 
gëd©e_îr
;

283 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

286 #ifde‡
__USE_GNU


297 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

298 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

301 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


361 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

367 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


368 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

370 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


371 #i‚de‡
__USE_FILE_OFFSET64


378 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

379 
__off_t
 
__off£t
Ë
__wur


380 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur


389 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

392 #ifde‡
__REDIRECT


393 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

394 
__off64_t
 
__off£t
),

395 
¥ód64
Ë
__wur


396 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

397 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

398 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

399 
pwrôe64
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

402 
	#¥ód
 
¥ód64


	)

403 
	#pwrôe
 
pwrôe64


	)

407 #ifde‡
__USE_LARGEFILE64


411 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

412 
__off64_t
 
__off£t
Ë
__wur


413 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

416 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

417 
__off64_t
 
__off£t
Ë
__wur


418 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

426 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

428 #ifde‡
__USE_GNU


431 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

441 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

453 
	`¶ìp
 (
__£c⁄ds
);

455 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

456 || 
deföed
 
__USE_MISC


461 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

462 
__THROW
;

469 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

478 
	`∑u£
 ();

482 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

483 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


487 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

492 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

493 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

497 #ifde‡
__USE_ATFILE


500 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

501 
__gid_t
 
__group
, 
__Êag
)

502 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

506 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


510 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

520 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur


521 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

523 #ifdef 
__USE_GNU


527 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

530 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

531 || 
deföed
 
__USE_MISC


535 *
	$gëwd
 (*
__buf
)

536 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


537 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

542 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

545 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

547 #ifde‡
__USE_GNU


550 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

554 **
__ívú⁄
;

555 #ifde‡
__USE_GNU


556 **
ívú⁄
;

562 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

563 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 #ifde‡
__USE_XOPEN2K8


568 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

569 
__THROW
 
	`__n⁄nuŒ
 ((2));

574 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

595 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

596 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

598 #ifde‡
__USE_GNU


601 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

602 *c⁄° 
__ívp
[])

603 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

607 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


609 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

614 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

620 
	~<bôs/c⁄‚ame.h
>

623 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

624 
__THROW
 
	`__n⁄nuŒ
 ((1));

627 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

630 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

632 #ifdef 
__USE_POSIX2


634 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


635 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

640 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

643 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

646 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

649 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

650 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


651 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

658 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


672 
	$£çgΩ
 (Ë
__THROW
;

679 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

681 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


683 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

687 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

690 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

693 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

696 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

701 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


702 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

703 #ifdef 
__USE_GNU


705 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

712 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

714 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


717 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

720 #ifde‡
__USE_XOPEN2K


722 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

729 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

731 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


734 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

737 #ifde‡
__USE_XOPEN2K


739 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

742 #ifde‡
__USE_GNU


745 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

746 
__THROW
;

750 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

751 
__THROW
;

755 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

756 
__THROW
 
__wur
;

760 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

761 
__THROW
 
__wur
;

768 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

770 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

771 || 
deföed
 
__USE_MISC


776 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

782 *
	$ây«me
 (
__fd
Ë
__THROW
;

786 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

787 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

791 
	$ißây
 (
__fd
Ë
__THROW
;

793 #ifde‡
__USE_MISC


796 
	$ây¶Ÿ
 (Ë
__THROW
;

801 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

804 #ifde‡
__USE_ATFILE


807 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

808 c⁄° *
__to
, 
__Êags
)

809 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

812 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


814 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

815 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

820 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

826 #ifde‡
__USE_ATFILE


828 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

829 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

832 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

838 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

840 #ifde‡
__USE_ATFILE


842 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

843 
__THROW
 
	`__n⁄nuŒ
 ((2));

847 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

854 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

861 *
	`gëlogö
 ();

862 #ifde‡
__USE_POSIX199506


869 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

870 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

873 #ifdef 
__USE_MISC


875 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_POSIX2


883 
	~<bôs/gë›t_posix.h
>

887 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


891 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

892 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

896 #i‡
deföed
 
__USE_MISC


899 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

904 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

910 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

911 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

912 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

918 
	$vh™gup
 (Ë
__THROW
;

921 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

930 
size_t
 
__off£t
, 
__sˇÀ
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

941 *
	$gëu£rshñl
 (Ë
__THROW
;

942 
	$ídu£rshñl
 (Ë
__THROW
;

943 
	$£tu£rshñl
 (Ë
__THROW
;

949 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

953 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

956 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

960 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

968 
	`fsync
 (
__fd
);

971 #ifde‡
__USE_GNU


974 
	$syncfs
 (
__fd
Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


981 
	`gëho°id
 ();

984 
	$sync
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


990 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

995 
	$gëdèbÀsize
 (Ë
__THROW
;

1001 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1004 #i‚de‡
__USE_FILE_OFFSET64


1005 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1008 #ifde‡
__REDIRECT_NTH


1009 
	`__REDIRECT_NTH
 (
åunˇã
,

1010 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1011 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1013 
	#åunˇã
 
åunˇã64


	)

1016 #ifde‡
__USE_LARGEFILE64


1017 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1018 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 #i‡
deföed
 
__USE_POSIX199309
 \

1024 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1027 #i‚de‡
__USE_FILE_OFFSET64


1028 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #ifde‡
__REDIRECT_NTH


1031 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1032 
·runˇã64
Ë
__wur
;

1034 
	#·runˇã
 
·runˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1044 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1045 || 
deföed
 
__USE_MISC


1049 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1055 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1059 #ifde‡
__USE_MISC


1070 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1075 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1087 
	#F_ULOCK
 0

	)

1088 
	#F_LOCK
 1

	)

1089 
	#F_TLOCK
 2

	)

1090 
	#F_TEST
 3

	)

1092 #i‚de‡
__USE_FILE_OFFSET64


1093 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1095 #ifde‡
__REDIRECT


1096 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1097 
lockf64
Ë
__wur
;

1099 
	#lockf
 
lockf64


	)

1102 #ifde‡
__USE_LARGEFILE64


1103 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1108 #ifde‡
__USE_GNU


1113 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1114 (
__exãnsi⁄__
 \

1115 ({ 
__ªsu…
; \

1116 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1117 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1118 
__ªsu…
; 
	}
}))

	)

1121 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1122 
__outfd
, 
__off64_t
 *
__poutoff
,

1123 
size_t
 
__Àngth
, 
__Êags
);

1126 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1129 
fd©async
 (
__fûdes
);

1132 #ifde‡
__USE_MISC


1138 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1139 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1142 #ifdef 
__USE_XOPEN


1147 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1148 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1149 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1150 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1157 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1159 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1162 *
	`cu£rid
 (*
__s
);

1168 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1169 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1170 (*
__∑ª¡
) (),

1171 (*
__chûd
Ë()Ë
__THROW
;

1174 #ifde‡
__USE_MISC


1177 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1178 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1182 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1183 
	~<bôs/uni°d.h
>

1187 
	~<bôs/uni°d_ext.h
>

1189 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

49 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


50 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

53 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

55 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


56 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

57 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

59 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

66 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


68 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

70 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

72 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


73 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

74 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

76 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

81 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


82 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


83 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

85 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 #i‡
deföed
 
__LDBL_COMPAT


31 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

32 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

34 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

35 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__isoc99_fsˇnfõì128
)

36 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__isoc99_sˇnfõì128
)

37 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__isoc99_ssˇnfõì128
)

39 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

42 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

43 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

44 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

47 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


48 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

49 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

52 #ifdef 
__USE_ISOC99


53 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

54 #i‡
deföed
 
__LDBL_COMPAT


55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

59 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__isoc99_vfsˇnfõì128
)

60 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__isoc99_vsˇnfõì128
)

61 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__isoc99_vssˇnfõì128
)

63 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

66 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

67 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

68 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

72 #ifde‡
__USE_XOPEN2K8


73 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

74 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

77 #ifde‡
__USE_GNU


78 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

79 
	$__LDBL_REDIR2_DECL
 (
a•rötf
)

80 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

81 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

82 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


86 
	$__LDBL_REDIR2_DECL
 (
•rötf_chk
)

87 
	$__LDBL_REDIR2_DECL
 (
v•rötf_chk
)

88 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


89 
	$__LDBL_REDIR2_DECL
 (
¢¥ötf_chk
)

90 
	$__LDBL_REDIR2_DECL
 (
v¢¥ötf_chk
)

92 #i‡
__USE_FORTIFY_LEVEL
 > 1

93 
	$__LDBL_REDIR2_DECL
 (
Ârötf_chk
)

94 
	$__LDBL_REDIR2_DECL
 (
¥ötf_chk
)

95 
	$__LDBL_REDIR2_DECL
 (
vÂrötf_chk
)

96 
	$__LDBL_REDIR2_DECL
 (
v¥ötf_chk
)

97 #ifde‡
__USE_XOPEN2K8


98 
	$__LDBL_REDIR2_DECL
 (
d¥ötf_chk
)

99 
	$__LDBL_REDIR2_DECL
 (
vd¥ötf_chk
)

101 #ifde‡
__USE_GNU


102 
	$__LDBL_REDIR2_DECL
 (
a•rötf_chk
)

103 
	$__LDBL_REDIR2_DECL
 (
va•rötf_chk
)

104 
	$__LDBL_REDIR2_DECL
 (
ob°ack_¥ötf_chk
)

105 
	$__LDBL_REDIR2_DECL
 (
ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX199506


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX199506


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW


28 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

29 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

30 c⁄° *
__ª°ri˘
 
__f‹m©
,

31 
__gnuc_va_li°
 
__≠
Ë
__THROW


32 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

34 #ifde‡
__va_¨g_∑ck


35 
__f‹tify_fun˘i⁄
 

36 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

38  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

39 
	`__glibc_objsize
 (
__s
), 
__fmt
,

40 
	`__va_¨g_∑ck
 ());

41 
	}
}

42 #ñi‡!
deföed
 
__˝lu•lus


43 
	#•rötf
(
°r
, ...) \

44 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, \

45 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

48 
__f‹tify_fun˘i⁄
 

49 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

50 
__gnuc_va_li°
 
__≠
))

52  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

53 
	`__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

54 
	}
}

56 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


58 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 ...Ë
__THROW


61 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

62 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

63 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

64 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

66 #ifde‡
__va_¨g_∑ck


67 
__f‹tify_fun˘i⁄
 

68 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

69 c⁄° *
__ª°ri˘
 
__fmt
, ...))

71  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

72 
	`__glibc_objsize
 (
__s
), 
__fmt
,

73 
	`__va_¨g_∑ck
 ());

74 
	}
}

75 #ñi‡!
deföed
 
__˝lu•lus


76 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

77 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, \

78 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

81 
__f‹tify_fun˘i⁄
 

82 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

83 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

85  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

86 
	`__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

87 
	}
}

91 #i‡
__USE_FORTIFY_LEVEL
 > 1

93 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

94 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

95 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

96 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

97 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

98 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

99 
__gnuc_va_li°
 
__≠
);

101 #ifde‡
__va_¨g_∑ck


102 
__f‹tify_fun˘i⁄
 

103 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

105  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

106 
	`__va_¨g_∑ck
 ());

107 
	}
}

109 
__f‹tify_fun˘i⁄
 

110 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

112  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

113 
	}
}

114 #ñi‡!
deföed
 
__˝lu•lus


115 
	#¥ötf
(...) \

116 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

117 
	#Ârötf
(
°ªam
, ...) \

118 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

121 
__f‹tify_fun˘i⁄
 

122 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

124 #ifde‡
__USE_EXTERN_INLINES


125  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

127  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 
__f‹tify_fun˘i⁄
 

132 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

133 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

135  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

136 
	}
}

138 #ifde‡
__USE_XOPEN2K8


139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

145 #ifde‡
__va_¨g_∑ck


146 
__f‹tify_fun˘i⁄
 

147 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

149  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

150 
	`__va_¨g_∑ck
 ());

151 
	}
}

152 #ñi‡!
deföed
 
__˝lu•lus


153 
	#d¥ötf
(
fd
, ...) \

154 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

157 
__f‹tify_fun˘i⁄
 

158 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

160  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

161 
	}
}

164 #ifde‡
__USE_GNU


166 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

167 c⁄° *
__ª°ri˘
 
__fmt
, ...)

168 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

169 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

171 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

172 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

173 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

176 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

177 
__Êag
,

178 c⁄° *
__ª°ri˘
 
__f‹m©
,

179 
__gnuc_va_li°
 
__¨gs
)

180 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

182 #ifde‡
__va_¨g_∑ck


183 
__f‹tify_fun˘i⁄
 

184 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

194  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

198 
__f‹tify_fun˘i⁄
 

199 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

200 c⁄° *
__ª°ri˘
 
__fmt
, ...))

202  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

203 
	`__va_¨g_∑ck
 ());

204 
	}
}

205 #ñi‡!
deföed
 
__˝lu•lus


206 
	#a•rötf
(
±r
, ...) \

207 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

208 
	#__a•rötf
(
±r
, ...) \

209 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

210 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

211 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

214 
__f‹tify_fun˘i⁄
 

215 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

216 
__gnuc_va_li°
 
__≠
))

218  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

219 
	}
}

221 
__f‹tify_fun˘i⁄
 

222 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

223 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

225  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

226 
__≠
);

227 
	}
}

233 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

234 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

235 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

236 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

239 
__f‹tify_fun˘i⁄
 
__wur
 *

240 
	$gës
 (*
__°r
)

242 i‡(
	`__glibc_objsize
 (
__°r
Ë!(
size_t
) -1)

243  
	`__gës_chk
 (
__°r
, 
	`__glibc_objsize
 (__str));

244  
	`__gës_w¨n
 (
__°r
);

245 
	}
}

248 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

249 
FILE
 *
__ª°ri˘
 
__°ªam
)

250 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

251 *
	`__REDIRECT
 (
__fgës_Æüs
,

252 (*
__ª°ri˘
 
__s
, 
__n
,

253 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
)

254 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

255 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

256 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

257 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

258 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

261 
__f‹tify_fun˘i⁄
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2)) *

262 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

264 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1)

266 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

267  
	`__fgës_chk
 (
__s
, 
	`__glibc_objsize
 (__s), 
__n
, 
__°ªam
);

269 i‡((
size_t
Ë
__n
 > 
	`__glibc_objsize
 (
__s
))

270  
	`__fgës_chk_w¨n
 (
__s
, 
	`__glibc_objsize
 (__s), 
__n
, 
__°ªam
);

272  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

273 
	}
}

275 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

276 
size_t
 
__size
, size_à
__n
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

278 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

279 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

280 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

281 
‰ód
Ë
__wur
;

282 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

283 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

284 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
),

286 
__‰ód_chk
)

287 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

290 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


291 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

292 
FILE
 *
__ª°ri˘
 
__°ªam
)

294 i‡(
	`__glibc_objsize0
 (
__±r
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

297 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

298 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

299  
	`__‰ód_chk
 (
__±r
, 
	`__glibc_objsize0
 (__±r), 
__size
, 
__n
,

300 
__°ªam
);

302 i‡(
__size
 * 
__n
 > 
	`__glibc_objsize0
 (
__±r
))

303  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__glibc_objsize0
 (__±r), 
__size
, 
__n
,

304 
__°ªam
);

306  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

307 
	}
}

309 #ifde‡
__USE_GNU


310 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

311 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

312 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

313 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

314 (*
__ª°ri˘
 
__s
, 
__n
,

315 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
)

316 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

317 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

318 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

319 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

320 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

323 
__f‹tify_fun˘i⁄
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2)) *

324 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

326 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1)

328 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

329  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__glibc_objsize
 (__s), 
__n
,

330 
__°ªam
);

332 i‡((
size_t
Ë
__n
 > 
	`__glibc_objsize
 (
__s
))

333  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__glibc_objsize
 (__s), 
__n
,

334 
__°ªam
);

336  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

337 
	}
}

340 #ifde‡
__USE_MISC


341 #unde‡
‰ód_u∆ocked


342 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

343 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

345 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

346 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

347 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

348 
‰ód_u∆ocked
Ë
__wur
;

349 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

350 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

351 
size_t
 
__size
, size_à
__n
,

352 
FILE
 *
__ª°ri˘
 
__°ªam
),

353 
__‰ód_u∆ocked_chk
)

354 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

357 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


358 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

359 
FILE
 *
__ª°ri˘
 
__°ªam
)

361 i‡(
	`__glibc_objsize0
 (
__±r
Ë!(
size_t
) -1)

363 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

364 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

365 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

366  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__glibc_objsize0
 (__±r), 
__size
,

367 
__n
, 
__°ªam
);

369 i‡(
__size
 * 
__n
 > 
	`__glibc_objsize0
 (
__±r
))

370  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__glibc_objsize0
 (__ptr),

371 
__size
, 
__n
, 
__°ªam
);

374 #ifde‡
__USE_EXTERN_INLINES


375 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

376 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

377 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

378 && 
__size
 * 
__n
 <= 8)

380 
size_t
 
__˙t
 = 
__size
 * 
__n
;

381 *
__˝å
 = (*Ë
__±r
;

382 i‡(
__˙t
 == 0)

385 ; 
__˙t
 > 0; --__cnt)

387 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

388 i‡(
__c
 =
EOF
)

390 *
__˝å
++ = 
__c
;

392  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

395  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

396 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 #ifde‡
__LDBL_COMPAT


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
__°πoõì128
)

31 #ifde‡
__USE_GNU


32 #ifde‡
__LDBL_COMPAT


33 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

35 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
__°πoõì128_l
)

39 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

40 #ifde‡
__LDBL_COMPAT


41 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

43 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
__°r‰omõì128
)

47 #ifde‡
__USE_MISC


48 #i‡
deföed
 
__LDBL_COMPAT


49 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

50 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

51 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

52 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

53 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

54 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

55 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
__qecvtõì128
)

56 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
__qfcvtõì128
)

57 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
__qgcvtõì128
)

58 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
__qecvtõì128_r
)

59 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
__qfcvtõì128_r
)

61 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__glibc_objsize
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__glibc_objsize
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
,

44 
	`__glibc_objsize
 (
__ªsﬁved
));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__glibc_objsize
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

55 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

56 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

57 
size_t
 
__buÊí
), 
±¢ame_r
)

58 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

59 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

61 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

62 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

65 
__f‹tify_fun˘i⁄
 

66 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

68 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

70 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

71  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
,

72 
	`__glibc_objsize
 (
__buf
));

73 i‡(
__buÊí
 > 
	`__glibc_objsize
 (
__buf
))

74  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
,

75 
	`__glibc_objsize
 (
__buf
));

77  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

78 
	}
}

81 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

82 
__THROW
 
__wur
;

83 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

84 
w˘omb
Ë
__wur
;

86 
__f‹tify_fun˘i⁄
 
__wur
 

87 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

92 
	#__STDLIB_MB_LEN_MAX
 16

	)

93 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


96 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

97 && 
__STDLIB_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

98  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__glibc_objsize
 (__s));

99  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

100 
	}
}

103 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 c⁄° *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


106 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

107 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

108 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

109 c⁄° *
__ª°ri˘
 
__§c
,

110 
size_t
 
__Àn
), 
mb°owcs
)

111 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

112 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

113 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

114 c⁄° *
__ª°ri˘
 
__§c
,

115 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

116 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

119 
__f‹tify_fun˘i⁄
 
size_t


120 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

121 
size_t
 
__Àn
))

123 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

125 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

126  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

127 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
));

129 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
))

130  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

131 (
	`__glibc_objsize
 (
__d°
)

132 /  (
wch¨_t
)));

134  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

135 
	}
}

138 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


141 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

142 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

143 (*
__ª°ri˘
 
__d°
,

144 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

145 
size_t
 
__Àn
), 
wc°ombs
)

146 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

147 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

148 (*
__ª°ri˘
 
__d°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

150 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

151 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

153 
__f‹tify_fun˘i⁄
 
size_t


154 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

155 
size_t
 
__Àn
))

157 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

159 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

160  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__glibc_objsize
 (__dst));

161 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
))

162  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

163 
	`__glibc_objsize
 (
__d°
));

165  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

166 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 
__f‹tify_fun˘i⁄
 *

26 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

27 
size_t
 
__Àn
))

29  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

30 
	`__glibc_objsize0
 (
__de°
));

31 
	}
}

33 
__f‹tify_fun˘i⁄
 *

34 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

36  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

37 
	`__glibc_objsize0
 (
__de°
));

38 
	}
}

40 #ifde‡
__USE_GNU


41 
__f‹tify_fun˘i⁄
 *

42 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__Àn
))

45  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

46 
	`__glibc_objsize0
 (
__de°
));

47 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

59  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
,

60 
	`__glibc_objsize0
 (
__de°
));

61 
	}
}

63 #ifde‡
__USE_MISC


64 
	~<bôs/°rögs_f‹tifõd.h
>

66 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

69 
__f‹tify_fun˘i⁄
 

70 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

72 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__glibc_objsize0
 (__dest));

73 
	}
}

76 
__f‹tify_fun˘i⁄
 *

77 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

79  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

80 
	}
}

82 #ifde‡
__USE_GNU


83 
__f‹tify_fun˘i⁄
 *

84 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

86  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

87 
	}
}

91 
__f‹tify_fun˘i⁄
 *

92 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

93 
size_t
 
__Àn
))

95  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

96 
	`__glibc_objsize
 (
__de°
));

97 
	}
}

99 #i‡
__GNUC_PREREQ
 (4, 7Ë|| 
__glibc_˛™g_¥îeq
 (2, 6)

100 
__f‹tify_fun˘i⁄
 *

101 
__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

103  
	`__buûtö___°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
,

104 
	`__glibc_objsize
 (
__de°
));

105 
	}
}

107 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

108 
size_t
 
__de°Àn
Ë
__THROW


109 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

110 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

111 
size_t
 
__n
), 
°≤˝y
);

113 
__f‹tify_fun˘i⁄
 *

114 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

116 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

117 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

118  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

119  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

120 
	}
}

124 
__f‹tify_fun˘i⁄
 *

125 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

127  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

128 
	}
}

131 
__f‹tify_fun˘i⁄
 *

132 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

133 
size_t
 
__Àn
))

135  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
,

136 
	`__glibc_objsize
 (
__de°
));

137 
	}
}

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

163 
__STD_TYPE
 
__SUSECONDS64_T_TYPE
 
	g__su£c⁄ds64_t
;

165 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

166 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

169 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

172 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

175 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

180 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

181 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

184 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

185 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

188 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

189 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

192 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

194 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

197 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

199 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

203 
__off64_t
 
	t__loff_t
;

204 *
	t__ˇddr_t
;

207 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

210 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

215 
	t__sig_©omic_t
;

220 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


221 
	#__time64_t
 
__time_t


	)

222 #ñi‡
__TIMESIZE
 != 64

223 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

226 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

10 
	stime•ec


12 
__time_t
 
	mtv_£c
;

13 #i‡
__WORDSIZE
 == 64 \

14 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

15 || 
__TIMESIZE
 == 32

16 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

18 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


20 
	mtv_n£c
;

22 
	mtv_n£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
)

25 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
)

28 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

29 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

30 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

31 
size_t
 
__buÊí
), 
__ªad_chk
)

32 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

35 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


36 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

38 i‡(
	`__glibc_objsize0
 (
__buf
Ë!(
size_t
) -1)

40 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

41  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__glibc_objsize0
 (__buf));

43 i‡(
__nbyãs
 > 
	`__glibc_objsize0
 (
__buf
))

44  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
,

45 
	`__glibc_objsize0
 (
__buf
));

47  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

48 
	}
}

50 #ifde‡
__USE_UNIX98


51 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off_t
 
__off£t
, 
size_t
 
__bufsize
)

53 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

54 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
)

56 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

57 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

58 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

59 
__off_t
 
__off£t
), 
¥ód
)

60 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

61 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

62 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

63 
__off64_t
 
__off£t
), 
¥ód64
)

64 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

65 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

66 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

67 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

70 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

71 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

72 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

73 
__¥ód64_chk
)

74 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

77 #i‚de‡
__USE_FILE_OFFSET64


78 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


79 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

81 i‡(
	`__glibc_objsize0
 (
__buf
Ë!(
size_t
) -1)

83 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

84  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

85 
	`__glibc_objsize0
 (
__buf
));

87 i‡–
__nbyãs
 > 
	`__glibc_objsize0
 (
__buf
))

88  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

89 
	`__glibc_objsize0
 (
__buf
));

91  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

92 
	}
}

94 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


95 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

97 i‡(
	`__glibc_objsize0
 (
__buf
Ë!(
size_t
) -1)

99 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

100  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

101 
	`__glibc_objsize0
 (
__buf
));

103 i‡–
__nbyãs
 > 
	`__glibc_objsize0
 (
__buf
))

104  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

105 
	`__glibc_objsize0
 (
__buf
));

108  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

109 
	}
}

112 #ifde‡
__USE_LARGEFILE64


113 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


114 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

116 i‡(
	`__glibc_objsize0
 (
__buf
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

119  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

120 
	`__glibc_objsize0
 (
__buf
));

122 i‡–
__nbyãs
 > 
	`__glibc_objsize0
 (
__buf
))

123  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

124 
	`__glibc_objsize0
 (
__buf
));

127  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

128 
	}
}

132 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


133 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

137 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

138 (c⁄° *
__ª°ri˘
 
__∑th
,

139 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

140 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

141 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

142 (c⁄° *
__ª°ri˘
 
__∑th
,

143 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

144 
size_t
 
__buÊí
), 
__ªadlök_chk
)

145 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

148 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


149 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

150 
size_t
 
__Àn
))

152 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

154 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

155  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__glibc_objsize
 (__buf));

157 i‡–
__Àn
 > 
	`__glibc_objsize
 (
__buf
))

158  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
,

159 
	`__glibc_objsize
 (
__buf
));

161  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

162 
	}
}

165 #ifde‡
__USE_ATFILE


166 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
)

169 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

170 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

171 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

172 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

173 
ªadlök©
)

174 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

175 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

176 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

177 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

178 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

179 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

183 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


184 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

185 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

187 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

189 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

190  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

191 
	`__glibc_objsize
 (
__buf
));

193 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__buf
))

194  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

195 
	`__glibc_objsize
 (
__buf
));

197  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

198 
	}
}

201 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

202 
__THROW
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

203 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

204 (*
__buf
, 
size_t
 
__size
), 
gëcwd
)

205 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

206 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

207 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

208 
__gëcwd_chk
)

209 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

212 
__f‹tify_fun˘i⁄
 
__wur
 *

213 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

215 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

217 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

218  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__glibc_objsize
 (__buf));

220 i‡(
__size
 > 
	`__glibc_objsize
 (
__buf
))

221  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__glibc_objsize
 (__buf));

223  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

224 
	}
}

226 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


227 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

228 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

229 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

230 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

233 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

234 
	`__NTH
 (
	$gëwd
 (*
__buf
))

236 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

237  
	`__gëwd_chk
 (
__buf
, 
	`__glibc_objsize
 (__buf));

238  
	`__gëwd_w¨n
 (
__buf
);

239 
	}
}

242 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

243 
size_t
 
__buÊí
Ë
__THROW


244 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

245 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

246 
size_t
 
__Àn
), 
c⁄f°r
)

247 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

248 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

249 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

250 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

251 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

254 
__f‹tify_fun˘i⁄
 
size_t


255 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

257 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

260  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__glibc_objsize
 (__buf));

262 i‡(
	`__glibc_objsize
 (
__buf
Ë< 
__Àn
)

263  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
,

264 
	`__glibc_objsize
 (
__buf
));

266  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

267 
	}
}

270 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

271 
__THROW
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

272 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

273 
gëgroups
Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

274 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

275 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

276 
__gëgroups_chk
)

277 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

280 
__f‹tify_fun˘i⁄
 

281 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

283 i‡(
	`__glibc_objsize
 (
__li°
Ë!(
size_t
) -1)

285 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

286  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__glibc_objsize
 (__list));

288 i‡(
__size
 *  (
__gid_t
Ë> 
	`__glibc_objsize
 (
__li°
))

289  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__glibc_objsize
 (__list));

291  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

292 
	}
}

295 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

296 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

297 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

298 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

299 
size_t
 
__buÊí
), 
ây«me_r
)

300 
	`__n⁄nuŒ
 ((2));

301 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

302 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

303 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

304 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

307 
__f‹tify_fun˘i⁄
 

308 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

310 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

312 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

313  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
,

314 
	`__glibc_objsize
 (
__buf
));

316 i‡(
__buÊí
 > 
	`__glibc_objsize
 (
__buf
))

317  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
,

318 
	`__glibc_objsize
 (
__buf
));

320  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

321 
	}
}

324 #ifde‡
__USE_POSIX199506


325 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

326 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

327 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

328 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

329 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

330 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

331 
__gëlogö_r_chk
)

332 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

335 
__f‹tify_fun˘i⁄
 

336 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

338 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

341  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__glibc_objsize
 (__buf));

343 i‡(
__buÊí
 > 
	`__glibc_objsize
 (
__buf
))

344  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
,

345 
	`__glibc_objsize
 (
__buf
));

347  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

348 
	}
}

352 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


353 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

355 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

356 
gëho°«me
)

357 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

358 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

359 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

360 
__gëho°«me_chk
)

361 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

364 
__f‹tify_fun˘i⁄
 

365 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

367 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

369 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

370  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__glibc_objsize
 (__buf));

372 i‡(
__buÊí
 > 
	`__glibc_objsize
 (
__buf
))

373  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
,

374 
	`__glibc_objsize
 (
__buf
));

376  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

377 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

382 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

384 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

385 
size_t
 
__buÊí
),

386 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1))

387 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

388 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

389 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

390 
__gëdomaö«me_chk
)

391 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

395 
__f‹tify_fun˘i⁄
 

396 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

398 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

400 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

401  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__glibc_objsize
 (__buf));

403 i‡(
__buÊí
 > 
	`__glibc_objsize
 (
__buf
))

404  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
,

405 
	`__glibc_objsize
 (
__buf
));

407  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

408 
	}
}

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

120 #unde‡
__USE_ISOC11


121 #unde‡
__USE_ISOC99


122 #unde‡
__USE_ISOC95


123 #unde‡
__USE_ISOCXX11


124 #unde‡
__USE_POSIX


125 #unde‡
__USE_POSIX2


126 #unde‡
__USE_POSIX199309


127 #unde‡
__USE_POSIX199506


128 #unde‡
__USE_XOPEN


129 #unde‡
__USE_XOPEN_EXTENDED


130 #unde‡
__USE_UNIX98


131 #unde‡
__USE_XOPEN2K


132 #unde‡
__USE_XOPEN2KXSI


133 #unde‡
__USE_XOPEN2K8


134 #unde‡
__USE_XOPEN2K8XSI


135 #unde‡
__USE_LARGEFILE


136 #unde‡
__USE_LARGEFILE64


137 #unde‡
__USE_FILE_OFFSET64


138 #unde‡
__USE_MISC


139 #unde‡
__USE_ATFILE


140 #unde‡
__USE_GNU


141 #unde‡
__USE_FORTIFY_LEVEL


142 #unde‡
__KERNEL_STRICT_NAMES


143 #unde‡
__GLIBC_USE_ISOC2X


144 #unde‡
__GLIBC_USE_DEPRECATED_GETS


145 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


149 #i‚de‡
_LOOSE_KERNEL_NAMES


150 
	#__KERNEL_STRICT_NAMES


	)

160 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


161 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

162 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

164 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

171 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

173 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

175 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

179 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

185 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

186 && !
deföed
 
	g_DEFAULT_SOURCE


188 #unde‡
_DEFAULT_SOURCE


189 
	#_DEFAULT_SOURCE
 1

	)

193 #ifde‡
_GNU_SOURCE


194 #unde‡
_ISOC95_SOURCE


195 
	#_ISOC95_SOURCE
 1

	)

196 #unde‡
_ISOC99_SOURCE


197 
	#_ISOC99_SOURCE
 1

	)

198 #unde‡
_ISOC11_SOURCE


199 
	#_ISOC11_SOURCE
 1

	)

200 #unde‡
_ISOC2X_SOURCE


201 
	#_ISOC2X_SOURCE
 1

	)

202 #unde‡
_POSIX_SOURCE


203 
	#_POSIX_SOURCE
 1

	)

204 #unde‡
_POSIX_C_SOURCE


205 
	#_POSIX_C_SOURCE
 200809L

	)

206 #unde‡
_XOPEN_SOURCE


207 
	#_XOPEN_SOURCE
 700

	)

208 #unde‡
_XOPEN_SOURCE_EXTENDED


209 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

210 #unde‡
_LARGEFILE64_SOURCE


211 
	#_LARGEFILE64_SOURCE
 1

	)

212 #unde‡
_DEFAULT_SOURCE


213 
	#_DEFAULT_SOURCE
 1

	)

214 #unde‡
_ATFILE_SOURCE


215 
	#_ATFILE_SOURCE
 1

	)

220 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

221 || (!
deföed
 
	g__STRICT_ANSI__
 \

222 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

223 && !
deföed
 
	g_ISOC2X_SOURCE
 \

224 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

225 && !
deföed
 
	g_XOPEN_SOURCE
))

226 #unde‡
_DEFAULT_SOURCE


227 
	#_DEFAULT_SOURCE
 1

	)

231 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

232 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

233 
	#__GLIBC_USE_ISOC2X
 1

	)

235 
	#__GLIBC_USE_ISOC2X
 0

	)

239 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

240 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

241 
	#__USE_ISOC11
 1

	)

245 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

246 || 
deföed
 
_ISOC2X_SOURCE
 \

247 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

248 
	#__USE_ISOC99
 1

	)

252 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

253 || 
deföed
 
_ISOC2X_SOURCE
 \

254 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

255 
	#__USE_ISOC95
 1

	)

258 #ifde‡
__˝lu•lus


260 #i‡
__˝lu•lus
 >= 201703L

261 
	#__USE_ISOC11
 1

	)

265 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


266 
	#__USE_ISOCXX11
 1

	)

267 
	#__USE_ISOC99
 1

	)

274 #ifde‡
_DEFAULT_SOURCE


275 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


276 
	#__USE_POSIX_IMPLICITLY
 1

	)

278 #unde‡
_POSIX_SOURCE


279 
	#_POSIX_SOURCE
 1

	)

280 #unde‡
_POSIX_C_SOURCE


281 
	#_POSIX_C_SOURCE
 200809L

	)

284 #i‡((!
deföed
 
__STRICT_ANSI__
 \

285 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

286 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

287 
	#_POSIX_SOURCE
 1

	)

288 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

289 
	#_POSIX_C_SOURCE
 2

	)

290 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

291 
	#_POSIX_C_SOURCE
 199506L

	)

292 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

293 
	#_POSIX_C_SOURCE
 200112L

	)

295 
	#_POSIX_C_SOURCE
 200809L

	)

297 
	#__USE_POSIX_IMPLICITLY
 1

	)

306 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

307 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

308 
	#_POSIX_SOURCE
 1

	)

309 #unde‡
_POSIX_C_SOURCE


310 
	#_POSIX_C_SOURCE
 199506L

	)

313 #i‡(
deföed
 
_POSIX_SOURCE
 \

314 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

315 || 
deföed
 
_XOPEN_SOURCE
)

316 
	#__USE_POSIX
 1

	)

319 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


320 
	#__USE_POSIX2
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

324 
	#__USE_POSIX199309
 1

	)

327 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

328 
	#__USE_POSIX199506
 1

	)

331 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

332 
	#__USE_XOPEN2K
 1

	)

333 #unde‡
__USE_ISOC95


334 
	#__USE_ISOC95
 1

	)

335 #unde‡
__USE_ISOC99


336 
	#__USE_ISOC99
 1

	)

339 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

340 
	#__USE_XOPEN2K8
 1

	)

341 #unde‡
_ATFILE_SOURCE


342 
	#_ATFILE_SOURCE
 1

	)

345 #ifdef 
_XOPEN_SOURCE


346 
	#__USE_XOPEN
 1

	)

347 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

348 
	#__USE_XOPEN_EXTENDED
 1

	)

349 
	#__USE_UNIX98
 1

	)

350 #unde‡
_LARGEFILE_SOURCE


351 
	#_LARGEFILE_SOURCE
 1

	)

352 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

353 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

354 
	#__USE_XOPEN2K8
 1

	)

355 
	#__USE_XOPEN2K8XSI
 1

	)

357 
	#__USE_XOPEN2K
 1

	)

358 
	#__USE_XOPEN2KXSI
 1

	)

359 #unde‡
__USE_ISOC95


360 
	#__USE_ISOC95
 1

	)

361 #unde‡
__USE_ISOC99


362 
	#__USE_ISOC99
 1

	)

365 #ifde‡
_XOPEN_SOURCE_EXTENDED


366 
	#__USE_XOPEN_EXTENDED
 1

	)

371 #ifde‡
_LARGEFILE_SOURCE


372 
	#__USE_LARGEFILE
 1

	)

375 #ifde‡
_LARGEFILE64_SOURCE


376 
	#__USE_LARGEFILE64
 1

	)

379 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

380 
	#__USE_FILE_OFFSET64
 1

	)

383 #i‡
deföed
 
_DEFAULT_SOURCE


384 
	#__USE_MISC
 1

	)

387 #ifdef 
_ATFILE_SOURCE


388 
	#__USE_ATFILE
 1

	)

391 #ifdef 
_GNU_SOURCE


392 
	#__USE_GNU
 1

	)

395 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

396 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

397 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

398 #ñi‡!
__GNUC_PREREQ
 (4, 1)

399 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


400 #ñi‡
_FORTIFY_SOURCE
 > 2 && 
__glibc_˛™g_¥îeq
 (9, 0)

401 #i‡
_FORTIFY_SOURCE
 > 3

402 #w¨nög 
_FORTIFY_SOURCE
 > 3 
is
 
åóãd
 
like
 3 
⁄
 
this
 
∂©f‹m


404 
	#__USE_FORTIFY_LEVEL
 3

	)

405 #ñi‡
_FORTIFY_SOURCE
 > 1

406 #i‡
_FORTIFY_SOURCE
 > 2

407 #w¨nög 
_FORTIFY_SOURCE
 > 2 
is
 
åóãd
 
like
 2 
⁄
 
this
 
∂©f‹m


409 
	#__USE_FORTIFY_LEVEL
 2

	)

411 
	#__USE_FORTIFY_LEVEL
 1

	)

414 #i‚de‡
__USE_FORTIFY_LEVEL


415 
	#__USE_FORTIFY_LEVEL
 0

	)

422 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


423 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

425 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

440 #i‡(
deföed
 
__USE_GNU
 \

441 && (
deföed
 
	g__˝lu•lus
 \

442 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

443 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

444 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

446 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

451 
	~<°dc-¥edef.h
>

459 #unde‡
__GNU_LIBRARY__


460 
	#__GNU_LIBRARY__
 6

	)

464 
	#__GLIBC__
 2

	)

465 
	#__GLIBC_MINOR__
 33

	)

467 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

468 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

471 #i‚de‡
__ASSEMBLER__


472 #i‚de‡
_SYS_CDEFS_H


473 
	~<sys/cdefs.h
>

478 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


479 
	#__USE_LARGEFILE
 1

	)

480 
	#__USE_LARGEFILE64
 1

	)

486 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

487 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

488 && 
deföed
 
	g__exã∫_ölöe


489 
	#__USE_EXTERN_INLINES
 1

	)

497 
	~<gnu/°ubs.h
>

	@/usr/include/ncurses_dll.h

31 #i‚de‡
NCURSES_DLL_H_ö˛


32 
	#NCURSES_DLL_H_ö˛
 1

	)

37 #i‡
deföed
(
__MINGW64__
)

39 #i‚de‡
_WIN64


40 
	#_WIN64
 1

	)

43 #ñi‡
deföed
(
__MINGW32__
)

45 #i‚de‡
_WIN32


46 
	#_WIN32
 1

	)

53 #i‡(
__GNUC__
 =4Ë&& (
__GNUC_MINOR__
 == 8)

55 #ifde‡
åa˚


56 #unde‡
åa˚


57 
	#TRACE


	)

68 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

69 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

75 #unde‡
NCURSES_DLL


76 
	#NCURSES_STATIC


	)

78 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
_WIN32
)

79 #i‡
deföed
(
NCURSES_DLL
)

80 #i‡
deföed
(
NCURSES_STATIC
)

81 #unde‡
NCURSES_STATIC


84 #unde‡
NCURSES_IMPEXP


85 #unde‡
NCURSES_API


86 #unde‡
NCURSES_EXPORT


87 #unde‡
NCURSES_EXPORT_VAR


88 #i‡
deföed
(
NCURSES_DLL
)

90 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

91 #ñi‡
deföed
(
NCURSES_STATIC
)

93 
	#NCURSES_IMPEXP


	)

96 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

98 
	#NCURSES_API
 
__cde˛


	)

99 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

100 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

104 #i‡!
deföed
(
NCURSES_IMPEXP
)

105 
	#NCURSES_IMPEXP


	)

107 #i‡!
deföed
(
NCURSES_API
)

108 
	#NCURSES_API


	)

110 #i‡!
deföed
(
NCURSES_EXPORT
)

111 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

113 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

114 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/unctrl.h

45 #i‚de‡
NCURSES_UNCTRL_H_ö˛


46 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

48 #unde‡
NCURSES_VERSION


49 
	#NCURSES_VERSION
 "6.2"

	)

51 #ifde‡
__˝lu•lus


55 
	~<cur£s.h
>

57 #unde‡
un˘æ


58 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

61 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

64 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


24 
	#_WCHAR_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

30 
	~<bôs/Êﬂä.h
>

32 
	#__√ed_size_t


	)

33 
	#__√ed_wch¨_t


	)

34 
	#__√ed_NULL


	)

35 
	~<°ddef.h
>

37 
	#__√ed___va_li°


	)

38 
	~<°d¨g.h
>

40 
	~<bôs/wch¨.h
>

41 
	~<bôs/ty≥s/wöt_t.h
>

42 
	~<bôs/ty≥s/mb°©e_t.h
>

43 
	~<bôs/ty≥s/__FILE.h
>

45 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


46 
	~<bôs/ty≥s/FILE.h
>

48 #ifde‡
__USE_XOPEN2K8


49 
	~<bôs/ty≥s/loˇÀ_t.h
>

53 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

54 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

57 #i‚de‡
WCHAR_MIN


59 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

60 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

63 #i‚de‡
WEOF


64 
	#WEOF
 (0xffffffffu)

	)

74 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_GNU
 \

75 && !(
deföed
 
	g__USE_XOPEN2K
 && !deföed 
	g__USE_XOPEN2KXSI
))

76 
	~<bôs/w˘y≥-wch¨.h
>

79 
__BEGIN_DECLS


83 
	gtm
;

87 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

88 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

89 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

92 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

93 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

94 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

97 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

98 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

99 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

101 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

102 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

103 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

106 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

109 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

112 #ifde‡
__USE_XOPEN2K8


114 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

117 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

118 
size_t
 
__n
Ë
__THROW
;

122 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

123 
loˇÀ_t
 
__loc
Ë
__THROW
;

125 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

126 
size_t
 
__n
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

131 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

135 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

136 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

138 #ifde‡
__USE_XOPEN2K8


144 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

145 
loˇÀ_t
 
__loc
Ë
__THROW
;

150 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

151 
size_t
 
__n
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

154 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

158 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


159 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

160 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

161 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

162 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

164 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

165 
__THROW
 
__©åibuã_puª__
;

168 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


169 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

170 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

171 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

172 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

174 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

175 
__THROW
 
__©åibuã_puª__
;

178 #ifde‡
__USE_GNU


181 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

182 
__THROW
 
__©åibuã_puª__
;

187 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

188 
__THROW
 
__©åibuã_puª__
;

191 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

192 
__THROW
 
__©åibuã_puª__
;

194 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


195 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

196 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

197 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

198 c⁄° 
wch¨_t
 *
__ac˚±
)

199 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

201 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

202 
__THROW
 
__©åibuã_puª__
;

205 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


206 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

207 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

208 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

209 c⁄° 
wch¨_t
 *
__√edÀ
)

210 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

212 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

213 
__THROW
 
__©åibuã_puª__
;

217 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

218 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

219 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

222 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

224 #ifde‡
__USE_XOPEN


226 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


227 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

228 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

229 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

230 c⁄° 
wch¨_t
 *
__√edÀ
)

231 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

233 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

234 
__THROW
 
__©åibuã_puª__
;

238 #ifde‡
__USE_XOPEN2K8


240 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

241 
__THROW
 
__©åibuã_puª__
;

246 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


247 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

248 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

249 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

250 
size_t
 
__n
)

251 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

253 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

254 
__THROW
 
__©åibuã_puª__
;

258 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

259 
__THROW
 
__©åibuã_puª__
;

262 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

263 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

267 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

268 
__THROW
;

271 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

273 #ifde‡
__USE_GNU


276 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

277 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

278 
__THROW
;

284 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

288 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

292 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

296 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

297 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

298 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

301 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

302 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

305 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

306 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

307 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

308 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

310 #ifde‡
__USE_EXTERN_INLINES


316 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

317 
__exã∫_ölöe
 
wöt_t


318 
	`__NTH
 (
	$btowc
 (
__c
))

319 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

320 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

322 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

323 
__exã∫_ölöe
 

324 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

325 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

326 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

328 
__exã∫_ölöe
 
size_t


329 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

330 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

331 {  (
__ps
 !
NULL


332 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

337 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

338 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

339 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

343 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

344 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

345 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

348 #ifdef 
__USE_XOPEN2K8


351 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

352 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

353 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

357 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

358 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

359 
size_t
 
__nwc
, size_à
__Àn
,

360 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

365 #ifde‡
__USE_XOPEN


367 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

371 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

377 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

378 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

380 #ifde‡
__USE_ISOC99


382 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

383 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

384 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

385 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

390 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


391 
_Flﬂt16
 
	$wc°of16
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

392 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

395 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


396 
_Flﬂt32
 
	$wc°of32
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

397 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

400 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


401 
_Flﬂt64
 
	$wc°of64
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

402 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

405 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


406 
_Flﬂt128
 
	$wc°of128
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

407 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

410 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


411 
_Flﬂt32x
 
	$wc°of32x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

412 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

415 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


416 
_Flﬂt64x
 
	$wc°of64x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

417 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

420 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


421 
_Flﬂt128x
 
	$wc°of128x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

422 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

428 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

429 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

433 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

434 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

435 
__THROW
;

437 #ifde‡
__USE_ISOC99


440 
__exãnsi⁄__


441 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

442 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

443 
__THROW
;

447 
__exãnsi⁄__


448 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

450 
__ba£
Ë
__THROW
;

453 #ifde‡
__USE_GNU


456 
__exãnsi⁄__


457 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

459 
__THROW
;

463 
__exãnsi⁄__


464 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

465 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

466 
__ba£
Ë
__THROW
;

469 #ifde‡
__USE_GNU


473 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

475 
loˇÀ_t
 
__loc
Ë
__THROW
;

477 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

478 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

479 
__ba£
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

481 
__exãnsi⁄__


482 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

483 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

484 
__ba£
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
, 
loˇÀ_t
 
__loc
)

490 
__THROW
;

492 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

493 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

494 
__THROW
;

496 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

497 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

498 
__THROW
;

500 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

502 
loˇÀ_t
 
__loc
Ë
__THROW
;

504 #i‡
__HAVE_FLOAT16


505 
_Flﬂt16
 
	$wc°of16_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
loˇÀ_t
 
__loc
Ë
__THROW
;

510 #i‡
__HAVE_FLOAT32


511 
_Flﬂt32
 
	$wc°of32_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

512 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

513 
loˇÀ_t
 
__loc
Ë
__THROW
;

516 #i‡
__HAVE_FLOAT64


517 
_Flﬂt64
 
	$wc°of64_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

518 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

519 
loˇÀ_t
 
__loc
Ë
__THROW
;

522 #i‡
__HAVE_FLOAT128


523 
_Flﬂt128
 
	$wc°of128_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

524 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

525 
loˇÀ_t
 
__loc
Ë
__THROW
;

528 #i‡
__HAVE_FLOAT32X


529 
_Flﬂt32x
 
	$wc°of32x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

530 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

531 
loˇÀ_t
 
__loc
Ë
__THROW
;

534 #i‡
__HAVE_FLOAT64X


535 
_Flﬂt64x
 
	$wc°of64x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

536 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

537 
loˇÀ_t
 
__loc
Ë
__THROW
;

540 #i‡
__HAVE_FLOAT128X


541 
_Flﬂt128x
 
	$wc°of128x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
loˇÀ_t
 
__loc
Ë
__THROW
;

548 #ifde‡
__USE_XOPEN2K8


551 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

552 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

556 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

557 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

558 
__THROW
;

564 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

567 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

570 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


573 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

580 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

581 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

587 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

590 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

591 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

592 
__THROW
 ;

598 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

599 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

600 
__gnuc_va_li°
 
__¨g
)

606 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

607 
__gnuc_va_li°
 
__¨g
)

611 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

612 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

613 
__gnuc_va_li°
 
__¨g
)

614 
__THROW
 ;

621 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

622 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

628 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

631 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

632 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

633 
__THROW
 ;

639 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

640 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

641 #ifde‡
__REDIRECT


642 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

643 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

644 
__isoc99_fwsˇnf
)

646 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

647 
__isoc99_wsˇnf
)

649 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

650 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

651 ...), 
__isoc99_swsˇnf
)

654 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

656 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

657 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

658 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

659 
__THROW
;

660 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

661 
	#wsˇnf
 
__isoc99_wsˇnf


	)

662 
	#swsˇnf
 
__isoc99_swsˇnf


	)

668 #ifde‡
__USE_ISOC99


673 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

674 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

675 
__gnuc_va_li°
 
__¨g
)

681 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

682 
__gnuc_va_li°
 
__¨g
)

685 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

686 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

687 
__gnuc_va_li°
 
__¨g
)

688 
__THROW
 ;

691 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
) \

692 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

693 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
) \

694 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

695 #ifde‡
__REDIRECT


696 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

697 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

700 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

703 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

704 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

705 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

708 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

709 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
);

711 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
);

713 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

716 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

717 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

718 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

729 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

730 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

736 
wöt_t
 
	`gëwch¨
 ();

743 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

758 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

759 
__FILE
 *
__ª°ri˘
 
__°ªam
);

765 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

766 
__FILE
 *
__ª°ri˘
 
__°ªam
);

773 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

776 #ifde‡
__USE_GNU


784 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

785 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

793 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

801 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

810 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

811 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

820 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

821 
__FILE
 *
__ª°ri˘
 
__°ªam
);

829 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

830 
__FILE
 *
__ª°ri˘
 
__°ªam
);

837 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

838 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

839 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

841 #ifde‡
__USE_GNU


844 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

845 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

846 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

847 
loˇÀ_t
 
__loc
Ë
__THROW
;

851 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


852 
	~<bôs/wch¨2.h
>

855 
	~<bôs/Êﬂä.h
>

856 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

857 
	~<bôs/wch¨-ldbl.h
>

860 
__END_DECLS


	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

26 
	`__glibc_objsize0
 (
__de°
));

27 
	}
}

29 
__f‹tify_fun˘i⁄
 

30 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

32 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
,

33 
	`__glibc_objsize0
 (
__de°
));

34 
	}
}

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


21 
	#__TIMESIZE
 64

	)

24 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 \

108 | 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/mbstate_t.h

1 #i‚de‡
__mb°©e_t_deföed


2 
	#__mb°©e_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__mb°©e_t.h
>

6 
__mb°©e_t
 
	tmb°©e_t
;

	@/usr/include/bits/types/wint_t.h

1 #i‚de‡
__wöt_t_deföed


2 
	#__wöt_t_deföed
 1

	)

9 #i‚de‡
_WINT_T


10 
	#_WINT_T
 1

	)

16 #i‚de‡
__WINT_TYPE__


17 
	#__WINT_TYPE__
 

	)

20 
__WINT_TYPE__
 
	twöt_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__SUSECONDS64_T_TYPE
 
__SQUAD_TYPE


	)

68 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

77 #ifde‡
__x86_64__


81 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

84 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

90 
	#__STATFS_MATCHES_STATFS64
 1

	)

93 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 1

	)

95 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

97 
	#__STATFS_MATCHES_STATFS64
 0

	)

99 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 0

	)

103 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

25 
__LDBL_REDIR_DECL
 (
w¥ötf
);

26 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

30 #i‡!
__GLIBC_USE
 (
DEPRECATED_SCANF
)

31 #i‡
deföed
 
__LDBL_COMPAT


32 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

35 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

36 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__isoc99_fwsˇnfõì128
)

37 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__isoc99_wsˇnfõì128
)

38 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__isoc99_swsˇnfõì128
)

40 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

43 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

44 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

45 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

49 #ifde‡
__USE_ISOC99


50 #ifde‡
__LDBL_COMPAT


51 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

53 
	$__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
__wc°oõì128
)

55 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

56 #i‡
deföed
 
__LDBL_COMPAT


57 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

58 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

59 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

60 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

61 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__isoc99_vfwsˇnfõì128
)

62 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__isoc99_vwsˇnfõì128
)

63 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__isoc99_vswsˇnfõì128
)

65 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

68 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

69 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

70 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

74 #ifde‡
__USE_GNU


75 #ifde‡
__LDBL_COMPAT


76 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

78 
	$__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
__wc°oõì128_l
)

82 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


83 
	$__LDBL_REDIR2_DECL
 (
sw¥ötf_chk
)

84 
	$__LDBL_REDIR2_DECL
 (
vsw¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR2_DECL
 (
fw¥ötf_chk
)

87 
	$__LDBL_REDIR2_DECL
 (
w¥ötf_chk
)

88 
	$__LDBL_REDIR2_DECL
 (
vfw¥ötf_chk
)

89 
	$__LDBL_REDIR2_DECL
 (
vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__glibc_objsize0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__glibc_objsize0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 (
	`__glibc_objsize0
 (
__s1
)

79 /  (
wch¨_t
)));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__glibc_objsize0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__glibc_objsize0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 (
	`__glibc_objsize0
 (
__s1
)

113 /  (
wch¨_t
)));

115  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

116 
	}
}

120 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

121 
size_t
 
__ns
Ë
__THROW
;

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

123 
size_t
 
__n
), 
wmem£t
);

124 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

125 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

126 
size_t
 
__ns
), 
__wmem£t_chk
)

127 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

130 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

131 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

133 i‡(
	`__glibc_objsize0
 (
__s
Ë!(
size_t
) -1)

135 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

136  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
,

137 
	`__glibc_objsize0
 (
__s
Ë/  (
wch¨_t
));

139 i‡(
__n
 > 
	`__glibc_objsize0
 (
__s
Ë/  (
wch¨_t
))

140  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

141 
	`__glibc_objsize0
 (
__s
Ë/  (
wch¨_t
));

143  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

144 
	}
}

147 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

149 
size_t
 
__n
Ë
__THROW
;

150 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

151 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

152 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

154 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

155 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

157 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

158  
	`__wcs˝y_chk
 (
__de°
, 
__§c
,

159 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

160  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

161 
	}
}

164 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

166 
size_t
 
__de°Àn
Ë
__THROW
;

167 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

168 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

169 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

171 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

172 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

174 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

175  
	`__w˝˝y_chk
 (
__de°
, 
__§c
,

176 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

177  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

178 
	}
}

181 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

183 
size_t
 
__de°Àn
Ë
__THROW
;

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
), 
wc¢˝y
);

188 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

189 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

190 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

191 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

192 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

195 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

196 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

197 
size_t
 
__n
))

199 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

201 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

202  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

203 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

204 i‡(
__n
 > 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
))

205  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

206 (
	`__glibc_objsize
 (
__de°
)

207 /  (
wch¨_t
)));

209  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

210 
	}
}

213 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

214 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

215 
size_t
 
__de°Àn
Ë
__THROW
;

216 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

217 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

218 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

219 
size_t
 
__n
), 
w˝n˝y
);

220 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

221 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

222 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

223 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

224 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

227 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

228 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

229 
size_t
 
__n
))

231 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

233 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

234  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

235 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

236 i‡(
__n
 > 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
))

237  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

238 (
	`__glibc_objsize
 (
__de°
)

239 /  (
wch¨_t
)));

241  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

242 
	}
}

245 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

246 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

247 
size_t
 
__de°Àn
Ë
__THROW
;

248 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

249 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

250 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

252 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

253 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

255 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

256  
	`__wcsˇt_chk
 (
__de°
, 
__§c
,

257 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

258  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

259 
	}
}

262 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

263 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

264 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

265 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

266 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

267 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

268 
size_t
 
__n
), 
wc¢ˇt
);

270 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

271 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

272 
size_t
 
__n
))

274 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1)

275  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

276 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

277  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

278 
	}
}

281 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

282 
__Êag
, 
size_t
 
__s_Àn
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

284 
__THROW
 ;

286 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

287 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

288 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

289 
sw¥ötf
);

291 #ifde‡
__va_¨g_∑ck


292 
__f‹tify_fun˘i⁄
 

293 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

294 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

296 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

297  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

298 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
),

299 
__fmt
, 
	`__va_¨g_∑ck
 ());

300  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

301 
	}
}

302 #ñi‡!
deföed
 
__˝lu•lus


304 
	#sw¥ötf
(
s
, 
n
, ...) \

305 (
	`__glibc_objsize
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

306 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

307 
	`__glibc_objsize
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

308 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

311 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__Êag
, 
size_t
 
__s_Àn
,

313 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

314 
__gnuc_va_li°
 
__¨g
)

315 
__THROW
 ;

317 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

318 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

319 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

320 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

322 
__f‹tify_fun˘i⁄
 

323 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

324 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

326 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

327  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

328 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
), 
__fmt
,

329 
__≠
);

330  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

331 
	}
}

334 #i‡
__USE_FORTIFY_LEVEL
 > 1

336 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

337 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

338 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

340 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

341 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

342 
__gnuc_va_li°
 
__≠
);

343 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

344 
__gnuc_va_li°
 
__≠
);

346 #ifde‡
__va_¨g_∑ck


347 
__f‹tify_fun˘i⁄
 

348 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

350  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

351 
	}
}

353 
__f‹tify_fun˘i⁄
 

354 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

356  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

357 
	`__va_¨g_∑ck
 ());

358 
	}
}

359 #ñi‡!
deföed
 
__˝lu•lus


360 
	#w¥ötf
(...) \

361 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

362 
	#fw¥ötf
(
°ªam
, ...) \

363 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

366 
__f‹tify_fun˘i⁄
 

367 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

369  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

370 
	}
}

372 
__f‹tify_fun˘i⁄
 

373 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

374 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

376  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

377 
	}
}

381 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

382 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

383 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

384 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

385 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

386 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

387 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

388 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

389 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

392 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

393 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

395 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1)

397 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

398  
	`__fgëws_chk
 (
__s
, 
	`__glibc_objsize
 (__sË/  (
wch¨_t
),

399 
__n
, 
__°ªam
);

401 i‡((
size_t
Ë
__n
 > 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
))

402  
	`__fgëws_chk_w¨n
 (
__s
,

403 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
),

404 
__n
, 
__°ªam
);

406  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

407 
	}
}

409 #ifde‡
__USE_GNU


410 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

411 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

412 
__wur
;

413 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

414 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

415 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

416 
__wur
;

417 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

418 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

419 
__FILE
 *
__ª°ri˘
 
__°ªam
),

420 
__fgëws_u∆ocked_chk
)

421 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

424 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

425 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

427 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1)

429 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

430  
	`__fgëws_u∆ocked_chk
 (
__s
,

431 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
),

432 
__n
, 
__°ªam
);

434 i‡((
size_t
Ë
__n
 > 
	`__glibc_objsize
 (
__s
Ë/  (
wch¨_t
))

435  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
,

436 (
	`__glibc_objsize
 (
__s
)

437 /  (
wch¨_t
)),

438 
__n
, 
__°ªam
);

440  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

441 
	}
}

445 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

446 
mb°©e_t
 *
__ª°ri˘
 
__p
,

447 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

448 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

449 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

450 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

452 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


453 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

454 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

459 
	#__WCHAR_MB_LEN_MAX
 16

	)

460 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


463 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

464 && 
__WCHAR_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

465  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__glibc_objsize
 (__s));

466  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

467 
	}
}

470 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

471 c⁄° **
__ª°ri˘
 
__§c
,

472 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

473 
size_t
 
__d°Àn
Ë
__THROW
;

474 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

475 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

476 c⁄° **
__ª°ri˘
 
__§c
,

477 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

478 
mb§towcs
);

479 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

480 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

481 c⁄° **
__ª°ri˘
 
__§c
,

482 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

483 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

484 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

487 
__f‹tify_fun˘i⁄
 
size_t


488 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

489 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

491 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

493 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

494  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

495 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
));

497 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
))

498  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

499 (
	`__glibc_objsize
 (
__d°
)

500 /  (
wch¨_t
)));

502  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

503 
	}
}

506 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

507 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

508 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

509 
size_t
 
__d°Àn
Ë
__THROW
;

510 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

511 (*
__ª°ri˘
 
__d°
,

512 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

513 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

514 
wc§tombs
);

515 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

516 (*
__ª°ri˘
 
__d°
,

517 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

518 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

519 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

520 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

522 
__f‹tify_fun˘i⁄
 
size_t


523 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

524 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

526 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

528 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

529  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

530 
	`__glibc_objsize
 (
__d°
));

532 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
))

533  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

534 
	`__glibc_objsize
 (
__d°
));

536  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

537 
	}
}

540 #ifde‡
__USE_GNU


541 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

542 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

543 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

544 
size_t
 
__d°Àn
Ë
__THROW
;

545 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

546 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

547 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

548 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

549 
mb¢πowcs
);

550 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

551 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

552 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

553 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

554 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

555 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

558 
__f‹tify_fun˘i⁄
 
size_t


559 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

560 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

562 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

564 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

565  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

566 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
));

568 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
Ë/  (
wch¨_t
))

569  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

570 (
	`__glibc_objsize
 (
__d°
)

571 /  (
wch¨_t
)));

573  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

574 
	}
}

577 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

578 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
,

580 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

581 
__THROW
;

582 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

583 (*
__ª°ri˘
 
__d°
,

584 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

585 
size_t
 
__nwc
, size_à
__Àn
,

586 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

587 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

588 (*
__ª°ri˘
 
__d°
,

589 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

590 
size_t
 
__nwc
, size_à
__Àn
,

591 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

592 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

593 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

595 
__f‹tify_fun˘i⁄
 
size_t


596 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

597 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

599 i‡(
	`__glibc_objsize
 (
__d°
Ë!(
size_t
) -1)

601 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

602  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

603 
	`__glibc_objsize
 (
__d°
));

605 i‡(
__Àn
 > 
	`__glibc_objsize
 (
__d°
))

606  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

607 
	`__glibc_objsize
 (
__d°
));

609  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

610 
	}
}

	@/usr/include/bits/wctype-wchar.h

23 #i‚de‡
_BITS_WCTYPE_WCHAR_H


24 
	#_BITS_WCTYPE_WCHAR_H
 1

	)

26 #i‡!
deföed
 
_WCTYPE_H
 && !deföed 
_WCHAR_H


30 
	~<bôs/ty≥s.h
>

31 
	~<bôs/ty≥s/wöt_t.h
>

38 
	tw˘y≥_t
;

40 #i‚de‡
_ISwbô


45 
	~<bôs/ídün.h
>

46 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


47 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

49 
	#_ISwbô
(
bô
) \

50 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

51 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

52 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

53 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

58 
	m__ISwuµî
 = 0,

59 
	m__ISwlowî
 = 1,

60 
	m__ISwÆpha
 = 2,

61 
	m__ISwdigô
 = 3,

62 
	m__ISwxdigô
 = 4,

63 
	m__ISw•a˚
 = 5,

64 
	m__ISw¥öt
 = 6,

65 
	m__ISwgøph
 = 7,

66 
	m__ISwbœnk
 = 8,

67 
	m__ISw˙ål
 = 9,

68 
	m__ISwpun˘
 = 10,

69 
	m__ISwÆnum
 = 11,

71 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

72 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

73 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

74 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

75 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

76 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

77 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

78 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

79 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

80 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

81 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

82 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

87 
__BEGIN_DECLS


95 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

101 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

104 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

108 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

112 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

130 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

140 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

145 #ifde‡
__USE_ISOC99


146 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

159 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

166 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

169 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
__END_DECLS


	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 #i‡
__˝lu•lus
 >= 201103L

62 
	#__THROW
 
	`n€x˚±
 (
åue
)

	)

64 
	#__THROW
 
	`throw
 ()

	)

66 
	#__THROWNL
 
__THROW


	)

67 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
__THROW


	)

68 
	#__NTHNL
(
f˘
Ëf˘ 
__THROW


	)

70 
	#__THROW


	)

71 
	#__THROWNL


	)

72 
	#__NTH
(
f˘
Ë
	)
fct

73 
	#__NTHNL
(
f˘
Ë
	)
fct

79 #i‡(
deföed
 
__˝lu•lus
 \

80 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

81 
	#__ölöe
 
ölöe


	)

83 
	#__ölöe


	)

86 
	#__THROW


	)

87 
	#__THROWNL


	)

88 
	#__NTH
(
f˘
Ë
	)
fct

95 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


96 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

98 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

103 
	#__P
(
¨gs
Ë
	)
args

104 
	#__PMT
(
¨gs
Ë
	)
args

109 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

110 
	#__STRING
(
x
Ë#x

	)

113 
	#__±r_t
 *

	)

117 #ifdef 
__˝lu•lus


118 
	#__BEGIN_DECLS
 "C" {

	)

119 
	#__END_DECLS
 }

	)

121 
	#__BEGIN_DECLS


	)

122 
	#__END_DECLS


	)

127 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

128 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

131 #i‡
__USE_FORTIFY_LEVEL
 =3 && 
__glibc_˛™g_¥îeq
 (9, 0)

132 
	#__glibc_objsize0
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 0)

	)

133 
	#__glibc_objsize
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 1)

	)

135 
	#__glibc_objsize0
(
__o
Ë
	`__bos0
 (__o)

	)

136 
	#__glibc_objsize
(
__o
Ë
	`__bos
 (__o)

	)

139 #i‡
__GNUC_PREREQ
 (4,3)

140 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

141 
	#__îr‹de˛
(
«me
, 
msg
) \

142 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

152 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

153 
	#__Êex¨r
 []

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

155 #ñi‡
__GNUC_PREREQ
 (2,97)

158 
	#__Êex¨r
 []

	)

159 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

160 #ñi‡
deföed
 
__GNUC__


163 
	#__Êex¨r
 [0]

	)

164 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

167 
	#__Êex¨r
 [1]

	)

168 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

182 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

184 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 #ifde‡
__˝lu•lus


186 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

187 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

188 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

189 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

191 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

192 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

193 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

196 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

197 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

210 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

211 
	#__©åibuã__
(
xyz
Ë

	)

217 #i‡
__GNUC_PREREQ
 (2,96)

218 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

220 
	#__©åibuã_mÆloc__


	)

225 #i‡
__GNUC_PREREQ
 (4, 3)

226 
	#__©åibuã_Æloc_size__
(
∑øms
) \

227 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

229 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

235 #i‡
__GNUC_PREREQ
 (2,96)

236 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

238 
	#__©åibuã_puª__


	)

242 #i‡
__GNUC_PREREQ
 (2,5)

243 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

245 
	#__©åibuã_c⁄°__


	)

251 #i‡
__GNUC_PREREQ
 (3,1)

252 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

253 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

255 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

256 
	#__©åibuã_noölöe__


	)

260 #i‡
__GNUC_PREREQ
 (3,2)

261 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

263 
	#__©åibuã_dïªˇãd__


	)

269 #i‡
__GNUC_PREREQ
 (4,5) \

270 || 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

271 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

272 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

274 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

283 #i‡
	`__GNUC_PREREQ
 (2,8)

284 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

286 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

293 #i‡
	`__GNUC_PREREQ
 (2,97)

294 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

295 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

297 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

302 #i‡
	`__GNUC_PREREQ
 (3,3)

303 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

305 
	#__n⁄nuŒ
(
∑øms
)

	)

310 #i‡
	`__GNUC_PREREQ
 (3,4)

311 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

312 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

313 #i‡
__USE_FORTIFY_LEVEL
 > 0

314 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

317 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

319 #i‚de‡
__wur


320 
	#__wur


	)

324 #i‡
	`__GNUC_PREREQ
 (3,2)

328 #unde‡
__Æways_ölöe


329 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

331 #unde‡
__Æways_ölöe


332 
	#__Æways_ölöe
 
__ölöe


	)

337 #i‡
	`__GNUC_PREREQ
 (4,3)

338 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

340 
	#__©åibuã_¨tificül__


	)

352 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

353 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

354 || 
deföed
 
__GNUC_GNU_INLINE__
)))

355 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


356 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

357 
	#__exã∫_Æways_ölöe
 \

358 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

360 
	#__exã∫_ölöe
 
__ölöe


	)

361 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

365 #ifde‡
__exã∫_Æways_ölöe


366 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

371 #i‡
	`__GNUC_PREREQ
 (4,3)

372 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

373 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

380 #i‡!
	`__GNUC_PREREQ
 (2,8)

381 
	#__exãnsi⁄__


	)

385 #i‡!
	`__GNUC_PREREQ
 (2,92)

386 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

387 
	#__ª°ri˘
 
ª°ri˘


	)

389 
	#__ª°ri˘


	)

396 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


397 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

399 #ifde‡
__GNUC__


400 
	#__ª°ri˘_¨r


	)

402 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

403 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

406 
	#__ª°ri˘_¨r


	)

411 #i‡
__GNUC__
 >= 3

412 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

413 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

415 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

416 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

419 #ifde‡
__has_©åibuã


420 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

422 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

425 #i‡(!
deföed
 
_N‹ëu∫
 \

426 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

427 && !
	$__GNUC_PREREQ
 (4,7))

428 #i‡
	`__GNUC_PREREQ
 (2,8)

429 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

431 
	#_N‹ëu∫


	)

435 #i‡
	`__GNUC_PREREQ
 (8, 0)

439 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

441 
	#__©åibuã_n⁄°rög__


	)

445 #unde‡
__©åibuã_c›y__


446 #i‡
	`__GNUC_PREREQ
 (9, 0)

449 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

451 
	#__©åibuã_c›y__
(
¨g
)

	)

454 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

455 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

456 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

457 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

458 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

459 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

462 
	~<bôs/w‹dsize.h
>

463 
	~<bôs/l⁄g-doubÀ.h
>

465 #i‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

466 #ifde‡
__REDIRECT


469 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú


	)

470 
	#__LDBL_REDIR_DECL
(
«me
) \

471 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

474 
	#__LDBL_REDIR2_DECL
(
«me
) \

475 
	`__ty≥of
 (
__
##
«me
) __##name \

476 
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

479 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ldbl_ªdú1


	)

480 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

481 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

483 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

484 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

485 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

486 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__
##
Æüs
##
õì128
)

	)

489 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ªdúe˘_ldbl


	)

490 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú_¡h


	)

493 
	`_Sètic_as£π
 (0, "IEEE 128-bitsÜong doubleÑequiresÑedirection onÅhisÖlatform");

495 #ñi‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


496 
	#__LDBL_COMPAT
 1

	)

497 #ifde‡
__REDIRECT


498 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

499 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

500 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

501 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

502 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

503 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

504 
	#__LDBL_REDIR2_DECL
(
«me
) \

505 
	`__ty≥of
 (
__
##
«me
Ë__##«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl___" #«me));

	)

506 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

507 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

508 
	#__LDBL_REDIR_DECL
(
«me
) \

509 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

510 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

511 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

512 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

513 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

516 #i‡(!
deföed
 
__LDBL_COMPAT
 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0) \

517 || !
deföed
 
__REDIRECT


518 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

519 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

520 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

521 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

522 
	#__LDBL_REDIR2_DECL
(
«me
)

	)

523 
	#__LDBL_REDIR_DECL
(
«me
)

	)

524 #ifde‡
__REDIRECT


525 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

526 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

527 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

536 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

537 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

538 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

539 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

541 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

551 #i‡!
deföed
 
__˝lu•lus
 \

552 && (
	`__GNUC_PREREQ
 (4, 9) \

553 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

554 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

555 && 
__STDC_VERSION__
 >= 201112L))

556 
	#__HAVE_GENERIC_SELECTION
 1

	)

558 
	#__HAVE_GENERIC_SELECTION
 0

	)

561 #i‡
	`__GNUC_PREREQ
 (10, 0)

567 
	#__©å_ac˚ss
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

569 
	#__©å_ac˚ss
(
x
)

	)

574 #i‡
	`__GNUC_PREREQ
 (4, 1)

575 
	#__©åibuã_ªtu∫s_twi˚__
 
	`__©åibuã__
 ((
__ªtu∫s_twi˚__
))

	)

577 
	#__©åibuã_ªtu∫s_twi˚__


	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/long-double.h

21 
	#__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 0

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

49 
	s__±hªad_öã∫Æ_li°


51 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

52 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

53 } 
	t__±hªad_li°_t
;

55 
	s__±hªad_öã∫Æ_¶i°


57 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

58 } 
	t__±hªad_¶i°_t
;

74 
	~<bôs/°ru˘_muãx.h
>

87 
	~<bôs/°ru˘_rwlock.h
>

92 
	s__±hªad_c⁄d_s


94 
__exãnsi⁄__
 union

96 
__exãnsi⁄__
 
	m__w£q
;

99 
	m__low
;

100 
	m__high
;

101 } 
	m__w£q32
;

103 
__exãnsi⁄__
 union

105 
__exãnsi⁄__
 
	m__g1_°¨t
;

108 
	m__low
;

109 
	m__high
;

110 } 
	m__g1_°¨t32
;

112 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

113 
	m__g_size
[2];

114 
	m__g1_‹ig_size
;

115 
	m__wªfs
;

116 
	m__g_sig«ls
[2];

119 
	t__tss_t
;

120 
	t__thrd_t
;

124 
__d©a
 
	m__ONCE_ALIGNMENT
;

125 } 
	t__⁄˚_Êag
;

127 
	#__ONCE_FLAG_INIT
 { 0 }

	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_fchÊags


	)

12 
	#__°ub_gây


	)

13 
	#__°ub_ªvoke


	)

14 
	#__°ub_£éogö


	)

15 
	#__°ub_sigªtu∫


	)

16 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_°ty


	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@
1
.
1
/usr/include
106
2942
block.c
block.h
board.c
board.h
circular_buffer.c
circular_buffer.h
render.c
render.h
tetris.c
util.c
util.h
window.c
window.h
/usr/include/assert.h
/usr/include/curses.h
/usr/include/locale.h
/usr/include/ncurses.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/floatn.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/locale.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/features.h
/usr/include/ncurses_dll.h
/usr/include/stdint.h
/usr/include/strings.h
/usr/include/sys/types.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/bits/endian.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/mbstate_t.h
/usr/include/bits/types/wint_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/bits/wctype-wchar.h
/usr/include/bits/wordsize.h
/usr/include/endian.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/bits/byteswap.h
/usr/include/bits/endianness.h
/usr/include/bits/long-double.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/__sigset_t.h
